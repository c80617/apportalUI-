// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brahma.proto

package brahma.vmi.covid2019.protocol;

public final class BRAHMAProtocol {
  private BRAHMAProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code brahma.IntentAction}
   */
  public enum IntentAction
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ACTION_VIEW = 1;</code>
     */
    ACTION_VIEW(1),
    /**
     * <code>ACTION_DIAL = 2;</code>
     */
    ACTION_DIAL(2),
    /**
     * <code>ACTION_SEND = 3;</code>
     */
    ACTION_SEND(3),
    /**
     * <code>ACTION_AUDIO_START = 4;</code>
     */
    ACTION_AUDIO_START(4),
    /**
     * <code>ACTION_AUDIO_STOP = 5;</code>
     */
    ACTION_AUDIO_STOP(5),
    ;

    /**
     * <code>ACTION_VIEW = 1;</code>
     */
    public static final int ACTION_VIEW_VALUE = 1;
    /**
     * <code>ACTION_DIAL = 2;</code>
     */
    public static final int ACTION_DIAL_VALUE = 2;
    /**
     * <code>ACTION_SEND = 3;</code>
     */
    public static final int ACTION_SEND_VALUE = 3;
    /**
     * <code>ACTION_AUDIO_START = 4;</code>
     */
    public static final int ACTION_AUDIO_START_VALUE = 4;
    /**
     * <code>ACTION_AUDIO_STOP = 5;</code>
     */
    public static final int ACTION_AUDIO_STOP_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IntentAction valueOf(int value) {
      return forNumber(value);
    }

    public static IntentAction forNumber(int value) {
      switch (value) {
        case 1: return ACTION_VIEW;
        case 2: return ACTION_DIAL;
        case 3: return ACTION_SEND;
        case 4: return ACTION_AUDIO_START;
        case 5: return ACTION_AUDIO_STOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IntentAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IntentAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IntentAction>() {
            public IntentAction findValueByNumber(int number) {
              return IntentAction.forNumber(number);
            }
          };

    private final int value;

    private IntentAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:brahma.IntentAction)
  }

  /**
   * <pre>
   * Synced with android.hardware.Sensor
   * </pre>
   *
   * Protobuf enum {@code brahma.SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ACCELEROMETER = 1;</code>
     */
    ACCELEROMETER(1),
    /**
     * <code>MAGNETIC_FIELD = 2;</code>
     */
    MAGNETIC_FIELD(2),
    /**
     * <code>ORIENTATION = 3;</code>
     */
    ORIENTATION(3),
    /**
     * <code>GYROSCOPE = 4;</code>
     */
    GYROSCOPE(4),
    /**
     * <code>LIGHT = 5;</code>
     */
    LIGHT(5),
    /**
     * <code>PRESSURE = 6;</code>
     */
    PRESSURE(6),
    /**
     * <code>TEMPERATURE = 7;</code>
     */
    TEMPERATURE(7),
    /**
     * <code>PROXIMITY = 8;</code>
     */
    PROXIMITY(8),
    /**
     * <code>GRAVITY = 9;</code>
     */
    GRAVITY(9),
    /**
     * <code>LINEAR_ACCELERATION = 10;</code>
     */
    LINEAR_ACCELERATION(10),
    /**
     * <code>ROTATION_VECTOR = 11;</code>
     */
    ROTATION_VECTOR(11),
    /**
     * <code>RELATIVE_HUMIDITY = 12;</code>
     */
    RELATIVE_HUMIDITY(12),
    /**
     * <code>AMBIENT_TEMPERATURE = 13;</code>
     */
    AMBIENT_TEMPERATURE(13),
    ;

    /**
     * <code>ACCELEROMETER = 1;</code>
     */
    public static final int ACCELEROMETER_VALUE = 1;
    /**
     * <code>MAGNETIC_FIELD = 2;</code>
     */
    public static final int MAGNETIC_FIELD_VALUE = 2;
    /**
     * <code>ORIENTATION = 3;</code>
     */
    public static final int ORIENTATION_VALUE = 3;
    /**
     * <code>GYROSCOPE = 4;</code>
     */
    public static final int GYROSCOPE_VALUE = 4;
    /**
     * <code>LIGHT = 5;</code>
     */
    public static final int LIGHT_VALUE = 5;
    /**
     * <code>PRESSURE = 6;</code>
     */
    public static final int PRESSURE_VALUE = 6;
    /**
     * <code>TEMPERATURE = 7;</code>
     */
    public static final int TEMPERATURE_VALUE = 7;
    /**
     * <code>PROXIMITY = 8;</code>
     */
    public static final int PROXIMITY_VALUE = 8;
    /**
     * <code>GRAVITY = 9;</code>
     */
    public static final int GRAVITY_VALUE = 9;
    /**
     * <code>LINEAR_ACCELERATION = 10;</code>
     */
    public static final int LINEAR_ACCELERATION_VALUE = 10;
    /**
     * <code>ROTATION_VECTOR = 11;</code>
     */
    public static final int ROTATION_VECTOR_VALUE = 11;
    /**
     * <code>RELATIVE_HUMIDITY = 12;</code>
     */
    public static final int RELATIVE_HUMIDITY_VALUE = 12;
    /**
     * <code>AMBIENT_TEMPERATURE = 13;</code>
     */
    public static final int AMBIENT_TEMPERATURE_VALUE = 13;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorType valueOf(int value) {
      return forNumber(value);
    }

    public static SensorType forNumber(int value) {
      switch (value) {
        case 1: return ACCELEROMETER;
        case 2: return MAGNETIC_FIELD;
        case 3: return ORIENTATION;
        case 4: return GYROSCOPE;
        case 5: return LIGHT;
        case 6: return PRESSURE;
        case 7: return TEMPERATURE;
        case 8: return PROXIMITY;
        case 9: return GRAVITY;
        case 10: return LINEAR_ACCELERATION;
        case 11: return ROTATION_VECTOR;
        case 12: return RELATIVE_HUMIDITY;
        case 13: return AMBIENT_TEMPERATURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.forNumber(number);
            }
          };

    private final int value;

    private SensorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:brahma.SensorType)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Request)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType getType();

    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent>
        getTouchList();
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent getTouch(int index);
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    int getTouchCount();

    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent>
        getSensorList();
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent getSensor(int index);
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    int getSensorCount();

    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    boolean hasLocationRequest();
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest getLocationRequest();

    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    boolean hasIntent();
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent();

    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    boolean hasWebrtcMsg();
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg();

    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    boolean hasRotationInfo();
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo getRotationInfo();

    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    boolean hasPingRequest();
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingRequest();

    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    boolean hasVideoInfo();
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo();

    /**
     * <code>optional string timezoneId = 13;</code>
     */
    boolean hasTimezoneId();
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    java.lang.String getTimezoneId();
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    com.google.protobuf.ByteString
        getTimezoneIdBytes();

    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    boolean hasApps();
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest getApps();

    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    boolean hasKey();
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent getKey();

    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    boolean hasConfig();
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config getConfig();

    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    boolean hasFileRequest();
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest getFileRequest();

    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    boolean hasVKeyboardReq();
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq getVKeyboardReq();

    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    boolean hasUnconnectedRequest();
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedRequest();

    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    boolean hasQRstringReq();
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq getQRstringReq();

    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    boolean hasScreenInfoClient();
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient getScreenInfoClient();

    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    boolean hasSmartCard();
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard();

    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    boolean hasRDPInfo();
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo();
  }
  /**
   * <pre>
   * Client to server message wrapper
   * </pre>
   *
   * Protobuf type {@code brahma.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageLite<
          Request, Request.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Request)
      RequestOrBuilder {
    private Request() {
      touch_ = emptyProtobufList();
      sensor_ = emptyProtobufList();
      timezoneId_ = "";
    }
    /**
     * Protobuf enum {@code brahma.Request.RequestType}
     */
    public enum RequestType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>VIDEO_PARAMS = 0;</code>
       */
      VIDEO_PARAMS(0),
      /**
       * <code>TOUCHEVENT = 1;</code>
       */
      TOUCHEVENT(1),
      /**
       * <code>SENSOREVENT = 2;</code>
       */
      SENSOREVENT(2),
      /**
       * <code>LOCATION = 3;</code>
       */
      LOCATION(3),
      /**
       * <code>INTENT = 4;</code>
       */
      INTENT(4),
      /**
       * <code>SCREENINFO = 5;</code>
       */
      SCREENINFO(5),
      /**
       * <code>WEBRTC = 6;</code>
       */
      WEBRTC(6),
      /**
       * <code>ROTATION_INFO = 7;</code>
       */
      ROTATION_INFO(7),
      /**
       * <pre>
       * client-initiated ping measurement (ms)
       * </pre>
       *
       * <code>PING = 8;</code>
       */
      PING(8),
      /**
       * <code>TIMEZONE = 9;</code>
       */
      TIMEZONE(9),
      /**
       * <pre>
       * client request for available apps on the VM
       * </pre>
       *
       * <code>APPS = 10;</code>
       */
      APPS(10),
      /**
       * <code>KEYEVENT = 11;</code>
       */
      KEYEVENT(11),
      /**
       * <code>CONFIG = 12;</code>
       */
      CONFIG(12),
      /**
       * <pre>
       * File sync back request
       * </pre>
       *
       * <code>FILE_REQUEST = 13;</code>
       */
      FILE_REQUEST(13),
      /**
       * <pre>
       *request from client to server to test vm keyboard
       * </pre>
       *
       * <code>VKeyboardReq = 14;</code>
       */
      VKeyboardReq(14),
      /**
       * <pre>
       * client-unconnected
       * </pre>
       *
       * <code>UNCONNECTED = 15;</code>
       */
      UNCONNECTED(15),
      /**
       * <pre>
       * QRstring result
       * </pre>
       *
       * <code>QRstringReq = 16;</code>
       */
      QRstringReq(16),
      /**
       * <pre>
       * remote Smart Card
       * </pre>
       *
       * <code>SMART_CARD = 17;</code>
       */
      SMART_CARD(17),
      /**
       * <pre>
       *use for RDP login
       * </pre>
       *
       * <code>RDP = 18;</code>
       */
      RDP(18),
      ;

      /**
       * <code>VIDEO_PARAMS = 0;</code>
       */
      public static final int VIDEO_PARAMS_VALUE = 0;
      /**
       * <code>TOUCHEVENT = 1;</code>
       */
      public static final int TOUCHEVENT_VALUE = 1;
      /**
       * <code>SENSOREVENT = 2;</code>
       */
      public static final int SENSOREVENT_VALUE = 2;
      /**
       * <code>LOCATION = 3;</code>
       */
      public static final int LOCATION_VALUE = 3;
      /**
       * <code>INTENT = 4;</code>
       */
      public static final int INTENT_VALUE = 4;
      /**
       * <code>SCREENINFO = 5;</code>
       */
      public static final int SCREENINFO_VALUE = 5;
      /**
       * <code>WEBRTC = 6;</code>
       */
      public static final int WEBRTC_VALUE = 6;
      /**
       * <code>ROTATION_INFO = 7;</code>
       */
      public static final int ROTATION_INFO_VALUE = 7;
      /**
       * <pre>
       * client-initiated ping measurement (ms)
       * </pre>
       *
       * <code>PING = 8;</code>
       */
      public static final int PING_VALUE = 8;
      /**
       * <code>TIMEZONE = 9;</code>
       */
      public static final int TIMEZONE_VALUE = 9;
      /**
       * <pre>
       * client request for available apps on the VM
       * </pre>
       *
       * <code>APPS = 10;</code>
       */
      public static final int APPS_VALUE = 10;
      /**
       * <code>KEYEVENT = 11;</code>
       */
      public static final int KEYEVENT_VALUE = 11;
      /**
       * <code>CONFIG = 12;</code>
       */
      public static final int CONFIG_VALUE = 12;
      /**
       * <pre>
       * File sync back request
       * </pre>
       *
       * <code>FILE_REQUEST = 13;</code>
       */
      public static final int FILE_REQUEST_VALUE = 13;
      /**
       * <pre>
       *request from client to server to test vm keyboard
       * </pre>
       *
       * <code>VKeyboardReq = 14;</code>
       */
      public static final int VKeyboardReq_VALUE = 14;
      /**
       * <pre>
       * client-unconnected
       * </pre>
       *
       * <code>UNCONNECTED = 15;</code>
       */
      public static final int UNCONNECTED_VALUE = 15;
      /**
       * <pre>
       * QRstring result
       * </pre>
       *
       * <code>QRstringReq = 16;</code>
       */
      public static final int QRstringReq_VALUE = 16;
      /**
       * <pre>
       * remote Smart Card
       * </pre>
       *
       * <code>SMART_CARD = 17;</code>
       */
      public static final int SMART_CARD_VALUE = 17;
      /**
       * <pre>
       *use for RDP login
       * </pre>
       *
       * <code>RDP = 18;</code>
       */
      public static final int RDP_VALUE = 18;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestType valueOf(int value) {
        return forNumber(value);
      }

      public static RequestType forNumber(int value) {
        switch (value) {
          case 0: return VIDEO_PARAMS;
          case 1: return TOUCHEVENT;
          case 2: return SENSOREVENT;
          case 3: return LOCATION;
          case 4: return INTENT;
          case 5: return SCREENINFO;
          case 6: return WEBRTC;
          case 7: return ROTATION_INFO;
          case 8: return PING;
          case 9: return TIMEZONE;
          case 10: return APPS;
          case 11: return KEYEVENT;
          case 12: return CONFIG;
          case 13: return FILE_REQUEST;
          case 14: return VKeyboardReq;
          case 15: return UNCONNECTED;
          case 16: return QRstringReq;
          case 17: return SMART_CARD;
          case 18: return RDP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RequestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
              public RequestType findValueByNumber(int number) {
                return RequestType.forNumber(number);
              }
            };

      private final int value;

      private RequestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.Request.RequestType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType.VIDEO_PARAMS : result;
    }
    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.Request.RequestType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public static final int TOUCH_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent> touch_;
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent> getTouchList() {
      return touch_;
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEventOrBuilder>
        getTouchOrBuilderList() {
      return touch_;
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    public int getTouchCount() {
      return touch_.size();
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent getTouch(int index) {
      return touch_.get(index);
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEventOrBuilder getTouchOrBuilder(
        int index) {
      return touch_.get(index);
    }
    private void ensureTouchIsMutable() {
      if (!touch_.isModifiable()) {
        touch_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(touch_);
       }
    }

    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void setTouch(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTouchIsMutable();
      touch_.set(index, value);
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void setTouch(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
      ensureTouchIsMutable();
      touch_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void addTouch(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTouchIsMutable();
      touch_.add(value);
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void addTouch(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTouchIsMutable();
      touch_.add(index, value);
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void addTouch(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
      ensureTouchIsMutable();
      touch_.add(builderForValue.build());
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void addTouch(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
      ensureTouchIsMutable();
      touch_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void addAllTouch(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent> values) {
      ensureTouchIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, touch_);
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void clearTouch() {
      touch_ = emptyProtobufList();
    }
    /**
     * <pre>
     * repeated to allow batching multiple events in a single message
     * </pre>
     *
     * <code>repeated .brahma.TouchEvent touch = 2;</code>
     */
    private void removeTouch(int index) {
      ensureTouchIsMutable();
      touch_.remove(index);
    }

    public static final int SENSOR_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent> sensor_;
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent> getSensorList() {
      return sensor_;
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEventOrBuilder>
        getSensorOrBuilderList() {
      return sensor_;
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    public int getSensorCount() {
      return sensor_.size();
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent getSensor(int index) {
      return sensor_.get(index);
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEventOrBuilder getSensorOrBuilder(
        int index) {
      return sensor_.get(index);
    }
    private void ensureSensorIsMutable() {
      if (!sensor_.isModifiable()) {
        sensor_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sensor_);
       }
    }

    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void setSensor(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSensorIsMutable();
      sensor_.set(index, value);
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void setSensor(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
      ensureSensorIsMutable();
      sensor_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void addSensor(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSensorIsMutable();
      sensor_.add(value);
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void addSensor(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSensorIsMutable();
      sensor_.add(index, value);
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void addSensor(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
      ensureSensorIsMutable();
      sensor_.add(builderForValue.build());
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void addSensor(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
      ensureSensorIsMutable();
      sensor_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void addAllSensor(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent> values) {
      ensureSensorIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sensor_);
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void clearSensor() {
      sensor_ = emptyProtobufList();
    }
    /**
     * <code>repeated .brahma.SensorEvent sensor = 3;</code>
     */
    private void removeSensor(int index) {
      ensureSensorIsMutable();
      sensor_.remove(index);
    }

    public static final int LOCATIONREQUEST_FIELD_NUMBER = 6;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest locationRequest_;
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    public boolean hasLocationRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest getLocationRequest() {
      return locationRequest_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.getDefaultInstance() : locationRequest_;
    }
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    private void setLocationRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      locationRequest_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    private void setLocationRequest(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.Builder builderForValue) {
      locationRequest_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    private void mergeLocationRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest value) {
      if (locationRequest_ != null &&
          locationRequest_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.getDefaultInstance()) {
        locationRequest_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.newBuilder(locationRequest_).mergeFrom(value).buildPartial();
      } else {
        locationRequest_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
     */
    private void clearLocationRequest() {  locationRequest_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int INTENT_FIELD_NUMBER = 7;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent intent_;
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    public boolean hasIntent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent() {
      return intent_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.getDefaultInstance() : intent_;
    }
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    private void setIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      intent_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    private void setIntent(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder builderForValue) {
      intent_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    private void mergeIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
      if (intent_ != null &&
          intent_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.getDefaultInstance()) {
        intent_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.newBuilder(intent_).mergeFrom(value).buildPartial();
      } else {
        intent_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.Intent intent = 7;</code>
     */
    private void clearIntent() {  intent_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int WEBRTCMSG_FIELD_NUMBER = 9;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage webrtcMsg_;
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    public boolean hasWebrtcMsg() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg() {
      return webrtcMsg_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.getDefaultInstance() : webrtcMsg_;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    private void setWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      webrtcMsg_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    private void setWebrtcMsg(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder builderForValue) {
      webrtcMsg_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    private void mergeWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
      if (webrtcMsg_ != null &&
          webrtcMsg_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.getDefaultInstance()) {
        webrtcMsg_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.newBuilder(webrtcMsg_).mergeFrom(value).buildPartial();
      } else {
        webrtcMsg_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
     */
    private void clearWebrtcMsg() {  webrtcMsg_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ROTATIONINFO_FIELD_NUMBER = 10;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo rotationInfo_;
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    public boolean hasRotationInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo getRotationInfo() {
      return rotationInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.getDefaultInstance() : rotationInfo_;
    }
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    private void setRotationInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rotationInfo_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    private void setRotationInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.Builder builderForValue) {
      rotationInfo_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    private void mergeRotationInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo value) {
      if (rotationInfo_ != null &&
          rotationInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.getDefaultInstance()) {
        rotationInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.newBuilder(rotationInfo_).mergeFrom(value).buildPartial();
      } else {
        rotationInfo_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
     */
    private void clearRotationInfo() {  rotationInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int PINGREQUEST_FIELD_NUMBER = 11;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping pingRequest_;
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    public boolean hasPingRequest() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingRequest() {
      return pingRequest_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.getDefaultInstance() : pingRequest_;
    }
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    private void setPingRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pingRequest_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    private void setPingRequest(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder builderForValue) {
      pingRequest_ = builderForValue.build();
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    private void mergePingRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
      if (pingRequest_ != null &&
          pingRequest_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.getDefaultInstance()) {
        pingRequest_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.newBuilder(pingRequest_).mergeFrom(value).buildPartial();
      } else {
        pingRequest_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .brahma.Ping pingRequest = 11;</code>
     */
    private void clearPingRequest() {  pingRequest_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int VIDEOINFO_FIELD_NUMBER = 12;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo videoInfo_;
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    public boolean hasVideoInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo() {
      return videoInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.getDefaultInstance() : videoInfo_;
    }
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    private void setVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      videoInfo_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    private void setVideoInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder builderForValue) {
      videoInfo_ = builderForValue.build();
      bitField0_ |= 0x00000040;
    }
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    private void mergeVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
      if (videoInfo_ != null &&
          videoInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.getDefaultInstance()) {
        videoInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.newBuilder(videoInfo_).mergeFrom(value).buildPartial();
      } else {
        videoInfo_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <pre>
     * server-&gt;VM message
     * </pre>
     *
     * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
     */
    private void clearVideoInfo() {  videoInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int TIMEZONEID_FIELD_NUMBER = 13;
    private java.lang.String timezoneId_;
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    public boolean hasTimezoneId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    public java.lang.String getTimezoneId() {
      return timezoneId_;
    }
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    public com.google.protobuf.ByteString
        getTimezoneIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(timezoneId_);
    }
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    private void setTimezoneId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      timezoneId_ = value;
    }
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    private void clearTimezoneId() {
      bitField0_ = (bitField0_ & ~0x00000080);
      timezoneId_ = getDefaultInstance().getTimezoneId();
    }
    /**
     * <code>optional string timezoneId = 13;</code>
     */
    private void setTimezoneIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
      timezoneId_ = value.toStringUtf8();
    }

    public static final int APPS_FIELD_NUMBER = 14;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest apps_;
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    public boolean hasApps() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest getApps() {
      return apps_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.getDefaultInstance() : apps_;
    }
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    private void setApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      apps_ = value;
      bitField0_ |= 0x00000100;
      }
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    private void setApps(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.Builder builderForValue) {
      apps_ = builderForValue.build();
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    private void mergeApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest value) {
      if (apps_ != null &&
          apps_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.getDefaultInstance()) {
        apps_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.newBuilder(apps_).mergeFrom(value).buildPartial();
      } else {
        apps_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .brahma.AppsRequest apps = 14;</code>
     */
    private void clearApps() {  apps_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int KEY_FIELD_NUMBER = 15;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent key_;
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent getKey() {
      return key_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.getDefaultInstance() : key_;
    }
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    private void setKey(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      key_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    private void setKey(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.Builder builderForValue) {
      key_ = builderForValue.build();
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    private void mergeKey(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent value) {
      if (key_ != null &&
          key_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.getDefaultInstance()) {
        key_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.newBuilder(key_).mergeFrom(value).buildPartial();
      } else {
        key_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .brahma.KeyEvent key = 15;</code>
     */
    private void clearKey() {  key_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int CONFIG_FIELD_NUMBER = 16;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config config_;
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config getConfig() {
      return config_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.getDefaultInstance() : config_;
    }
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    private void setConfig(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config value) {
      if (value == null) {
        throw new NullPointerException();
      }
      config_ = value;
      bitField0_ |= 0x00000400;
      }
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    private void setConfig(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.Builder builderForValue) {
      config_ = builderForValue.build();
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    private void mergeConfig(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config value) {
      if (config_ != null &&
          config_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.getDefaultInstance()) {
        config_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.newBuilder(config_).mergeFrom(value).buildPartial();
      } else {
        config_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .brahma.Config config = 16;</code>
     */
    private void clearConfig() {  config_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int FILEREQUEST_FIELD_NUMBER = 17;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest fileRequest_;
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    public boolean hasFileRequest() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest getFileRequest() {
      return fileRequest_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.getDefaultInstance() : fileRequest_;
    }
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    private void setFileRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest value) {
      if (value == null) {
        throw new NullPointerException();
      }
      fileRequest_ = value;
      bitField0_ |= 0x00000800;
      }
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    private void setFileRequest(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.Builder builderForValue) {
      fileRequest_ = builderForValue.build();
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    private void mergeFileRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest value) {
      if (fileRequest_ != null &&
          fileRequest_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.getDefaultInstance()) {
        fileRequest_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.newBuilder(fileRequest_).mergeFrom(value).buildPartial();
      } else {
        fileRequest_ = value;
      }
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .brahma.FileRequest fileRequest = 17;</code>
     */
    private void clearFileRequest() {  fileRequest_ = null;
      bitField0_ = (bitField0_ & ~0x00000800);
    }

    public static final int VKEYBOARDREQ_FIELD_NUMBER = 18;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq vKeyboardReq_;
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    public boolean hasVKeyboardReq() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq getVKeyboardReq() {
      return vKeyboardReq_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.getDefaultInstance() : vKeyboardReq_;
    }
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    private void setVKeyboardReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq value) {
      if (value == null) {
        throw new NullPointerException();
      }
      vKeyboardReq_ = value;
      bitField0_ |= 0x00001000;
      }
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    private void setVKeyboardReq(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.Builder builderForValue) {
      vKeyboardReq_ = builderForValue.build();
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    private void mergeVKeyboardReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq value) {
      if (vKeyboardReq_ != null &&
          vKeyboardReq_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.getDefaultInstance()) {
        vKeyboardReq_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.newBuilder(vKeyboardReq_).mergeFrom(value).buildPartial();
      } else {
        vKeyboardReq_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     *add by Yuyu
     * </pre>
     *
     * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
     */
    private void clearVKeyboardReq() {  vKeyboardReq_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static final int UNCONNECTEDREQUEST_FIELD_NUMBER = 19;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected unconnectedRequest_;
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    public boolean hasUnconnectedRequest() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedRequest() {
      return unconnectedRequest_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.getDefaultInstance() : unconnectedRequest_;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    private void setUnconnectedRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
      if (value == null) {
        throw new NullPointerException();
      }
      unconnectedRequest_ = value;
      bitField0_ |= 0x00002000;
      }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    private void setUnconnectedRequest(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder builderForValue) {
      unconnectedRequest_ = builderForValue.build();
      bitField0_ |= 0x00002000;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    private void mergeUnconnectedRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
      if (unconnectedRequest_ != null &&
          unconnectedRequest_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.getDefaultInstance()) {
        unconnectedRequest_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.newBuilder(unconnectedRequest_).mergeFrom(value).buildPartial();
      } else {
        unconnectedRequest_ = value;
      }
      bitField0_ |= 0x00002000;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
     */
    private void clearUnconnectedRequest() {  unconnectedRequest_ = null;
      bitField0_ = (bitField0_ & ~0x00002000);
    }

    public static final int QRSTRINGREQ_FIELD_NUMBER = 20;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq qRstringReq_;
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    public boolean hasQRstringReq() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq getQRstringReq() {
      return qRstringReq_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.getDefaultInstance() : qRstringReq_;
    }
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    private void setQRstringReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq value) {
      if (value == null) {
        throw new NullPointerException();
      }
      qRstringReq_ = value;
      bitField0_ |= 0x00004000;
      }
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    private void setQRstringReq(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.Builder builderForValue) {
      qRstringReq_ = builderForValue.build();
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    private void mergeQRstringReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq value) {
      if (qRstringReq_ != null &&
          qRstringReq_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.getDefaultInstance()) {
        qRstringReq_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.newBuilder(qRstringReq_).mergeFrom(value).buildPartial();
      } else {
        qRstringReq_ = value;
      }
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
     */
    private void clearQRstringReq() {  qRstringReq_ = null;
      bitField0_ = (bitField0_ & ~0x00004000);
    }

    public static final int SCREENINFOCLIENT_FIELD_NUMBER = 21;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient screenInfoClient_;
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    public boolean hasScreenInfoClient() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient getScreenInfoClient() {
      return screenInfoClient_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.getDefaultInstance() : screenInfoClient_;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    private void setScreenInfoClient(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient value) {
      if (value == null) {
        throw new NullPointerException();
      }
      screenInfoClient_ = value;
      bitField0_ |= 0x00008000;
      }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    private void setScreenInfoClient(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.Builder builderForValue) {
      screenInfoClient_ = builderForValue.build();
      bitField0_ |= 0x00008000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    private void mergeScreenInfoClient(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient value) {
      if (screenInfoClient_ != null &&
          screenInfoClient_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.getDefaultInstance()) {
        screenInfoClient_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.newBuilder(screenInfoClient_).mergeFrom(value).buildPartial();
      } else {
        screenInfoClient_ = value;
      }
      bitField0_ |= 0x00008000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
     */
    private void clearScreenInfoClient() {  screenInfoClient_ = null;
      bitField0_ = (bitField0_ & ~0x00008000);
    }

    public static final int SMARTCARD_FIELD_NUMBER = 22;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard smartCard_;
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    public boolean hasSmartCard() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard() {
      return smartCard_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.getDefaultInstance() : smartCard_;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void setSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
      if (value == null) {
        throw new NullPointerException();
      }
      smartCard_ = value;
      bitField0_ |= 0x00010000;
      }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void setSmartCard(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder builderForValue) {
      smartCard_ = builderForValue.build();
      bitField0_ |= 0x00010000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void mergeSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
      if (smartCard_ != null &&
          smartCard_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.getDefaultInstance()) {
        smartCard_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.newBuilder(smartCard_).mergeFrom(value).buildPartial();
      } else {
        smartCard_ = value;
      }
      bitField0_ |= 0x00010000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void clearSmartCard() {  smartCard_ = null;
      bitField0_ = (bitField0_ & ~0x00010000);
    }

    public static final int RDPINFO_FIELD_NUMBER = 23;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo rDPInfo_;
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    public boolean hasRDPInfo() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo() {
      return rDPInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.getDefaultInstance() : rDPInfo_;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void setRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rDPInfo_ = value;
      bitField0_ |= 0x00020000;
      }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void setRDPInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder builderForValue) {
      rDPInfo_ = builderForValue.build();
      bitField0_ |= 0x00020000;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void mergeRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
      if (rDPInfo_ != null &&
          rDPInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.getDefaultInstance()) {
        rDPInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.newBuilder(rDPInfo_).mergeFrom(value).buildPartial();
      } else {
        rDPInfo_ = value;
      }
      bitField0_ |= 0x00020000;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void clearRDPInfo() {  rDPInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00020000);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < touch_.size(); i++) {
        output.writeMessage(2, touch_.get(i));
      }
      for (int i = 0; i < sensor_.size(); i++) {
        output.writeMessage(3, sensor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(6, getLocationRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(7, getIntent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(9, getWebrtcMsg());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(10, getRotationInfo());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(11, getPingRequest());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(12, getVideoInfo());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeString(13, getTimezoneId());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, getApps());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, getKey());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(16, getConfig());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, getFileRequest());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(18, getVKeyboardReq());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(19, getUnconnectedRequest());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(20, getQRstringReq());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(21, getScreenInfoClient());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(22, getSmartCard());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(23, getRDPInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      for (int i = 0; i < touch_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, touch_.get(i));
      }
      for (int i = 0; i < sensor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sensor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLocationRequest());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getIntent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getWebrtcMsg());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getRotationInfo());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getPingRequest());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getVideoInfo());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getTimezoneId());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getApps());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getKey());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getConfig());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getFileRequest());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getVKeyboardReq());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getUnconnectedRequest());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getQRstringReq());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getScreenInfoClient());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getSmartCard());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getRDPInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Client to server message wrapper
     * </pre>
     *
     * Protobuf type {@code brahma.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Request)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RequestOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Request.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.Request.RequestType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.Request.RequestType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.Request.RequestType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.Request.RequestType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent> getTouchList() {
        return java.util.Collections.unmodifiableList(
            instance.getTouchList());
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public int getTouchCount() {
        return instance.getTouchCount();
      }/**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent getTouch(int index) {
        return instance.getTouch(index);
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder setTouch(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
        copyOnWrite();
        instance.setTouch(index, value);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder setTouch(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setTouch(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder addTouch(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
        copyOnWrite();
        instance.addTouch(value);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder addTouch(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent value) {
        copyOnWrite();
        instance.addTouch(index, value);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder addTouch(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addTouch(builderForValue);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder addTouch(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addTouch(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder addAllTouch(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent> values) {
        copyOnWrite();
        instance.addAllTouch(values);
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder clearTouch() {
        copyOnWrite();
        instance.clearTouch();
        return this;
      }
      /**
       * <pre>
       * repeated to allow batching multiple events in a single message
       * </pre>
       *
       * <code>repeated .brahma.TouchEvent touch = 2;</code>
       */
      public Builder removeTouch(int index) {
        copyOnWrite();
        instance.removeTouch(index);
        return this;
      }

      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent> getSensorList() {
        return java.util.Collections.unmodifiableList(
            instance.getSensorList());
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public int getSensorCount() {
        return instance.getSensorCount();
      }/**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent getSensor(int index) {
        return instance.getSensor(index);
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder setSensor(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
        copyOnWrite();
        instance.setSensor(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder setSensor(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setSensor(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder addSensor(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
        copyOnWrite();
        instance.addSensor(value);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder addSensor(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent value) {
        copyOnWrite();
        instance.addSensor(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder addSensor(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addSensor(builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder addSensor(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addSensor(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder addAllSensor(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent> values) {
        copyOnWrite();
        instance.addAllSensor(values);
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder clearSensor() {
        copyOnWrite();
        instance.clearSensor();
        return this;
      }
      /**
       * <code>repeated .brahma.SensorEvent sensor = 3;</code>
       */
      public Builder removeSensor(int index) {
        copyOnWrite();
        instance.removeSensor(index);
        return this;
      }

      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public boolean hasLocationRequest() {
        return instance.hasLocationRequest();
      }
      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest getLocationRequest() {
        return instance.getLocationRequest();
      }
      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public Builder setLocationRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest value) {
        copyOnWrite();
        instance.setLocationRequest(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public Builder setLocationRequest(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLocationRequest(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public Builder mergeLocationRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest value) {
        copyOnWrite();
        instance.mergeLocationRequest(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationRequest locationRequest = 6;</code>
       */
      public Builder clearLocationRequest() {  copyOnWrite();
        instance.clearLocationRequest();
        return this;
      }

      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public boolean hasIntent() {
        return instance.hasIntent();
      }
      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent() {
        return instance.getIntent();
      }
      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public Builder setIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
        copyOnWrite();
        instance.setIntent(value);
        return this;
        }
      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public Builder setIntent(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder builderForValue) {
        copyOnWrite();
        instance.setIntent(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public Builder mergeIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
        copyOnWrite();
        instance.mergeIntent(value);
        return this;
      }
      /**
       * <code>optional .brahma.Intent intent = 7;</code>
       */
      public Builder clearIntent() {  copyOnWrite();
        instance.clearIntent();
        return this;
      }

      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public boolean hasWebrtcMsg() {
        return instance.hasWebrtcMsg();
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg() {
        return instance.getWebrtcMsg();
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public Builder setWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
        copyOnWrite();
        instance.setWebrtcMsg(value);
        return this;
        }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public Builder setWebrtcMsg(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setWebrtcMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public Builder mergeWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
        copyOnWrite();
        instance.mergeWebrtcMsg(value);
        return this;
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 9;</code>
       */
      public Builder clearWebrtcMsg() {  copyOnWrite();
        instance.clearWebrtcMsg();
        return this;
      }

      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public boolean hasRotationInfo() {
        return instance.hasRotationInfo();
      }
      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo getRotationInfo() {
        return instance.getRotationInfo();
      }
      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public Builder setRotationInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo value) {
        copyOnWrite();
        instance.setRotationInfo(value);
        return this;
        }
      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public Builder setRotationInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRotationInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public Builder mergeRotationInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo value) {
        copyOnWrite();
        instance.mergeRotationInfo(value);
        return this;
      }
      /**
       * <code>optional .brahma.RotationInfo rotationInfo = 10;</code>
       */
      public Builder clearRotationInfo() {  copyOnWrite();
        instance.clearRotationInfo();
        return this;
      }

      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public boolean hasPingRequest() {
        return instance.hasPingRequest();
      }
      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingRequest() {
        return instance.getPingRequest();
      }
      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public Builder setPingRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
        copyOnWrite();
        instance.setPingRequest(value);
        return this;
        }
      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public Builder setPingRequest(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder builderForValue) {
        copyOnWrite();
        instance.setPingRequest(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public Builder mergePingRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
        copyOnWrite();
        instance.mergePingRequest(value);
        return this;
      }
      /**
       * <code>optional .brahma.Ping pingRequest = 11;</code>
       */
      public Builder clearPingRequest() {  copyOnWrite();
        instance.clearPingRequest();
        return this;
      }

      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public boolean hasVideoInfo() {
        return instance.hasVideoInfo();
      }
      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo() {
        return instance.getVideoInfo();
      }
      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public Builder setVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
        copyOnWrite();
        instance.setVideoInfo(value);
        return this;
        }
      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public Builder setVideoInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setVideoInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public Builder mergeVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
        copyOnWrite();
        instance.mergeVideoInfo(value);
        return this;
      }
      /**
       * <pre>
       * server-&gt;VM message
       * </pre>
       *
       * <code>optional .brahma.VideoStreamInfo videoInfo = 12;</code>
       */
      public Builder clearVideoInfo() {  copyOnWrite();
        instance.clearVideoInfo();
        return this;
      }

      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public boolean hasTimezoneId() {
        return instance.hasTimezoneId();
      }
      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public java.lang.String getTimezoneId() {
        return instance.getTimezoneId();
      }
      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public com.google.protobuf.ByteString
          getTimezoneIdBytes() {
        return instance.getTimezoneIdBytes();
      }
      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public Builder setTimezoneId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTimezoneId(value);
        return this;
      }
      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public Builder clearTimezoneId() {
        copyOnWrite();
        instance.clearTimezoneId();
        return this;
      }
      /**
       * <code>optional string timezoneId = 13;</code>
       */
      public Builder setTimezoneIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTimezoneIdBytes(value);
        return this;
      }

      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public boolean hasApps() {
        return instance.hasApps();
      }
      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest getApps() {
        return instance.getApps();
      }
      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public Builder setApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest value) {
        copyOnWrite();
        instance.setApps(value);
        return this;
        }
      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public Builder setApps(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setApps(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public Builder mergeApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest value) {
        copyOnWrite();
        instance.mergeApps(value);
        return this;
      }
      /**
       * <code>optional .brahma.AppsRequest apps = 14;</code>
       */
      public Builder clearApps() {  copyOnWrite();
        instance.clearApps();
        return this;
      }

      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public boolean hasKey() {
        return instance.hasKey();
      }
      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent getKey() {
        return instance.getKey();
      }
      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public Builder setKey(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
        }
      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public Builder setKey(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setKey(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public Builder mergeKey(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent value) {
        copyOnWrite();
        instance.mergeKey(value);
        return this;
      }
      /**
       * <code>optional .brahma.KeyEvent key = 15;</code>
       */
      public Builder clearKey() {  copyOnWrite();
        instance.clearKey();
        return this;
      }

      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public boolean hasConfig() {
        return instance.hasConfig();
      }
      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config getConfig() {
        return instance.getConfig();
      }
      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public Builder setConfig(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config value) {
        copyOnWrite();
        instance.setConfig(value);
        return this;
        }
      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public Builder setConfig(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.Builder builderForValue) {
        copyOnWrite();
        instance.setConfig(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public Builder mergeConfig(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config value) {
        copyOnWrite();
        instance.mergeConfig(value);
        return this;
      }
      /**
       * <code>optional .brahma.Config config = 16;</code>
       */
      public Builder clearConfig() {  copyOnWrite();
        instance.clearConfig();
        return this;
      }

      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public boolean hasFileRequest() {
        return instance.hasFileRequest();
      }
      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest getFileRequest() {
        return instance.getFileRequest();
      }
      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public Builder setFileRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest value) {
        copyOnWrite();
        instance.setFileRequest(value);
        return this;
        }
      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public Builder setFileRequest(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setFileRequest(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public Builder mergeFileRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest value) {
        copyOnWrite();
        instance.mergeFileRequest(value);
        return this;
      }
      /**
       * <code>optional .brahma.FileRequest fileRequest = 17;</code>
       */
      public Builder clearFileRequest() {  copyOnWrite();
        instance.clearFileRequest();
        return this;
      }

      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public boolean hasVKeyboardReq() {
        return instance.hasVKeyboardReq();
      }
      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq getVKeyboardReq() {
        return instance.getVKeyboardReq();
      }
      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public Builder setVKeyboardReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq value) {
        copyOnWrite();
        instance.setVKeyboardReq(value);
        return this;
        }
      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public Builder setVKeyboardReq(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.Builder builderForValue) {
        copyOnWrite();
        instance.setVKeyboardReq(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public Builder mergeVKeyboardReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq value) {
        copyOnWrite();
        instance.mergeVKeyboardReq(value);
        return this;
      }
      /**
       * <pre>
       *add by Yuyu
       * </pre>
       *
       * <code>optional .brahma.VKeyboardReq vKeyboardReq = 18;</code>
       */
      public Builder clearVKeyboardReq() {  copyOnWrite();
        instance.clearVKeyboardReq();
        return this;
      }

      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public boolean hasUnconnectedRequest() {
        return instance.hasUnconnectedRequest();
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedRequest() {
        return instance.getUnconnectedRequest();
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public Builder setUnconnectedRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
        copyOnWrite();
        instance.setUnconnectedRequest(value);
        return this;
        }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public Builder setUnconnectedRequest(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder builderForValue) {
        copyOnWrite();
        instance.setUnconnectedRequest(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public Builder mergeUnconnectedRequest(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
        copyOnWrite();
        instance.mergeUnconnectedRequest(value);
        return this;
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedRequest = 19;</code>
       */
      public Builder clearUnconnectedRequest() {  copyOnWrite();
        instance.clearUnconnectedRequest();
        return this;
      }

      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public boolean hasQRstringReq() {
        return instance.hasQRstringReq();
      }
      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq getQRstringReq() {
        return instance.getQRstringReq();
      }
      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public Builder setQRstringReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq value) {
        copyOnWrite();
        instance.setQRstringReq(value);
        return this;
        }
      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public Builder setQRstringReq(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.Builder builderForValue) {
        copyOnWrite();
        instance.setQRstringReq(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public Builder mergeQRstringReq(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq value) {
        copyOnWrite();
        instance.mergeQRstringReq(value);
        return this;
      }
      /**
       * <code>optional .brahma.QRstringReq qRstringReq = 20;</code>
       */
      public Builder clearQRstringReq() {  copyOnWrite();
        instance.clearQRstringReq();
        return this;
      }

      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public boolean hasScreenInfoClient() {
        return instance.hasScreenInfoClient();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient getScreenInfoClient() {
        return instance.getScreenInfoClient();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public Builder setScreenInfoClient(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient value) {
        copyOnWrite();
        instance.setScreenInfoClient(value);
        return this;
        }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public Builder setScreenInfoClient(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.Builder builderForValue) {
        copyOnWrite();
        instance.setScreenInfoClient(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public Builder mergeScreenInfoClient(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient value) {
        copyOnWrite();
        instance.mergeScreenInfoClient(value);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.ScreenInfoClient ScreenInfoClient = 21;</code>
       */
      public Builder clearScreenInfoClient() {  copyOnWrite();
        instance.clearScreenInfoClient();
        return this;
      }

      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public boolean hasSmartCard() {
        return instance.hasSmartCard();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard() {
        return instance.getSmartCard();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder setSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
        copyOnWrite();
        instance.setSmartCard(value);
        return this;
        }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder setSmartCard(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder builderForValue) {
        copyOnWrite();
        instance.setSmartCard(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder mergeSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
        copyOnWrite();
        instance.mergeSmartCard(value);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder clearSmartCard() {  copyOnWrite();
        instance.clearSmartCard();
        return this;
      }

      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public boolean hasRDPInfo() {
        return instance.hasRDPInfo();
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo() {
        return instance.getRDPInfo();
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder setRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
        copyOnWrite();
        instance.setRDPInfo(value);
        return this;
        }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder setRDPInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRDPInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder mergeRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
        copyOnWrite();
        instance.mergeRDPInfo(value);
        return this;
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder clearRDPInfo() {  copyOnWrite();
        instance.clearRDPInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Request)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getTouchCount(); i++) {
            if (!getTouch(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getSensorCount(); i++) {
            if (!getSensor(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasLocationRequest()) {
            if (!getLocationRequest().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasIntent()) {
            if (!getIntent().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRotationInfo()) {
            if (!getRotationInfo().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPingRequest()) {
            if (!getPingRequest().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasApps()) {
            if (!getApps().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasKey()) {
            if (!getKey().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasFileRequest()) {
            if (!getFileRequest().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasVKeyboardReq()) {
            if (!getVKeyboardReq().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasUnconnectedRequest()) {
            if (!getUnconnectedRequest().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasQRstringReq()) {
            if (!getQRstringReq().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasScreenInfoClient()) {
            if (!getScreenInfoClient().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          touch_.makeImmutable();
          sensor_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          touch_= visitor.visitList(touch_, other.touch_);
          sensor_= visitor.visitList(sensor_, other.sensor_);
          locationRequest_ = visitor.visitMessage(locationRequest_, other.locationRequest_);
          intent_ = visitor.visitMessage(intent_, other.intent_);
          webrtcMsg_ = visitor.visitMessage(webrtcMsg_, other.webrtcMsg_);
          rotationInfo_ = visitor.visitMessage(rotationInfo_, other.rotationInfo_);
          pingRequest_ = visitor.visitMessage(pingRequest_, other.pingRequest_);
          videoInfo_ = visitor.visitMessage(videoInfo_, other.videoInfo_);
          timezoneId_ = visitor.visitString(
              hasTimezoneId(), timezoneId_,
              other.hasTimezoneId(), other.timezoneId_);
          apps_ = visitor.visitMessage(apps_, other.apps_);
          key_ = visitor.visitMessage(key_, other.key_);
          config_ = visitor.visitMessage(config_, other.config_);
          fileRequest_ = visitor.visitMessage(fileRequest_, other.fileRequest_);
          vKeyboardReq_ = visitor.visitMessage(vKeyboardReq_, other.vKeyboardReq_);
          unconnectedRequest_ = visitor.visitMessage(unconnectedRequest_, other.unconnectedRequest_);
          qRstringReq_ = visitor.visitMessage(qRstringReq_, other.qRstringReq_);
          screenInfoClient_ = visitor.visitMessage(screenInfoClient_, other.screenInfoClient_);
          smartCard_ = visitor.visitMessage(smartCard_, other.smartCard_);
          rDPInfo_ = visitor.visitMessage(rDPInfo_, other.rDPInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.RequestType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  if (!touch_.isModifiable()) {
                    touch_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(touch_);
                  }
                  touch_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!sensor_.isModifiable()) {
                    sensor_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sensor_);
                  }
                  sensor_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = locationRequest_.toBuilder();
                  }
                  locationRequest_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(locationRequest_);
                    locationRequest_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 58: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = intent_.toBuilder();
                  }
                  intent_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intent_);
                    intent_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 74: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = webrtcMsg_.toBuilder();
                  }
                  webrtcMsg_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(webrtcMsg_);
                    webrtcMsg_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 82: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = rotationInfo_.toBuilder();
                  }
                  rotationInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rotationInfo_);
                    rotationInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 90: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    subBuilder = pingRequest_.toBuilder();
                  }
                  pingRequest_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pingRequest_);
                    pingRequest_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
                case 98: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    subBuilder = videoInfo_.toBuilder();
                  }
                  videoInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(videoInfo_);
                    videoInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 106: {
                  String s = input.readString();
                  bitField0_ |= 0x00000080;
                  timezoneId_ = s;
                  break;
                }
                case 114: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    subBuilder = apps_.toBuilder();
                  }
                  apps_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(apps_);
                    apps_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000100;
                  break;
                }
                case 122: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = key_.toBuilder();
                  }
                  key_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(key_);
                    key_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 130: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000400) == 0x00000400)) {
                    subBuilder = config_.toBuilder();
                  }
                  config_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(config_);
                    config_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000400;
                  break;
                }
                case 138: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000800) == 0x00000800)) {
                    subBuilder = fileRequest_.toBuilder();
                  }
                  fileRequest_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(fileRequest_);
                    fileRequest_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000800;
                  break;
                }
                case 146: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.Builder subBuilder = null;
                  if (((bitField0_ & 0x00001000) == 0x00001000)) {
                    subBuilder = vKeyboardReq_.toBuilder();
                  }
                  vKeyboardReq_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(vKeyboardReq_);
                    vKeyboardReq_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00001000;
                  break;
                }
                case 154: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) == 0x00002000)) {
                    subBuilder = unconnectedRequest_.toBuilder();
                  }
                  unconnectedRequest_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unconnectedRequest_);
                    unconnectedRequest_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 162: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.Builder subBuilder = null;
                  if (((bitField0_ & 0x00004000) == 0x00004000)) {
                    subBuilder = qRstringReq_.toBuilder();
                  }
                  qRstringReq_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(qRstringReq_);
                    qRstringReq_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00004000;
                  break;
                }
                case 170: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.Builder subBuilder = null;
                  if (((bitField0_ & 0x00008000) == 0x00008000)) {
                    subBuilder = screenInfoClient_.toBuilder();
                  }
                  screenInfoClient_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(screenInfoClient_);
                    screenInfoClient_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00008000;
                  break;
                }
                case 178: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder subBuilder = null;
                  if (((bitField0_ & 0x00010000) == 0x00010000)) {
                    subBuilder = smartCard_.toBuilder();
                  }
                  smartCard_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(smartCard_);
                    smartCard_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00010000;
                  break;
                }
                case 186: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00020000) == 0x00020000)) {
                    subBuilder = rDPInfo_.toBuilder();
                  }
                  rDPInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rDPInfo_);
                    rDPInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00020000;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Request)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Request();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Request> PARSER;

    public static com.google.protobuf.Parser<Request> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Response)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType getType();

    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    boolean hasAuthResponse();
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse getAuthResponse();

    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    boolean hasIntent();
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent();

    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    boolean hasNotification();
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification getNotification();

    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    boolean hasLocationResponse();
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse getLocationResponse();

    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    boolean hasPingResponse();
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingResponse();

    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    boolean hasApps();
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse getApps();

    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    boolean hasScreenInfo();
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo getScreenInfo();

    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    boolean hasVideoInfo();
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo();

    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    boolean hasWebrtcMsg();
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg();

    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    boolean hasFile();
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile();

    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    boolean hasVkeyboardInfo();
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo getVkeyboardInfo();

    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    boolean hasUnconnectedResponse();
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedResponse();

    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    boolean hasSmartCard();
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard();

    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    boolean hasRDPInfo();
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo();
  }
  /**
   * <pre>
   * Server to client message wrapper
   * </pre>
   *
   * Protobuf type {@code brahma.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageLite<
          Response, Response.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Response)
      ResponseOrBuilder {
    private Response() {
    }
    /**
     * Protobuf enum {@code brahma.Response.ResponseType}
     */
    public enum ResponseType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ERROR = 0;</code>
       */
      ERROR(0),
      /**
       * <code>AUTH = 1;</code>
       */
      AUTH(1),
      /**
       * <code>VMREADY = 2;</code>
       */
      VMREADY(2),
      /**
       * <pre>
       * touch screen coordinate scaling info
       * </pre>
       *
       * <code>SCREENINFO = 3;</code>
       */
      SCREENINFO(3),
      /**
       * <pre>
       * intent data in 'proxy'
       * </pre>
       *
       * <code>INTENT = 4;</code>
       */
      INTENT(4),
      /**
       * <pre>
       * notification data in 'proxy'
       * </pre>
       *
       * <code>NOTIFICATION = 5;</code>
       */
      NOTIFICATION(5),
      /**
       * <pre>
       * location request
       * </pre>
       *
       * <code>LOCATION = 6;</code>
       */
      LOCATION(6),
      /**
       * <pre>
       * WebRTC signalling message
       * </pre>
       *
       * <code>WEBRTC = 7;</code>
       */
      WEBRTC(7),
      /**
       * <pre>
       * response to client ping measurement (ms)
       * </pre>
       *
       * <code>PING = 8;</code>
       */
      PING(8),
      /**
       * <pre>
       * response to client request for available apps
       * </pre>
       *
       * <code>APPS = 9;</code>
       */
      APPS(9),
      /**
       * <code>FILE = 10;</code>
       */
      FILE(10),
      /**
       * <pre>
       *response to client vm keyboard be activated
       * </pre>
       *
       * <code>VKeyboardInfo = 11;</code>
       */
      VKeyboardInfo(11),
      /**
       * <pre>
       *response to client-unconnected
       * </pre>
       *
       * <code>UNCONNECTED = 12;</code>
       */
      UNCONNECTED(12),
      /**
       * <pre>
       *remote Smart Card
       * </pre>
       *
       * <code>SMART_CARD = 13;</code>
       */
      SMART_CARD(13),
      /**
       * <code>RDP = 14;</code>
       */
      RDP(14),
      ;

      /**
       * <code>ERROR = 0;</code>
       */
      public static final int ERROR_VALUE = 0;
      /**
       * <code>AUTH = 1;</code>
       */
      public static final int AUTH_VALUE = 1;
      /**
       * <code>VMREADY = 2;</code>
       */
      public static final int VMREADY_VALUE = 2;
      /**
       * <pre>
       * touch screen coordinate scaling info
       * </pre>
       *
       * <code>SCREENINFO = 3;</code>
       */
      public static final int SCREENINFO_VALUE = 3;
      /**
       * <pre>
       * intent data in 'proxy'
       * </pre>
       *
       * <code>INTENT = 4;</code>
       */
      public static final int INTENT_VALUE = 4;
      /**
       * <pre>
       * notification data in 'proxy'
       * </pre>
       *
       * <code>NOTIFICATION = 5;</code>
       */
      public static final int NOTIFICATION_VALUE = 5;
      /**
       * <pre>
       * location request
       * </pre>
       *
       * <code>LOCATION = 6;</code>
       */
      public static final int LOCATION_VALUE = 6;
      /**
       * <pre>
       * WebRTC signalling message
       * </pre>
       *
       * <code>WEBRTC = 7;</code>
       */
      public static final int WEBRTC_VALUE = 7;
      /**
       * <pre>
       * response to client ping measurement (ms)
       * </pre>
       *
       * <code>PING = 8;</code>
       */
      public static final int PING_VALUE = 8;
      /**
       * <pre>
       * response to client request for available apps
       * </pre>
       *
       * <code>APPS = 9;</code>
       */
      public static final int APPS_VALUE = 9;
      /**
       * <code>FILE = 10;</code>
       */
      public static final int FILE_VALUE = 10;
      /**
       * <pre>
       *response to client vm keyboard be activated
       * </pre>
       *
       * <code>VKeyboardInfo = 11;</code>
       */
      public static final int VKeyboardInfo_VALUE = 11;
      /**
       * <pre>
       *response to client-unconnected
       * </pre>
       *
       * <code>UNCONNECTED = 12;</code>
       */
      public static final int UNCONNECTED_VALUE = 12;
      /**
       * <pre>
       *remote Smart Card
       * </pre>
       *
       * <code>SMART_CARD = 13;</code>
       */
      public static final int SMART_CARD_VALUE = 13;
      /**
       * <code>RDP = 14;</code>
       */
      public static final int RDP_VALUE = 14;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseType forNumber(int value) {
        switch (value) {
          case 0: return ERROR;
          case 1: return AUTH;
          case 2: return VMREADY;
          case 3: return SCREENINFO;
          case 4: return INTENT;
          case 5: return NOTIFICATION;
          case 6: return LOCATION;
          case 7: return WEBRTC;
          case 8: return PING;
          case 9: return APPS;
          case 10: return FILE;
          case 11: return VKeyboardInfo;
          case 12: return UNCONNECTED;
          case 13: return SMART_CARD;
          case 14: return RDP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseType>() {
              public ResponseType findValueByNumber(int number) {
                return ResponseType.forNumber(number);
              }
            };

      private final int value;

      private ResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.Response.ResponseType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType.ERROR : result;
    }
    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.Response.ResponseType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public static final int AUTHRESPONSE_FIELD_NUMBER = 3;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse authResponse_;
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    public boolean hasAuthResponse() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse getAuthResponse() {
      return authResponse_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.getDefaultInstance() : authResponse_;
    }
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    private void setAuthResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      authResponse_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    private void setAuthResponse(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.Builder builderForValue) {
      authResponse_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    private void mergeAuthResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse value) {
      if (authResponse_ != null &&
          authResponse_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.getDefaultInstance()) {
        authResponse_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.newBuilder(authResponse_).mergeFrom(value).buildPartial();
      } else {
        authResponse_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.AuthResponse authResponse = 3;</code>
     */
    private void clearAuthResponse() {  authResponse_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int INTENT_FIELD_NUMBER = 4;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent intent_;
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    public boolean hasIntent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent() {
      return intent_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.getDefaultInstance() : intent_;
    }
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    private void setIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      intent_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    private void setIntent(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder builderForValue) {
      intent_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    private void mergeIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
      if (intent_ != null &&
          intent_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.getDefaultInstance()) {
        intent_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.newBuilder(intent_).mergeFrom(value).buildPartial();
      } else {
        intent_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.Intent intent = 4;</code>
     */
    private void clearIntent() {  intent_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int NOTIFICATION_FIELD_NUMBER = 5;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification notification_;
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    public boolean hasNotification() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification getNotification() {
      return notification_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.getDefaultInstance() : notification_;
    }
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    private void setNotification(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification value) {
      if (value == null) {
        throw new NullPointerException();
      }
      notification_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    private void setNotification(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.Builder builderForValue) {
      notification_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    private void mergeNotification(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification value) {
      if (notification_ != null &&
          notification_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.getDefaultInstance()) {
        notification_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.newBuilder(notification_).mergeFrom(value).buildPartial();
      } else {
        notification_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.Notification notification = 5;</code>
     */
    private void clearNotification() {  notification_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int LOCATIONRESPONSE_FIELD_NUMBER = 6;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse locationResponse_;
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    public boolean hasLocationResponse() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse getLocationResponse() {
      return locationResponse_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.getDefaultInstance() : locationResponse_;
    }
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    private void setLocationResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      locationResponse_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    private void setLocationResponse(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.Builder builderForValue) {
      locationResponse_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    private void mergeLocationResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse value) {
      if (locationResponse_ != null &&
          locationResponse_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.getDefaultInstance()) {
        locationResponse_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.newBuilder(locationResponse_).mergeFrom(value).buildPartial();
      } else {
        locationResponse_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
     */
    private void clearLocationResponse() {  locationResponse_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int PINGRESPONSE_FIELD_NUMBER = 7;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping pingResponse_;
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    public boolean hasPingResponse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingResponse() {
      return pingResponse_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.getDefaultInstance() : pingResponse_;
    }
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    private void setPingResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pingResponse_ = value;
      bitField0_ |= 0x00000020;
      }
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    private void setPingResponse(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder builderForValue) {
      pingResponse_ = builderForValue.build();
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    private void mergePingResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
      if (pingResponse_ != null &&
          pingResponse_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.getDefaultInstance()) {
        pingResponse_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.newBuilder(pingResponse_).mergeFrom(value).buildPartial();
      } else {
        pingResponse_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .brahma.Ping pingResponse = 7;</code>
     */
    private void clearPingResponse() {  pingResponse_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int APPS_FIELD_NUMBER = 8;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse apps_;
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    public boolean hasApps() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse getApps() {
      return apps_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.getDefaultInstance() : apps_;
    }
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    private void setApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      apps_ = value;
      bitField0_ |= 0x00000040;
      }
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    private void setApps(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.Builder builderForValue) {
      apps_ = builderForValue.build();
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    private void mergeApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse value) {
      if (apps_ != null &&
          apps_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.getDefaultInstance()) {
        apps_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.newBuilder(apps_).mergeFrom(value).buildPartial();
      } else {
        apps_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .brahma.AppsResponse apps = 8;</code>
     */
    private void clearApps() {  apps_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int SCREENINFO_FIELD_NUMBER = 16;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo screenInfo_;
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    public boolean hasScreenInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo getScreenInfo() {
      return screenInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.getDefaultInstance() : screenInfo_;
    }
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    private void setScreenInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      screenInfo_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    private void setScreenInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.Builder builderForValue) {
      screenInfo_ = builderForValue.build();
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    private void mergeScreenInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo value) {
      if (screenInfo_ != null &&
          screenInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.getDefaultInstance()) {
        screenInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.newBuilder(screenInfo_).mergeFrom(value).buildPartial();
      } else {
        screenInfo_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
     */
    private void clearScreenInfo() {  screenInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int VIDEOINFO_FIELD_NUMBER = 17;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo videoInfo_;
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    public boolean hasVideoInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo() {
      return videoInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.getDefaultInstance() : videoInfo_;
    }
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    private void setVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      videoInfo_ = value;
      bitField0_ |= 0x00000100;
      }
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    private void setVideoInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder builderForValue) {
      videoInfo_ = builderForValue.build();
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    private void mergeVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
      if (videoInfo_ != null &&
          videoInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.getDefaultInstance()) {
        videoInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.newBuilder(videoInfo_).mergeFrom(value).buildPartial();
      } else {
        videoInfo_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
     */
    private void clearVideoInfo() {  videoInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int WEBRTCMSG_FIELD_NUMBER = 18;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage webrtcMsg_;
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    public boolean hasWebrtcMsg() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg() {
      return webrtcMsg_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.getDefaultInstance() : webrtcMsg_;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    private void setWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      webrtcMsg_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    private void setWebrtcMsg(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder builderForValue) {
      webrtcMsg_ = builderForValue.build();
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    private void mergeWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
      if (webrtcMsg_ != null &&
          webrtcMsg_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.getDefaultInstance()) {
        webrtcMsg_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.newBuilder(webrtcMsg_).mergeFrom(value).buildPartial();
      } else {
        webrtcMsg_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
     */
    private void clearWebrtcMsg() {  webrtcMsg_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int FILE_FIELD_NUMBER = 19;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.File file_;
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    public boolean hasFile() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile() {
      return file_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.getDefaultInstance() : file_;
    }
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    private void setFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
      if (value == null) {
        throw new NullPointerException();
      }
      file_ = value;
      bitField0_ |= 0x00000400;
      }
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    private void setFile(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder builderForValue) {
      file_ = builderForValue.build();
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    private void mergeFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
      if (file_ != null &&
          file_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.getDefaultInstance()) {
        file_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.newBuilder(file_).mergeFrom(value).buildPartial();
      } else {
        file_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .brahma.File file = 19;</code>
     */
    private void clearFile() {  file_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int VKEYBOARDINFO_FIELD_NUMBER = 20;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo vkeyboardInfo_;
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    public boolean hasVkeyboardInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo getVkeyboardInfo() {
      return vkeyboardInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.getDefaultInstance() : vkeyboardInfo_;
    }
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    private void setVkeyboardInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      vkeyboardInfo_ = value;
      bitField0_ |= 0x00000800;
      }
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    private void setVkeyboardInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.Builder builderForValue) {
      vkeyboardInfo_ = builderForValue.build();
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    private void mergeVkeyboardInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo value) {
      if (vkeyboardInfo_ != null &&
          vkeyboardInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.getDefaultInstance()) {
        vkeyboardInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.newBuilder(vkeyboardInfo_).mergeFrom(value).buildPartial();
      } else {
        vkeyboardInfo_ = value;
      }
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
     */
    private void clearVkeyboardInfo() {  vkeyboardInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000800);
    }

    public static final int UNCONNECTEDRESPONSE_FIELD_NUMBER = 21;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected unconnectedResponse_;
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    public boolean hasUnconnectedResponse() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedResponse() {
      return unconnectedResponse_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.getDefaultInstance() : unconnectedResponse_;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    private void setUnconnectedResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
      if (value == null) {
        throw new NullPointerException();
      }
      unconnectedResponse_ = value;
      bitField0_ |= 0x00001000;
      }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    private void setUnconnectedResponse(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder builderForValue) {
      unconnectedResponse_ = builderForValue.build();
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    private void mergeUnconnectedResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
      if (unconnectedResponse_ != null &&
          unconnectedResponse_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.getDefaultInstance()) {
        unconnectedResponse_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.newBuilder(unconnectedResponse_).mergeFrom(value).buildPartial();
      } else {
        unconnectedResponse_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <pre>
     *add by Ian 
     * </pre>
     *
     * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
     */
    private void clearUnconnectedResponse() {  unconnectedResponse_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static final int SMARTCARD_FIELD_NUMBER = 22;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard smartCard_;
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    public boolean hasSmartCard() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard() {
      return smartCard_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.getDefaultInstance() : smartCard_;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void setSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
      if (value == null) {
        throw new NullPointerException();
      }
      smartCard_ = value;
      bitField0_ |= 0x00002000;
      }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void setSmartCard(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder builderForValue) {
      smartCard_ = builderForValue.build();
      bitField0_ |= 0x00002000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void mergeSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
      if (smartCard_ != null &&
          smartCard_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.getDefaultInstance()) {
        smartCard_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.newBuilder(smartCard_).mergeFrom(value).buildPartial();
      } else {
        smartCard_ = value;
      }
      bitField0_ |= 0x00002000;
    }
    /**
     * <pre>
     *add by Ian
     * </pre>
     *
     * <code>optional .brahma.SmartCard smartCard = 22;</code>
     */
    private void clearSmartCard() {  smartCard_ = null;
      bitField0_ = (bitField0_ & ~0x00002000);
    }

    public static final int RDPINFO_FIELD_NUMBER = 23;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo rDPInfo_;
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    public boolean hasRDPInfo() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo() {
      return rDPInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.getDefaultInstance() : rDPInfo_;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void setRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rDPInfo_ = value;
      bitField0_ |= 0x00004000;
      }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void setRDPInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder builderForValue) {
      rDPInfo_ = builderForValue.build();
      bitField0_ |= 0x00004000;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void mergeRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
      if (rDPInfo_ != null &&
          rDPInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.getDefaultInstance()) {
        rDPInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.newBuilder(rDPInfo_).mergeFrom(value).buildPartial();
      } else {
        rDPInfo_ = value;
      }
      bitField0_ |= 0x00004000;
    }
    /**
     * <pre>
     *add by YiWen
     * </pre>
     *
     * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
     */
    private void clearRDPInfo() {  rDPInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00004000);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getAuthResponse());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getIntent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getNotification());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, getLocationResponse());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getPingResponse());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, getApps());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(16, getScreenInfo());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, getVideoInfo());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(18, getWebrtcMsg());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(19, getFile());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(20, getVkeyboardInfo());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(21, getUnconnectedResponse());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(22, getSmartCard());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(23, getRDPInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAuthResponse());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getIntent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNotification());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLocationResponse());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getPingResponse());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getApps());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getScreenInfo());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getVideoInfo());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getWebrtcMsg());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getFile());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getVkeyboardInfo());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getUnconnectedResponse());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getSmartCard());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getRDPInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Server to client message wrapper
     * </pre>
     *
     * Protobuf type {@code brahma.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Response)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ResponseOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Response.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.Response.ResponseType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.Response.ResponseType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.Response.ResponseType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.Response.ResponseType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public boolean hasAuthResponse() {
        return instance.hasAuthResponse();
      }
      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse getAuthResponse() {
        return instance.getAuthResponse();
      }
      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public Builder setAuthResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse value) {
        copyOnWrite();
        instance.setAuthResponse(value);
        return this;
        }
      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public Builder setAuthResponse(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setAuthResponse(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public Builder mergeAuthResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse value) {
        copyOnWrite();
        instance.mergeAuthResponse(value);
        return this;
      }
      /**
       * <code>optional .brahma.AuthResponse authResponse = 3;</code>
       */
      public Builder clearAuthResponse() {  copyOnWrite();
        instance.clearAuthResponse();
        return this;
      }

      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public boolean hasIntent() {
        return instance.hasIntent();
      }
      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getIntent() {
        return instance.getIntent();
      }
      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public Builder setIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
        copyOnWrite();
        instance.setIntent(value);
        return this;
        }
      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public Builder setIntent(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder builderForValue) {
        copyOnWrite();
        instance.setIntent(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public Builder mergeIntent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent value) {
        copyOnWrite();
        instance.mergeIntent(value);
        return this;
      }
      /**
       * <code>optional .brahma.Intent intent = 4;</code>
       */
      public Builder clearIntent() {  copyOnWrite();
        instance.clearIntent();
        return this;
      }

      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public boolean hasNotification() {
        return instance.hasNotification();
      }
      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification getNotification() {
        return instance.getNotification();
      }
      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public Builder setNotification(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification value) {
        copyOnWrite();
        instance.setNotification(value);
        return this;
        }
      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public Builder setNotification(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.Builder builderForValue) {
        copyOnWrite();
        instance.setNotification(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public Builder mergeNotification(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification value) {
        copyOnWrite();
        instance.mergeNotification(value);
        return this;
      }
      /**
       * <code>optional .brahma.Notification notification = 5;</code>
       */
      public Builder clearNotification() {  copyOnWrite();
        instance.clearNotification();
        return this;
      }

      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public boolean hasLocationResponse() {
        return instance.hasLocationResponse();
      }
      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse getLocationResponse() {
        return instance.getLocationResponse();
      }
      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public Builder setLocationResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse value) {
        copyOnWrite();
        instance.setLocationResponse(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public Builder setLocationResponse(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setLocationResponse(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public Builder mergeLocationResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse value) {
        copyOnWrite();
        instance.mergeLocationResponse(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationResponse locationResponse = 6;</code>
       */
      public Builder clearLocationResponse() {  copyOnWrite();
        instance.clearLocationResponse();
        return this;
      }

      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public boolean hasPingResponse() {
        return instance.hasPingResponse();
      }
      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getPingResponse() {
        return instance.getPingResponse();
      }
      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public Builder setPingResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
        copyOnWrite();
        instance.setPingResponse(value);
        return this;
        }
      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public Builder setPingResponse(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder builderForValue) {
        copyOnWrite();
        instance.setPingResponse(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public Builder mergePingResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping value) {
        copyOnWrite();
        instance.mergePingResponse(value);
        return this;
      }
      /**
       * <code>optional .brahma.Ping pingResponse = 7;</code>
       */
      public Builder clearPingResponse() {  copyOnWrite();
        instance.clearPingResponse();
        return this;
      }

      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public boolean hasApps() {
        return instance.hasApps();
      }
      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse getApps() {
        return instance.getApps();
      }
      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public Builder setApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse value) {
        copyOnWrite();
        instance.setApps(value);
        return this;
        }
      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public Builder setApps(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setApps(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public Builder mergeApps(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse value) {
        copyOnWrite();
        instance.mergeApps(value);
        return this;
      }
      /**
       * <code>optional .brahma.AppsResponse apps = 8;</code>
       */
      public Builder clearApps() {  copyOnWrite();
        instance.clearApps();
        return this;
      }

      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public boolean hasScreenInfo() {
        return instance.hasScreenInfo();
      }
      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo getScreenInfo() {
        return instance.getScreenInfo();
      }
      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public Builder setScreenInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo value) {
        copyOnWrite();
        instance.setScreenInfo(value);
        return this;
        }
      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public Builder setScreenInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setScreenInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public Builder mergeScreenInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo value) {
        copyOnWrite();
        instance.mergeScreenInfo(value);
        return this;
      }
      /**
       * <code>optional .brahma.ScreenInfo screenInfo = 16;</code>
       */
      public Builder clearScreenInfo() {  copyOnWrite();
        instance.clearScreenInfo();
        return this;
      }

      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public boolean hasVideoInfo() {
        return instance.hasVideoInfo();
      }
      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getVideoInfo() {
        return instance.getVideoInfo();
      }
      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public Builder setVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
        copyOnWrite();
        instance.setVideoInfo(value);
        return this;
        }
      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public Builder setVideoInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setVideoInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public Builder mergeVideoInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo value) {
        copyOnWrite();
        instance.mergeVideoInfo(value);
        return this;
      }
      /**
       * <code>optional .brahma.VideoStreamInfo videoInfo = 17;</code>
       */
      public Builder clearVideoInfo() {  copyOnWrite();
        instance.clearVideoInfo();
        return this;
      }

      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public boolean hasWebrtcMsg() {
        return instance.hasWebrtcMsg();
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getWebrtcMsg() {
        return instance.getWebrtcMsg();
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public Builder setWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
        copyOnWrite();
        instance.setWebrtcMsg(value);
        return this;
        }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public Builder setWebrtcMsg(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder builderForValue) {
        copyOnWrite();
        instance.setWebrtcMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public Builder mergeWebrtcMsg(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage value) {
        copyOnWrite();
        instance.mergeWebrtcMsg(value);
        return this;
      }
      /**
       * <code>optional .brahma.WebRTCMessage webrtcMsg = 18;</code>
       */
      public Builder clearWebrtcMsg() {  copyOnWrite();
        instance.clearWebrtcMsg();
        return this;
      }

      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public boolean hasFile() {
        return instance.hasFile();
      }
      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile() {
        return instance.getFile();
      }
      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public Builder setFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
        copyOnWrite();
        instance.setFile(value);
        return this;
        }
      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public Builder setFile(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder builderForValue) {
        copyOnWrite();
        instance.setFile(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public Builder mergeFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
        copyOnWrite();
        instance.mergeFile(value);
        return this;
      }
      /**
       * <code>optional .brahma.File file = 19;</code>
       */
      public Builder clearFile() {  copyOnWrite();
        instance.clearFile();
        return this;
      }

      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public boolean hasVkeyboardInfo() {
        return instance.hasVkeyboardInfo();
      }
      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo getVkeyboardInfo() {
        return instance.getVkeyboardInfo();
      }
      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public Builder setVkeyboardInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo value) {
        copyOnWrite();
        instance.setVkeyboardInfo(value);
        return this;
        }
      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public Builder setVkeyboardInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setVkeyboardInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public Builder mergeVkeyboardInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo value) {
        copyOnWrite();
        instance.mergeVkeyboardInfo(value);
        return this;
      }
      /**
       * <code>optional .brahma.VKeyboardInfo vkeyboardInfo = 20;</code>
       */
      public Builder clearVkeyboardInfo() {  copyOnWrite();
        instance.clearVkeyboardInfo();
        return this;
      }

      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public boolean hasUnconnectedResponse() {
        return instance.hasUnconnectedResponse();
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getUnconnectedResponse() {
        return instance.getUnconnectedResponse();
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public Builder setUnconnectedResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
        copyOnWrite();
        instance.setUnconnectedResponse(value);
        return this;
        }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public Builder setUnconnectedResponse(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder builderForValue) {
        copyOnWrite();
        instance.setUnconnectedResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public Builder mergeUnconnectedResponse(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected value) {
        copyOnWrite();
        instance.mergeUnconnectedResponse(value);
        return this;
      }
      /**
       * <pre>
       *add by Ian 
       * </pre>
       *
       * <code>optional .brahma.Unconnected unconnectedResponse = 21;</code>
       */
      public Builder clearUnconnectedResponse() {  copyOnWrite();
        instance.clearUnconnectedResponse();
        return this;
      }

      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public boolean hasSmartCard() {
        return instance.hasSmartCard();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getSmartCard() {
        return instance.getSmartCard();
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder setSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
        copyOnWrite();
        instance.setSmartCard(value);
        return this;
        }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder setSmartCard(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder builderForValue) {
        copyOnWrite();
        instance.setSmartCard(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder mergeSmartCard(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard value) {
        copyOnWrite();
        instance.mergeSmartCard(value);
        return this;
      }
      /**
       * <pre>
       *add by Ian
       * </pre>
       *
       * <code>optional .brahma.SmartCard smartCard = 22;</code>
       */
      public Builder clearSmartCard() {  copyOnWrite();
        instance.clearSmartCard();
        return this;
      }

      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public boolean hasRDPInfo() {
        return instance.hasRDPInfo();
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getRDPInfo() {
        return instance.getRDPInfo();
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder setRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
        copyOnWrite();
        instance.setRDPInfo(value);
        return this;
        }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder setRDPInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setRDPInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder mergeRDPInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo value) {
        copyOnWrite();
        instance.mergeRDPInfo(value);
        return this;
      }
      /**
       * <pre>
       *add by YiWen
       * </pre>
       *
       * <code>optional .brahma.RDPInfo RDPInfo = 23;</code>
       */
      public Builder clearRDPInfo() {  copyOnWrite();
        instance.clearRDPInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Response)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasAuthResponse()) {
            if (!getAuthResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasIntent()) {
            if (!getIntent().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasNotification()) {
            if (!getNotification().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasLocationResponse()) {
            if (!getLocationResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPingResponse()) {
            if (!getPingResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasApps()) {
            if (!getApps().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasScreenInfo()) {
            if (!getScreenInfo().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasFile()) {
            if (!getFile().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasVkeyboardInfo()) {
            if (!getVkeyboardInfo().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasUnconnectedResponse()) {
            if (!getUnconnectedResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          authResponse_ = visitor.visitMessage(authResponse_, other.authResponse_);
          intent_ = visitor.visitMessage(intent_, other.intent_);
          notification_ = visitor.visitMessage(notification_, other.notification_);
          locationResponse_ = visitor.visitMessage(locationResponse_, other.locationResponse_);
          pingResponse_ = visitor.visitMessage(pingResponse_, other.pingResponse_);
          apps_ = visitor.visitMessage(apps_, other.apps_);
          screenInfo_ = visitor.visitMessage(screenInfo_, other.screenInfo_);
          videoInfo_ = visitor.visitMessage(videoInfo_, other.videoInfo_);
          webrtcMsg_ = visitor.visitMessage(webrtcMsg_, other.webrtcMsg_);
          file_ = visitor.visitMessage(file_, other.file_);
          vkeyboardInfo_ = visitor.visitMessage(vkeyboardInfo_, other.vkeyboardInfo_);
          unconnectedResponse_ = visitor.visitMessage(unconnectedResponse_, other.unconnectedResponse_);
          smartCard_ = visitor.visitMessage(smartCard_, other.smartCard_);
          rDPInfo_ = visitor.visitMessage(rDPInfo_, other.rDPInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.ResponseType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 26: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = authResponse_.toBuilder();
                  }
                  authResponse_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(authResponse_);
                    authResponse_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 34: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = intent_.toBuilder();
                  }
                  intent_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intent_);
                    intent_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 42: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = notification_.toBuilder();
                  }
                  notification_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(notification_);
                    notification_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 50: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = locationResponse_.toBuilder();
                  }
                  locationResponse_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(locationResponse_);
                    locationResponse_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 58: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    subBuilder = pingResponse_.toBuilder();
                  }
                  pingResponse_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pingResponse_);
                    pingResponse_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
                case 66: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    subBuilder = apps_.toBuilder();
                  }
                  apps_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(apps_);
                    apps_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000040;
                  break;
                }
                case 130: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    subBuilder = screenInfo_.toBuilder();
                  }
                  screenInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(screenInfo_);
                    screenInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                case 138: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    subBuilder = videoInfo_.toBuilder();
                  }
                  videoInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(videoInfo_);
                    videoInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000100;
                  break;
                }
                case 146: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = webrtcMsg_.toBuilder();
                  }
                  webrtcMsg_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(webrtcMsg_);
                    webrtcMsg_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 154: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000400) == 0x00000400)) {
                    subBuilder = file_.toBuilder();
                  }
                  file_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(file_);
                    file_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000400;
                  break;
                }
                case 162: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000800) == 0x00000800)) {
                    subBuilder = vkeyboardInfo_.toBuilder();
                  }
                  vkeyboardInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(vkeyboardInfo_);
                    vkeyboardInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000800;
                  break;
                }
                case 170: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.Builder subBuilder = null;
                  if (((bitField0_ & 0x00001000) == 0x00001000)) {
                    subBuilder = unconnectedResponse_.toBuilder();
                  }
                  unconnectedResponse_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unconnectedResponse_);
                    unconnectedResponse_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00001000;
                  break;
                }
                case 178: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) == 0x00002000)) {
                    subBuilder = smartCard_.toBuilder();
                  }
                  smartCard_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(smartCard_);
                    smartCard_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 186: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00004000) == 0x00004000)) {
                    subBuilder = rDPInfo_.toBuilder();
                  }
                  rDPInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rDPInfo_);
                    rDPInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00004000;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Response)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Response();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Response> PARSER;

    public static com.google.protobuf.Parser<Response> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface IntentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Intent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    boolean hasAction();
    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction getAction();

    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple>
        getExtrasList();
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple getExtras(int index);
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    int getExtrasCount();

    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    boolean hasData();
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    java.lang.String getData();
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>optional string type = 6;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 6;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 6;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    boolean hasFile();
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile();

    /**
     * <code>repeated int32 flags = 4;</code>
     */
    java.util.List<java.lang.Integer> getFlagsList();
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    int getFlagsCount();
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    int getFlags(int index);

    /**
     * <code>repeated string categories = 5;</code>
     */
    java.util.List<String>
        getCategoriesList();
    /**
     * <code>repeated string categories = 5;</code>
     */
    int getCategoriesCount();
    /**
     * <code>repeated string categories = 5;</code>
     */
    java.lang.String getCategories(int index);
    /**
     * <code>repeated string categories = 5;</code>
     */
    com.google.protobuf.ByteString
        getCategoriesBytes(int index);
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.Intent}
   */
  public  static final class Intent extends
      com.google.protobuf.GeneratedMessageLite<
          Intent, Intent.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Intent)
      IntentOrBuilder {
    private Intent() {
      action_ = 1;
      extras_ = emptyProtobufList();
      data_ = "";
      type_ = "";
      flags_ = emptyIntList();
      categories_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public interface TupleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:brahma.Intent.Tuple)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>required string value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * <pre>
     *For approximating a Java Map structure (Map&lt;String,String&gt;)
     * </pre>
     *
     * Protobuf type {@code brahma.Intent.Tuple}
     */
    public  static final class Tuple extends
        com.google.protobuf.GeneratedMessageLite<
            Tuple, Tuple.Builder> implements
        // @@protoc_insertion_point(message_implements:brahma.Intent.Tuple)
        TupleOrBuilder {
      private Tuple() {
        key_ = "";
        value_ = "";
      }
      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.String key_;
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        return key_;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(key_);
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value.toStringUtf8();
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.String value_;
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        return value_;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(value_);
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value.toStringUtf8();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getKey());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(2, getValue());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKey());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       *For approximating a Java Map structure (Map&lt;String,String&gt;)
       * </pre>
       *
       * Protobuf type {@code brahma.Intent.Tuple}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple, Builder> implements
          // @@protoc_insertion_point(builder_implements:brahma.Intent.Tuple)
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.TupleOrBuilder {
        // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Intent.Tuple.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required string key = 1;</code>
         */
        public boolean hasKey() {
          return instance.hasKey();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public java.lang.String getKey() {
          return instance.getKey();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          return instance.getKeyBytes();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKey(
            java.lang.String value) {
          copyOnWrite();
          instance.setKey(value);
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder clearKey() {
          copyOnWrite();
          instance.clearKey();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setKeyBytes(value);
          return this;
        }

        /**
         * <code>required string value = 2;</code>
         */
        public boolean hasValue() {
          return instance.hasValue();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public java.lang.String getValue() {
          return instance.getValue();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          return instance.getValueBytes();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          copyOnWrite();
          instance.setValue(value);
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder clearValue() {
          copyOnWrite();
          instance.clearValue();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setValueBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:brahma.Intent.Tuple)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasKey()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasValue()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple) arg1;
            key_ = visitor.visitString(
                hasKey(), key_,
                other.hasKey(), other.key_);
            value_ = visitor.visitString(
                hasValue(), value_,
                other.hasValue(), other.value_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    key_ = s;
                    break;
                  }
                  case 18: {
                    String s = input.readString();
                    bitField0_ |= 0x00000002;
                    value_ = s;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:brahma.Intent.Tuple)
      private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Tuple();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Tuple> PARSER;

      public static com.google.protobuf.Parser<Tuple> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction getAction() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction.forNumber(action_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction.ACTION_VIEW : result;
    }
    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    private void setAction(brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      action_ = value.getNumber();
    }
    /**
     * <pre>
     *Corresponds to Intent 'action' parameter, but limited to supported actions
     * </pre>
     *
     * <code>required .brahma.IntentAction action = 1;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 1;
    }

    public static final int EXTRAS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple> extras_;
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple> getExtrasList() {
      return extras_;
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.TupleOrBuilder>
        getExtrasOrBuilderList() {
      return extras_;
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    public int getExtrasCount() {
      return extras_.size();
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple getExtras(int index) {
      return extras_.get(index);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.TupleOrBuilder getExtrasOrBuilder(
        int index) {
      return extras_.get(index);
    }
    private void ensureExtrasIsMutable() {
      if (!extras_.isModifiable()) {
        extras_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(extras_);
       }
    }

    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void setExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.set(index, value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void setExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void addExtras(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.add(value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void addExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.add(index, value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void addExtras(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.add(builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void addExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void addAllExtras(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple> values) {
      ensureExtrasIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extras_);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void clearExtras() {
      extras_ = emptyProtobufList();
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
     */
    private void removeExtras(int index) {
      ensureExtrasIsMutable();
      extras_.remove(index);
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private java.lang.String data_;
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    public java.lang.String getData() {
      return data_;
    }
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(data_);
    }
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    private void setData(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }
    /**
     * <pre>
     *Correspond to optional Intent parameters
     * </pre>
     *
     * <code>optional string data = 3;</code>
     */
    private void setDataBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value.toStringUtf8();
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private java.lang.String type_;
    /**
     * <code>optional string type = 6;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string type = 6;</code>
     */
    public java.lang.String getType() {
      return type_;
    }
    /**
     * <code>optional string type = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(type_);
    }
    /**
     * <code>optional string type = 6;</code>
     */
    private void setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      type_ = value;
    }
    /**
     * <code>optional string type = 6;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = getDefaultInstance().getType();
    }
    /**
     * <code>optional string type = 6;</code>
     */
    private void setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      type_ = value.toStringUtf8();
    }

    public static final int FILE_FIELD_NUMBER = 7;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.File file_;
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    public boolean hasFile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile() {
      return file_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.getDefaultInstance() : file_;
    }
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    private void setFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
      if (value == null) {
        throw new NullPointerException();
      }
      file_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    private void setFile(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder builderForValue) {
      file_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    private void mergeFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
      if (file_ != null &&
          file_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.getDefaultInstance()) {
        file_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.newBuilder(file_).mergeFrom(value).buildPartial();
      } else {
        file_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.File file = 7;</code>
     */
    private void clearFile() {  file_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int FLAGS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList flags_;
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getFlagsList() {
      return flags_;
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    public int getFlagsCount() {
      return flags_.size();
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    public int getFlags(int index) {
      return flags_.getInt(index);
    }
    private void ensureFlagsIsMutable() {
      if (!flags_.isModifiable()) {
        flags_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(flags_);
       }
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    private void setFlags(
        int index, int value) {
      ensureFlagsIsMutable();
      flags_.setInt(index, value);
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    private void addFlags(int value) {
      ensureFlagsIsMutable();
      flags_.addInt(value);
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    private void addAllFlags(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureFlagsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, flags_);
    }
    /**
     * <code>repeated int32 flags = 4;</code>
     */
    private void clearFlags() {
      flags_ = emptyIntList();
    }

    public static final int CATEGORIES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<String> categories_;
    /**
     * <code>repeated string categories = 5;</code>
     */
    public java.util.List<String> getCategoriesList() {
      return categories_;
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    public int getCategoriesCount() {
      return categories_.size();
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    public java.lang.String getCategories(int index) {
      return categories_.get(index);
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCategoriesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          categories_.get(index));
    }
    private void ensureCategoriesIsMutable() {
      if (!categories_.isModifiable()) {
        categories_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(categories_);
       }
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    private void setCategories(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoriesIsMutable();
      categories_.set(index, value);
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    private void addCategories(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoriesIsMutable();
      categories_.add(value);
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    private void addAllCategories(
        java.lang.Iterable<java.lang.String> values) {
      ensureCategoriesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, categories_);
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    private void clearCategories() {
      categories_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string categories = 5;</code>
     */
    private void addCategoriesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoriesIsMutable();
      categories_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        output.writeMessage(2, extras_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(3, getData());
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeInt32(4, flags_.getInt(i));
      }
      for (int i = 0; i < categories_.size(); i++) {
        output.writeString(5, categories_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(6, getType());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(7, getFile());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, extras_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getData());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flags_.getInt(i));
        }
        size += dataSize;
        size += 1 * getFlagsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < categories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(categories_.get(i));
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getType());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getFile());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.Intent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Intent)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Intent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *Corresponds to Intent 'action' parameter, but limited to supported actions
       * </pre>
       *
       * <code>required .brahma.IntentAction action = 1;</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <pre>
       *Corresponds to Intent 'action' parameter, but limited to supported actions
       * </pre>
       *
       * <code>required .brahma.IntentAction action = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction getAction() {
        return instance.getAction();
      }
      /**
       * <pre>
       *Corresponds to Intent 'action' parameter, but limited to supported actions
       * </pre>
       *
       * <code>required .brahma.IntentAction action = 1;</code>
       */
      public Builder setAction(brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <pre>
       *Corresponds to Intent 'action' parameter, but limited to supported actions
       * </pre>
       *
       * <code>required .brahma.IntentAction action = 1;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple> getExtrasList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtrasList());
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public int getExtrasCount() {
        return instance.getExtrasCount();
      }/**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple getExtras(int index) {
        return instance.getExtras(index);
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder setExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
        copyOnWrite();
        instance.setExtras(index, value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder setExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.setExtras(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder addExtras(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
        copyOnWrite();
        instance.addExtras(value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder addExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple value) {
        copyOnWrite();
        instance.addExtras(index, value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder addExtras(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder addExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder addAllExtras(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple> values) {
        copyOnWrite();
        instance.addAllExtras(values);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder clearExtras() {
        copyOnWrite();
        instance.clearExtras();
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.Intent.Tuple extras = 2;</code>
       */
      public Builder removeExtras(int index) {
        copyOnWrite();
        instance.removeExtras(index);
        return this;
      }

      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public java.lang.String getData() {
        return instance.getData();
      }
      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        return instance.getDataBytes();
      }
      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public Builder setData(
          java.lang.String value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }
      /**
       * <pre>
       *Correspond to optional Intent parameters
       * </pre>
       *
       * <code>optional string data = 3;</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDataBytes(value);
        return this;
      }

      /**
       * <code>optional string type = 6;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>optional string type = 6;</code>
       */
      public java.lang.String getType() {
        return instance.getType();
      }
      /**
       * <code>optional string type = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        return instance.getTypeBytes();
      }
      /**
       * <code>optional string type = 6;</code>
       */
      public Builder setType(
          java.lang.String value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>optional string type = 6;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }
      /**
       * <code>optional string type = 6;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeBytes(value);
        return this;
      }

      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public boolean hasFile() {
        return instance.hasFile();
      }
      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getFile() {
        return instance.getFile();
      }
      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public Builder setFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
        copyOnWrite();
        instance.setFile(value);
        return this;
        }
      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public Builder setFile(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder builderForValue) {
        copyOnWrite();
        instance.setFile(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public Builder mergeFile(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File value) {
        copyOnWrite();
        instance.mergeFile(value);
        return this;
      }
      /**
       * <code>optional .brahma.File file = 7;</code>
       */
      public Builder clearFile() {  copyOnWrite();
        instance.clearFile();
        return this;
      }

      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getFlagsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFlagsList());
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public int getFlagsCount() {
        return instance.getFlagsCount();
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public int getFlags(int index) {
        return instance.getFlags(index);
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public Builder setFlags(
          int index, int value) {
        copyOnWrite();
        instance.setFlags(index, value);
        return this;
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public Builder addFlags(int value) {
        copyOnWrite();
        instance.addFlags(value);
        return this;
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public Builder addAllFlags(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllFlags(values);
        return this;
      }
      /**
       * <code>repeated int32 flags = 4;</code>
       */
      public Builder clearFlags() {
        copyOnWrite();
        instance.clearFlags();
        return this;
      }

      /**
       * <code>repeated string categories = 5;</code>
       */
      public java.util.List<String>
          getCategoriesList() {
        return java.util.Collections.unmodifiableList(
            instance.getCategoriesList());
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public int getCategoriesCount() {
        return instance.getCategoriesCount();
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public java.lang.String getCategories(int index) {
        return instance.getCategories(index);
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCategoriesBytes(int index) {
        return instance.getCategoriesBytes(index);
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public Builder setCategories(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setCategories(index, value);
        return this;
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public Builder addCategories(
          java.lang.String value) {
        copyOnWrite();
        instance.addCategories(value);
        return this;
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public Builder addAllCategories(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllCategories(values);
        return this;
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public Builder clearCategories() {
        copyOnWrite();
        instance.clearCategories();
        return this;
      }
      /**
       * <code>repeated string categories = 5;</code>
       */
      public Builder addCategoriesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addCategoriesBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Intent)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getExtrasCount(); i++) {
            if (!getExtras(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasFile()) {
            if (!getFile().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          extras_.makeImmutable();
          flags_.makeImmutable();
          categories_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent) arg1;
          action_ = visitor.visitInt(hasAction(), action_,
              other.hasAction(), other.action_);
          extras_= visitor.visitList(extras_, other.extras_);
          data_ = visitor.visitString(
              hasData(), data_,
              other.hasData(), other.data_);
          type_ = visitor.visitString(
              hasType(), type_,
              other.hasType(), other.type_);
          file_ = visitor.visitMessage(file_, other.file_);
          flags_= visitor.visitIntList(flags_, other.flags_);
          categories_= visitor.visitList(categories_, other.categories_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.IntentAction.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    action_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  if (!extras_.isModifiable()) {
                    extras_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(extras_);
                  }
                  extras_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.Tuple.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  data_ = s;
                  break;
                }
                case 32: {
                  if (!flags_.isModifiable()) {
                    flags_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(flags_);
                  }
                  flags_.addInt(input.readInt32());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!flags_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    flags_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(flags_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    flags_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 42: {
                  String s = input.readString();
                  if (!categories_.isModifiable()) {
                    categories_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(categories_);
                  }
                  categories_.add(s);
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  type_ = s;
                  break;
                }
                case 58: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = file_.toBuilder();
                  }
                  file_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(file_);
                    file_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Intent)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Intent();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Intent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Intent> PARSER;

    public static com.google.protobuf.Parser<Intent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VKeyboardReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.VKeyboardReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 keycode = 1;</code>
     */
    boolean hasKeycode();
    /**
     * <code>required int32 keycode = 1;</code>
     */
    int getKeycode();

    /**
     * <code>required string keystring = 2;</code>
     */
    boolean hasKeystring();
    /**
     * <code>required string keystring = 2;</code>
     */
    java.lang.String getKeystring();
    /**
     * <code>required string keystring = 2;</code>
     */
    com.google.protobuf.ByteString
        getKeystringBytes();

    /**
     * <code>required int32 keycmd = 3;</code>
     */
    boolean hasKeycmd();
    /**
     * <code>required int32 keycmd = 3;</code>
     */
    int getKeycmd();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.VKeyboardReq}
   */
  public  static final class VKeyboardReq extends
      com.google.protobuf.GeneratedMessageLite<
          VKeyboardReq, VKeyboardReq.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.VKeyboardReq)
      VKeyboardReqOrBuilder {
    private VKeyboardReq() {
      keystring_ = "";
    }
    private int bitField0_;
    public static final int KEYCODE_FIELD_NUMBER = 1;
    private int keycode_;
    /**
     * <code>required int32 keycode = 1;</code>
     */
    public boolean hasKeycode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 keycode = 1;</code>
     */
    public int getKeycode() {
      return keycode_;
    }
    /**
     * <code>required int32 keycode = 1;</code>
     */
    private void setKeycode(int value) {
      bitField0_ |= 0x00000001;
      keycode_ = value;
    }
    /**
     * <code>required int32 keycode = 1;</code>
     */
    private void clearKeycode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      keycode_ = 0;
    }

    public static final int KEYSTRING_FIELD_NUMBER = 2;
    private java.lang.String keystring_;
    /**
     * <code>required string keystring = 2;</code>
     */
    public boolean hasKeystring() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string keystring = 2;</code>
     */
    public java.lang.String getKeystring() {
      return keystring_;
    }
    /**
     * <code>required string keystring = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKeystringBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(keystring_);
    }
    /**
     * <code>required string keystring = 2;</code>
     */
    private void setKeystring(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      keystring_ = value;
    }
    /**
     * <code>required string keystring = 2;</code>
     */
    private void clearKeystring() {
      bitField0_ = (bitField0_ & ~0x00000002);
      keystring_ = getDefaultInstance().getKeystring();
    }
    /**
     * <code>required string keystring = 2;</code>
     */
    private void setKeystringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      keystring_ = value.toStringUtf8();
    }

    public static final int KEYCMD_FIELD_NUMBER = 3;
    private int keycmd_;
    /**
     * <code>required int32 keycmd = 3;</code>
     */
    public boolean hasKeycmd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 keycmd = 3;</code>
     */
    public int getKeycmd() {
      return keycmd_;
    }
    /**
     * <code>required int32 keycmd = 3;</code>
     */
    private void setKeycmd(int value) {
      bitField0_ |= 0x00000004;
      keycmd_ = value;
    }
    /**
     * <code>required int32 keycmd = 3;</code>
     */
    private void clearKeycmd() {
      bitField0_ = (bitField0_ & ~0x00000004);
      keycmd_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keycode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getKeystring());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, keycmd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keycode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getKeystring());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, keycmd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.VKeyboardReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.VKeyboardReq)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReqOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.VKeyboardReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 keycode = 1;</code>
       */
      public boolean hasKeycode() {
        return instance.hasKeycode();
      }
      /**
       * <code>required int32 keycode = 1;</code>
       */
      public int getKeycode() {
        return instance.getKeycode();
      }
      /**
       * <code>required int32 keycode = 1;</code>
       */
      public Builder setKeycode(int value) {
        copyOnWrite();
        instance.setKeycode(value);
        return this;
      }
      /**
       * <code>required int32 keycode = 1;</code>
       */
      public Builder clearKeycode() {
        copyOnWrite();
        instance.clearKeycode();
        return this;
      }

      /**
       * <code>required string keystring = 2;</code>
       */
      public boolean hasKeystring() {
        return instance.hasKeystring();
      }
      /**
       * <code>required string keystring = 2;</code>
       */
      public java.lang.String getKeystring() {
        return instance.getKeystring();
      }
      /**
       * <code>required string keystring = 2;</code>
       */
      public com.google.protobuf.ByteString
          getKeystringBytes() {
        return instance.getKeystringBytes();
      }
      /**
       * <code>required string keystring = 2;</code>
       */
      public Builder setKeystring(
          java.lang.String value) {
        copyOnWrite();
        instance.setKeystring(value);
        return this;
      }
      /**
       * <code>required string keystring = 2;</code>
       */
      public Builder clearKeystring() {
        copyOnWrite();
        instance.clearKeystring();
        return this;
      }
      /**
       * <code>required string keystring = 2;</code>
       */
      public Builder setKeystringBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeystringBytes(value);
        return this;
      }

      /**
       * <code>required int32 keycmd = 3;</code>
       */
      public boolean hasKeycmd() {
        return instance.hasKeycmd();
      }
      /**
       * <code>required int32 keycmd = 3;</code>
       */
      public int getKeycmd() {
        return instance.getKeycmd();
      }
      /**
       * <code>required int32 keycmd = 3;</code>
       */
      public Builder setKeycmd(int value) {
        copyOnWrite();
        instance.setKeycmd(value);
        return this;
      }
      /**
       * <code>required int32 keycmd = 3;</code>
       */
      public Builder clearKeycmd() {
        copyOnWrite();
        instance.clearKeycmd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.VKeyboardReq)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasKeycode()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasKeystring()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasKeycmd()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq) arg1;
          keycode_ = visitor.visitInt(
              hasKeycode(), keycode_,
              other.hasKeycode(), other.keycode_);
          keystring_ = visitor.visitString(
              hasKeystring(), keystring_,
              other.hasKeystring(), other.keystring_);
          keycmd_ = visitor.visitInt(
              hasKeycmd(), keycmd_,
              other.hasKeycmd(), other.keycmd_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  keycode_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  keystring_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  keycmd_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.VKeyboardReq)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VKeyboardReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VKeyboardReq> PARSER;

    public static com.google.protobuf.Parser<VKeyboardReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VKeyboardInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.VKeyboardInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 data = 1;</code>
     */
    boolean hasData();
    /**
     * <code>required int32 data = 1;</code>
     */
    int getData();

    /**
     * <code>required string msg = 2;</code>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 2;</code>
     */
    java.lang.String getMsg();
    /**
     * <code>required string msg = 2;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * <pre>
   * S&lt;-&gt;C
   * </pre>
   *
   * Protobuf type {@code brahma.VKeyboardInfo}
   */
  public  static final class VKeyboardInfo extends
      com.google.protobuf.GeneratedMessageLite<
          VKeyboardInfo, VKeyboardInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.VKeyboardInfo)
      VKeyboardInfoOrBuilder {
    private VKeyboardInfo() {
      msg_ = "";
    }
    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private int data_;
    /**
     * <code>required int32 data = 1;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 data = 1;</code>
     */
    public int getData() {
      return data_;
    }
    /**
     * <code>required int32 data = 1;</code>
     */
    private void setData(int value) {
      bitField0_ |= 0x00000001;
      data_ = value;
    }
    /**
     * <code>required int32 data = 1;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      data_ = 0;
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.String msg_;
    /**
     * <code>required string msg = 2;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string msg = 2;</code>
     */
    public java.lang.String getMsg() {
      return msg_;
    }
    /**
     * <code>required string msg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(msg_);
    }
    /**
     * <code>required string msg = 2;</code>
     */
    private void setMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      msg_ = value;
    }
    /**
     * <code>required string msg = 2;</code>
     */
    private void clearMsg() {
      bitField0_ = (bitField0_ & ~0x00000002);
      msg_ = getDefaultInstance().getMsg();
    }
    /**
     * <code>required string msg = 2;</code>
     */
    private void setMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      msg_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getMsg());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMsg());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S&lt;-&gt;C
     * </pre>
     *
     * Protobuf type {@code brahma.VKeyboardInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.VKeyboardInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.VKeyboardInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 data = 1;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>required int32 data = 1;</code>
       */
      public int getData() {
        return instance.getData();
      }
      /**
       * <code>required int32 data = 1;</code>
       */
      public Builder setData(int value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>required int32 data = 1;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>required string msg = 2;</code>
       */
      public boolean hasMsg() {
        return instance.hasMsg();
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public java.lang.String getMsg() {
        return instance.getMsg();
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        return instance.getMsgBytes();
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder setMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setMsg(value);
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder clearMsg() {
        copyOnWrite();
        instance.clearMsg();
        return this;
      }
      /**
       * <code>required string msg = 2;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMsgBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.VKeyboardInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasData()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMsg()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo) arg1;
          data_ = visitor.visitInt(
              hasData(), data_,
              other.hasData(), other.data_);
          msg_ = visitor.visitString(
              hasMsg(), msg_,
              other.hasMsg(), other.msg_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  data_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  msg_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.VKeyboardInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VKeyboardInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VKeyboardInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VKeyboardInfo> PARSER;

    public static com.google.protobuf.Parser<VKeyboardInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SmartCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.SmartCard)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    boolean hasSmartCardMsg();
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    java.lang.String getSmartCardMsg();
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    com.google.protobuf.ByteString
        getSmartCardMsgBytes();

    /**
     * <code>optional bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional bool startCard = 3;</code>
     */
    boolean hasStartCard();
    /**
     * <code>optional bool startCard = 3;</code>
     */
    boolean getStartCard();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.SmartCard}
   */
  public  static final class SmartCard extends
      com.google.protobuf.GeneratedMessageLite<
          SmartCard, SmartCard.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.SmartCard)
      SmartCardOrBuilder {
    private SmartCard() {
      smartCardMsg_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int SMARTCARDMSG_FIELD_NUMBER = 1;
    private java.lang.String smartCardMsg_;
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    public boolean hasSmartCardMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    public java.lang.String getSmartCardMsg() {
      return smartCardMsg_;
    }
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSmartCardMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(smartCardMsg_);
    }
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    private void setSmartCardMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      smartCardMsg_ = value;
    }
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    private void clearSmartCardMsg() {
      bitField0_ = (bitField0_ & ~0x00000001);
      smartCardMsg_ = getDefaultInstance().getSmartCardMsg();
    }
    /**
     * <code>optional string smartCardMsg = 1;</code>
     */
    private void setSmartCardMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      smartCardMsg_ = value.toStringUtf8();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }

    public static final int STARTCARD_FIELD_NUMBER = 3;
    private boolean startCard_;
    /**
     * <code>optional bool startCard = 3;</code>
     */
    public boolean hasStartCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool startCard = 3;</code>
     */
    public boolean getStartCard() {
      return startCard_;
    }
    /**
     * <code>optional bool startCard = 3;</code>
     */
    private void setStartCard(boolean value) {
      bitField0_ |= 0x00000004;
      startCard_ = value;
    }
    /**
     * <code>optional bool startCard = 3;</code>
     */
    private void clearStartCard() {
      bitField0_ = (bitField0_ & ~0x00000004);
      startCard_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getSmartCardMsg());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, startCard_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSmartCardMsg());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, startCard_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.SmartCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.SmartCard)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCardOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.SmartCard.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public boolean hasSmartCardMsg() {
        return instance.hasSmartCardMsg();
      }
      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public java.lang.String getSmartCardMsg() {
        return instance.getSmartCardMsg();
      }
      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSmartCardMsgBytes() {
        return instance.getSmartCardMsgBytes();
      }
      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public Builder setSmartCardMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setSmartCardMsg(value);
        return this;
      }
      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public Builder clearSmartCardMsg() {
        copyOnWrite();
        instance.clearSmartCardMsg();
        return this;
      }
      /**
       * <code>optional string smartCardMsg = 1;</code>
       */
      public Builder setSmartCardMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSmartCardMsgBytes(value);
        return this;
      }

      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>optional bool startCard = 3;</code>
       */
      public boolean hasStartCard() {
        return instance.hasStartCard();
      }
      /**
       * <code>optional bool startCard = 3;</code>
       */
      public boolean getStartCard() {
        return instance.getStartCard();
      }
      /**
       * <code>optional bool startCard = 3;</code>
       */
      public Builder setStartCard(boolean value) {
        copyOnWrite();
        instance.setStartCard(value);
        return this;
      }
      /**
       * <code>optional bool startCard = 3;</code>
       */
      public Builder clearStartCard() {
        copyOnWrite();
        instance.clearStartCard();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.SmartCard)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard) arg1;
          smartCardMsg_ = visitor.visitString(
              hasSmartCardMsg(), smartCardMsg_,
              other.hasSmartCardMsg(), other.smartCardMsg_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          startCard_ = visitor.visitBoolean(
              hasStartCard(), startCard_,
              other.hasStartCard(), other.startCard_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  smartCardMsg_ = s;
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  data_ = input.readBytes();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  startCard_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.SmartCard)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SmartCard();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SmartCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SmartCard> PARSER;

    public static com.google.protobuf.Parser<SmartCard> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RDPInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.RDPInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    boolean hasUserMsg();
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    java.lang.String getUserMsg();
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserMsgBytes();

    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    boolean hasSaltMsg();
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    java.lang.String getSaltMsg();
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    com.google.protobuf.ByteString
        getSaltMsgBytes();

    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    boolean hasWindowsMsg();
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    java.lang.String getWindowsMsg();
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    com.google.protobuf.ByteString
        getWindowsMsgBytes();

    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    boolean hasStatus();
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    java.lang.String getStatus();
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    com.google.protobuf.ByteString
        getStatusBytes();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.RDPInfo}
   */
  public  static final class RDPInfo extends
      com.google.protobuf.GeneratedMessageLite<
          RDPInfo, RDPInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.RDPInfo)
      RDPInfoOrBuilder {
    private RDPInfo() {
      userMsg_ = "";
      saltMsg_ = "";
      windowsMsg_ = "";
      status_ = "";
    }
    private int bitField0_;
    public static final int USERMSG_FIELD_NUMBER = 1;
    private java.lang.String userMsg_;
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    public boolean hasUserMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    public java.lang.String getUserMsg() {
      return userMsg_;
    }
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userMsg_);
    }
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    private void setUserMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userMsg_ = value;
    }
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    private void clearUserMsg() {
      bitField0_ = (bitField0_ & ~0x00000001);
      userMsg_ = getDefaultInstance().getUserMsg();
    }
    /**
     * <pre>
     *account
     * </pre>
     *
     * <code>optional string userMsg = 1;</code>
     */
    private void setUserMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      userMsg_ = value.toStringUtf8();
    }

    public static final int SALTMSG_FIELD_NUMBER = 2;
    private java.lang.String saltMsg_;
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    public boolean hasSaltMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    public java.lang.String getSaltMsg() {
      return saltMsg_;
    }
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSaltMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(saltMsg_);
    }
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    private void setSaltMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      saltMsg_ = value;
    }
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    private void clearSaltMsg() {
      bitField0_ = (bitField0_ & ~0x00000002);
      saltMsg_ = getDefaultInstance().getSaltMsg();
    }
    /**
     * <pre>
     *pwd
     * </pre>
     *
     * <code>optional string saltMsg = 2;</code>
     */
    private void setSaltMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      saltMsg_ = value.toStringUtf8();
    }

    public static final int WINDOWSMSG_FIELD_NUMBER = 3;
    private java.lang.String windowsMsg_;
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    public boolean hasWindowsMsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    public java.lang.String getWindowsMsg() {
      return windowsMsg_;
    }
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    public com.google.protobuf.ByteString
        getWindowsMsgBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(windowsMsg_);
    }
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    private void setWindowsMsg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      windowsMsg_ = value;
    }
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    private void clearWindowsMsg() {
      bitField0_ = (bitField0_ & ~0x00000004);
      windowsMsg_ = getDefaultInstance().getWindowsMsg();
    }
    /**
     * <pre>
     *windows ip
     * </pre>
     *
     * <code>optional string windowsMsg = 3;</code>
     */
    private void setWindowsMsgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      windowsMsg_ = value.toStringUtf8();
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private java.lang.String status_;
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    public java.lang.String getStatus() {
      return status_;
    }
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStatusBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(status_);
    }
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    private void setStatus(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      status_ = value;
    }
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000008);
      status_ = getDefaultInstance().getStatus();
    }
    /**
     * <pre>
     *rdp status
     * </pre>
     *
     * <code>optional string status = 4;</code>
     */
    private void setStatusBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      status_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getUserMsg());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getSaltMsg());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getWindowsMsg());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getStatus());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserMsg());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSaltMsg());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getWindowsMsg());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getStatus());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.RDPInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.RDPInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.RDPInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public boolean hasUserMsg() {
        return instance.hasUserMsg();
      }
      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public java.lang.String getUserMsg() {
        return instance.getUserMsg();
      }
      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserMsgBytes() {
        return instance.getUserMsgBytes();
      }
      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public Builder setUserMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserMsg(value);
        return this;
      }
      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public Builder clearUserMsg() {
        copyOnWrite();
        instance.clearUserMsg();
        return this;
      }
      /**
       * <pre>
       *account
       * </pre>
       *
       * <code>optional string userMsg = 1;</code>
       */
      public Builder setUserMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserMsgBytes(value);
        return this;
      }

      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public boolean hasSaltMsg() {
        return instance.hasSaltMsg();
      }
      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public java.lang.String getSaltMsg() {
        return instance.getSaltMsg();
      }
      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSaltMsgBytes() {
        return instance.getSaltMsgBytes();
      }
      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public Builder setSaltMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setSaltMsg(value);
        return this;
      }
      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public Builder clearSaltMsg() {
        copyOnWrite();
        instance.clearSaltMsg();
        return this;
      }
      /**
       * <pre>
       *pwd
       * </pre>
       *
       * <code>optional string saltMsg = 2;</code>
       */
      public Builder setSaltMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSaltMsgBytes(value);
        return this;
      }

      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public boolean hasWindowsMsg() {
        return instance.hasWindowsMsg();
      }
      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public java.lang.String getWindowsMsg() {
        return instance.getWindowsMsg();
      }
      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public com.google.protobuf.ByteString
          getWindowsMsgBytes() {
        return instance.getWindowsMsgBytes();
      }
      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public Builder setWindowsMsg(
          java.lang.String value) {
        copyOnWrite();
        instance.setWindowsMsg(value);
        return this;
      }
      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public Builder clearWindowsMsg() {
        copyOnWrite();
        instance.clearWindowsMsg();
        return this;
      }
      /**
       * <pre>
       *windows ip
       * </pre>
       *
       * <code>optional string windowsMsg = 3;</code>
       */
      public Builder setWindowsMsgBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setWindowsMsgBytes(value);
        return this;
      }

      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public java.lang.String getStatus() {
        return instance.getStatus();
      }
      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStatusBytes() {
        return instance.getStatusBytes();
      }
      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public Builder setStatus(
          java.lang.String value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }
      /**
       * <pre>
       *rdp status
       * </pre>
       *
       * <code>optional string status = 4;</code>
       */
      public Builder setStatusBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStatusBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.RDPInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo) arg1;
          userMsg_ = visitor.visitString(
              hasUserMsg(), userMsg_,
              other.hasUserMsg(), other.userMsg_);
          saltMsg_ = visitor.visitString(
              hasSaltMsg(), saltMsg_,
              other.hasSaltMsg(), other.saltMsg_);
          windowsMsg_ = visitor.visitString(
              hasWindowsMsg(), windowsMsg_,
              other.hasWindowsMsg(), other.windowsMsg_);
          status_ = visitor.visitString(
              hasStatus(), status_,
              other.hasStatus(), other.status_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  userMsg_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  saltMsg_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  windowsMsg_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  status_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.RDPInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RDPInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RDPInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RDPInfo> PARSER;

    public static com.google.protobuf.Parser<RDPInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface QRstringReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.QRstringReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string qrstring = 1;</code>
     */
    boolean hasQrstring();
    /**
     * <code>required string qrstring = 1;</code>
     */
    java.lang.String getQrstring();
    /**
     * <code>required string qrstring = 1;</code>
     */
    com.google.protobuf.ByteString
        getQrstringBytes();
  }
  /**
   * Protobuf type {@code brahma.QRstringReq}
   */
  public  static final class QRstringReq extends
      com.google.protobuf.GeneratedMessageLite<
          QRstringReq, QRstringReq.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.QRstringReq)
      QRstringReqOrBuilder {
    private QRstringReq() {
      qrstring_ = "";
    }
    private int bitField0_;
    public static final int QRSTRING_FIELD_NUMBER = 1;
    private java.lang.String qrstring_;
    /**
     * <code>required string qrstring = 1;</code>
     */
    public boolean hasQrstring() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string qrstring = 1;</code>
     */
    public java.lang.String getQrstring() {
      return qrstring_;
    }
    /**
     * <code>required string qrstring = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQrstringBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(qrstring_);
    }
    /**
     * <code>required string qrstring = 1;</code>
     */
    private void setQrstring(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      qrstring_ = value;
    }
    /**
     * <code>required string qrstring = 1;</code>
     */
    private void clearQrstring() {
      bitField0_ = (bitField0_ & ~0x00000001);
      qrstring_ = getDefaultInstance().getQrstring();
    }
    /**
     * <code>required string qrstring = 1;</code>
     */
    private void setQrstringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      qrstring_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getQrstring());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getQrstring());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code brahma.QRstringReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.QRstringReq)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReqOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.QRstringReq.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string qrstring = 1;</code>
       */
      public boolean hasQrstring() {
        return instance.hasQrstring();
      }
      /**
       * <code>required string qrstring = 1;</code>
       */
      public java.lang.String getQrstring() {
        return instance.getQrstring();
      }
      /**
       * <code>required string qrstring = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQrstringBytes() {
        return instance.getQrstringBytes();
      }
      /**
       * <code>required string qrstring = 1;</code>
       */
      public Builder setQrstring(
          java.lang.String value) {
        copyOnWrite();
        instance.setQrstring(value);
        return this;
      }
      /**
       * <code>required string qrstring = 1;</code>
       */
      public Builder clearQrstring() {
        copyOnWrite();
        instance.clearQrstring();
        return this;
      }
      /**
       * <code>required string qrstring = 1;</code>
       */
      public Builder setQrstringBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setQrstringBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.QRstringReq)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasQrstring()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq) arg1;
          qrstring_ = visitor.visitString(
              hasQrstring(), qrstring_,
              other.hasQrstring(), other.qrstring_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  qrstring_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.QRstringReq)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new QRstringReq();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.QRstringReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<QRstringReq> PARSER;

    public static com.google.protobuf.Parser<QRstringReq> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.File)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string filename = 1;</code>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>optional bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string targetPath = 3;</code>
     */
    boolean hasTargetPath();
    /**
     * <code>optional string targetPath = 3;</code>
     */
    java.lang.String getTargetPath();
    /**
     * <code>optional string targetPath = 3;</code>
     */
    com.google.protobuf.ByteString
        getTargetPathBytes();
  }
  /**
   * Protobuf type {@code brahma.File}
   */
  public  static final class File extends
      com.google.protobuf.GeneratedMessageLite<
          File, File.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.File)
      FileOrBuilder {
    private File() {
      filename_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      targetPath_ = "";
    }
    private int bitField0_;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.String filename_;
    /**
     * <code>required string filename = 1;</code>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public java.lang.String getFilename() {
      return filename_;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filename_);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilename(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void clearFilename() {
      bitField0_ = (bitField0_ & ~0x00000001);
      filename_ = getDefaultInstance().getFilename();
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilenameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value.toStringUtf8();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }

    public static final int TARGETPATH_FIELD_NUMBER = 3;
    private java.lang.String targetPath_;
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public boolean hasTargetPath() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public java.lang.String getTargetPath() {
      return targetPath_;
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTargetPathBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(targetPath_);
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void setTargetPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      targetPath_ = value;
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void clearTargetPath() {
      bitField0_ = (bitField0_ & ~0x00000004);
      targetPath_ = getDefaultInstance().getTargetPath();
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void setTargetPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      targetPath_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getFilename());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getTargetPath());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFilename());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTargetPath());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.File prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code brahma.File}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.File)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.File.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string filename = 1;</code>
       */
      public boolean hasFilename() {
        return instance.hasFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public java.lang.String getFilename() {
        return instance.getFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        return instance.getFilenameBytes();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilename(value);
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder clearFilename() {
        copyOnWrite();
        instance.clearFilename();
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilenameBytes(value);
        return this;
      }

      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>optional string targetPath = 3;</code>
       */
      public boolean hasTargetPath() {
        return instance.hasTargetPath();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public java.lang.String getTargetPath() {
        return instance.getTargetPath();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTargetPathBytes() {
        return instance.getTargetPathBytes();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder setTargetPath(
          java.lang.String value) {
        copyOnWrite();
        instance.setTargetPath(value);
        return this;
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder clearTargetPath() {
        copyOnWrite();
        instance.clearTargetPath();
        return this;
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder setTargetPathBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTargetPathBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.File)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.File();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFilename()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.File other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.File) arg1;
          filename_ = visitor.visitString(
              hasFilename(), filename_,
              other.hasFilename(), other.filename_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          targetPath_ = visitor.visitString(
              hasTargetPath(), targetPath_,
              other.hasTargetPath(), other.targetPath_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  filename_ = s;
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  data_ = input.readBytes();
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  targetPath_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.File.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.File)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.File DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new File();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.File getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<File> PARSER;

    public static com.google.protobuf.Parser<File> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.FileAudio)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string filename = 1;</code>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>optional bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional string targetPath = 3;</code>
     */
    boolean hasTargetPath();
    /**
     * <code>optional string targetPath = 3;</code>
     */
    java.lang.String getTargetPath();
    /**
     * <code>optional string targetPath = 3;</code>
     */
    com.google.protobuf.ByteString
        getTargetPathBytes();
  }
  /**
   * Protobuf type {@code brahma.FileAudio}
   */
  public  static final class FileAudio extends
      com.google.protobuf.GeneratedMessageLite<
          FileAudio, FileAudio.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.FileAudio)
      FileAudioOrBuilder {
    private FileAudio() {
      filename_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      targetPath_ = "";
    }
    private int bitField0_;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.String filename_;
    /**
     * <code>required string filename = 1;</code>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public java.lang.String getFilename() {
      return filename_;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filename_);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilename(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void clearFilename() {
      bitField0_ = (bitField0_ & ~0x00000001);
      filename_ = getDefaultInstance().getFilename();
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilenameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value.toStringUtf8();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <code>optional bytes data = 2;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }

    public static final int TARGETPATH_FIELD_NUMBER = 3;
    private java.lang.String targetPath_;
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public boolean hasTargetPath() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public java.lang.String getTargetPath() {
      return targetPath_;
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTargetPathBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(targetPath_);
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void setTargetPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      targetPath_ = value;
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void clearTargetPath() {
      bitField0_ = (bitField0_ & ~0x00000004);
      targetPath_ = getDefaultInstance().getTargetPath();
    }
    /**
     * <code>optional string targetPath = 3;</code>
     */
    private void setTargetPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      targetPath_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getFilename());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getTargetPath());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFilename());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTargetPath());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code brahma.FileAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.FileAudio)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudioOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.FileAudio.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string filename = 1;</code>
       */
      public boolean hasFilename() {
        return instance.hasFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public java.lang.String getFilename() {
        return instance.getFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        return instance.getFilenameBytes();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilename(value);
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder clearFilename() {
        copyOnWrite();
        instance.clearFilename();
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilenameBytes(value);
        return this;
      }

      /**
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>optional string targetPath = 3;</code>
       */
      public boolean hasTargetPath() {
        return instance.hasTargetPath();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public java.lang.String getTargetPath() {
        return instance.getTargetPath();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTargetPathBytes() {
        return instance.getTargetPathBytes();
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder setTargetPath(
          java.lang.String value) {
        copyOnWrite();
        instance.setTargetPath(value);
        return this;
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder clearTargetPath() {
        copyOnWrite();
        instance.clearTargetPath();
        return this;
      }
      /**
       * <code>optional string targetPath = 3;</code>
       */
      public Builder setTargetPathBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTargetPathBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.FileAudio)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFilename()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio) arg1;
          filename_ = visitor.visitString(
              hasFilename(), filename_,
              other.hasFilename(), other.filename_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          targetPath_ = visitor.visitString(
              hasTargetPath(), targetPath_,
              other.hasTargetPath(), other.targetPath_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  filename_ = s;
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  data_ = input.readBytes();
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  targetPath_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.FileAudio)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileAudio();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FileAudio> PARSER;

    public static com.google.protobuf.Parser<FileAudio> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.FileRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string filename = 1;</code>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 1;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();
  }
  /**
   * Protobuf type {@code brahma.FileRequest}
   */
  public  static final class FileRequest extends
      com.google.protobuf.GeneratedMessageLite<
          FileRequest, FileRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.FileRequest)
      FileRequestOrBuilder {
    private FileRequest() {
      filename_ = "";
    }
    private int bitField0_;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.String filename_;
    /**
     * <code>required string filename = 1;</code>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public java.lang.String getFilename() {
      return filename_;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filename_);
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilename(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value;
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void clearFilename() {
      bitField0_ = (bitField0_ & ~0x00000001);
      filename_ = getDefaultInstance().getFilename();
    }
    /**
     * <code>required string filename = 1;</code>
     */
    private void setFilenameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      filename_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getFilename());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFilename());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code brahma.FileRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.FileRequest)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequestOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.FileRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string filename = 1;</code>
       */
      public boolean hasFilename() {
        return instance.hasFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public java.lang.String getFilename() {
        return instance.getFilename();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        return instance.getFilenameBytes();
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilename(value);
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder clearFilename() {
        copyOnWrite();
        instance.clearFilename();
        return this;
      }
      /**
       * <code>required string filename = 1;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilenameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.FileRequest)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasFilename()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest) arg1;
          filename_ = visitor.visitString(
              hasFilename(), filename_,
              other.hasFilename(), other.filename_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  filename_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.FileRequest)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.FileRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FileRequest> PARSER;

    public static com.google.protobuf.Parser<FileRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Notification)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    boolean hasContentTitle();
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    java.lang.String getContentTitle();
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentTitleBytes();

    /**
     * <code>required string contentText = 2;</code>
     */
    boolean hasContentText();
    /**
     * <code>required string contentText = 2;</code>
     */
    java.lang.String getContentText();
    /**
     * <code>required string contentText = 2;</code>
     */
    com.google.protobuf.ByteString
        getContentTextBytes();

    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    boolean hasSmallIcon();
    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    com.google.protobuf.ByteString getSmallIcon();

    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    boolean hasLargeIcon();
    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    com.google.protobuf.ByteString getLargeIcon();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.Notification}
   */
  public  static final class Notification extends
      com.google.protobuf.GeneratedMessageLite<
          Notification, Notification.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Notification)
      NotificationOrBuilder {
    private Notification() {
      contentTitle_ = "";
      contentText_ = "";
      smallIcon_ = com.google.protobuf.ByteString.EMPTY;
      largeIcon_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CONTENTTITLE_FIELD_NUMBER = 1;
    private java.lang.String contentTitle_;
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    public boolean hasContentTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    public java.lang.String getContentTitle() {
      return contentTitle_;
    }
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentTitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentTitle_);
    }
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    private void setContentTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentTitle_ = value;
    }
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    private void clearContentTitle() {
      bitField0_ = (bitField0_ & ~0x00000001);
      contentTitle_ = getDefaultInstance().getContentTitle();
    }
    /**
     * <pre>
     *All of the following correspond directly to fields in Android's Notification object,
     *with the exception of the icon fields which directly include image data rather than references
     * </pre>
     *
     * <code>required string contentTitle = 1;</code>
     */
    private void setContentTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentTitle_ = value.toStringUtf8();
    }

    public static final int CONTENTTEXT_FIELD_NUMBER = 2;
    private java.lang.String contentText_;
    /**
     * <code>required string contentText = 2;</code>
     */
    public boolean hasContentText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string contentText = 2;</code>
     */
    public java.lang.String getContentText() {
      return contentText_;
    }
    /**
     * <code>required string contentText = 2;</code>
     */
    public com.google.protobuf.ByteString
        getContentTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentText_);
    }
    /**
     * <code>required string contentText = 2;</code>
     */
    private void setContentText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      contentText_ = value;
    }
    /**
     * <code>required string contentText = 2;</code>
     */
    private void clearContentText() {
      bitField0_ = (bitField0_ & ~0x00000002);
      contentText_ = getDefaultInstance().getContentText();
    }
    /**
     * <code>required string contentText = 2;</code>
     */
    private void setContentTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      contentText_ = value.toStringUtf8();
    }

    public static final int SMALLICON_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString smallIcon_;
    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    public boolean hasSmallIcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    public com.google.protobuf.ByteString getSmallIcon() {
      return smallIcon_;
    }
    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    private void setSmallIcon(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      smallIcon_ = value;
    }
    /**
     * <code>required bytes smallIcon = 3;</code>
     */
    private void clearSmallIcon() {
      bitField0_ = (bitField0_ & ~0x00000004);
      smallIcon_ = getDefaultInstance().getSmallIcon();
    }

    public static final int LARGEICON_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString largeIcon_;
    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    public boolean hasLargeIcon() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    public com.google.protobuf.ByteString getLargeIcon() {
      return largeIcon_;
    }
    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    private void setLargeIcon(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      largeIcon_ = value;
    }
    /**
     * <pre>
     * TODO: add additional optional notification fields as necessary
     * </pre>
     *
     * <code>optional bytes largeIcon = 4;</code>
     */
    private void clearLargeIcon() {
      bitField0_ = (bitField0_ & ~0x00000008);
      largeIcon_ = getDefaultInstance().getLargeIcon();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getContentTitle());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getContentText());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, smallIcon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, largeIcon_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getContentTitle());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getContentText());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, smallIcon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, largeIcon_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Notification)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.NotificationOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Notification.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public boolean hasContentTitle() {
        return instance.hasContentTitle();
      }
      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public java.lang.String getContentTitle() {
        return instance.getContentTitle();
      }
      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentTitleBytes() {
        return instance.getContentTitleBytes();
      }
      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public Builder setContentTitle(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentTitle(value);
        return this;
      }
      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public Builder clearContentTitle() {
        copyOnWrite();
        instance.clearContentTitle();
        return this;
      }
      /**
       * <pre>
       *All of the following correspond directly to fields in Android's Notification object,
       *with the exception of the icon fields which directly include image data rather than references
       * </pre>
       *
       * <code>required string contentTitle = 1;</code>
       */
      public Builder setContentTitleBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentTitleBytes(value);
        return this;
      }

      /**
       * <code>required string contentText = 2;</code>
       */
      public boolean hasContentText() {
        return instance.hasContentText();
      }
      /**
       * <code>required string contentText = 2;</code>
       */
      public java.lang.String getContentText() {
        return instance.getContentText();
      }
      /**
       * <code>required string contentText = 2;</code>
       */
      public com.google.protobuf.ByteString
          getContentTextBytes() {
        return instance.getContentTextBytes();
      }
      /**
       * <code>required string contentText = 2;</code>
       */
      public Builder setContentText(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentText(value);
        return this;
      }
      /**
       * <code>required string contentText = 2;</code>
       */
      public Builder clearContentText() {
        copyOnWrite();
        instance.clearContentText();
        return this;
      }
      /**
       * <code>required string contentText = 2;</code>
       */
      public Builder setContentTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentTextBytes(value);
        return this;
      }

      /**
       * <code>required bytes smallIcon = 3;</code>
       */
      public boolean hasSmallIcon() {
        return instance.hasSmallIcon();
      }
      /**
       * <code>required bytes smallIcon = 3;</code>
       */
      public com.google.protobuf.ByteString getSmallIcon() {
        return instance.getSmallIcon();
      }
      /**
       * <code>required bytes smallIcon = 3;</code>
       */
      public Builder setSmallIcon(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSmallIcon(value);
        return this;
      }
      /**
       * <code>required bytes smallIcon = 3;</code>
       */
      public Builder clearSmallIcon() {
        copyOnWrite();
        instance.clearSmallIcon();
        return this;
      }

      /**
       * <pre>
       * TODO: add additional optional notification fields as necessary
       * </pre>
       *
       * <code>optional bytes largeIcon = 4;</code>
       */
      public boolean hasLargeIcon() {
        return instance.hasLargeIcon();
      }
      /**
       * <pre>
       * TODO: add additional optional notification fields as necessary
       * </pre>
       *
       * <code>optional bytes largeIcon = 4;</code>
       */
      public com.google.protobuf.ByteString getLargeIcon() {
        return instance.getLargeIcon();
      }
      /**
       * <pre>
       * TODO: add additional optional notification fields as necessary
       * </pre>
       *
       * <code>optional bytes largeIcon = 4;</code>
       */
      public Builder setLargeIcon(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLargeIcon(value);
        return this;
      }
      /**
       * <pre>
       * TODO: add additional optional notification fields as necessary
       * </pre>
       *
       * <code>optional bytes largeIcon = 4;</code>
       */
      public Builder clearLargeIcon() {
        copyOnWrite();
        instance.clearLargeIcon();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Notification)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasContentTitle()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasContentText()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSmallIcon()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification) arg1;
          contentTitle_ = visitor.visitString(
              hasContentTitle(), contentTitle_,
              other.hasContentTitle(), other.contentTitle_);
          contentText_ = visitor.visitString(
              hasContentText(), contentText_,
              other.hasContentText(), other.contentText_);
          smallIcon_ = visitor.visitByteString(
              hasSmallIcon(), smallIcon_,
              other.hasSmallIcon(), other.smallIcon_);
          largeIcon_ = visitor.visitByteString(
              hasLargeIcon(), largeIcon_,
              other.hasLargeIcon(), other.largeIcon_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  contentTitle_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  contentText_ = s;
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  smallIcon_ = input.readBytes();
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000008;
                  largeIcon_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Notification)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Notification();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Notification> PARSER;

    public static com.google.protobuf.Parser<Notification> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TouchEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.TouchEvent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 action = 1;</code>
     */
    boolean hasAction();
    /**
     * <code>required int32 action = 1;</code>
     */
    int getAction();

    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords>
        getItemsList();
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getItems(int index);
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    int getItemsCount();

    /**
     * <code>optional int64 downTime = 3;</code>
     */
    boolean hasDownTime();
    /**
     * <code>optional int64 downTime = 3;</code>
     */
    long getDownTime();

    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    boolean hasEventTime();
    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    long getEventTime();

    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent>
        getHistoricalList();
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent getHistorical(int index);
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    int getHistoricalCount();

    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    boolean hasEdgeFlags();
    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    int getEdgeFlags();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.TouchEvent}
   */
  public  static final class TouchEvent extends
      com.google.protobuf.GeneratedMessageLite<
          TouchEvent, TouchEvent.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.TouchEvent)
      TouchEventOrBuilder {
    private TouchEvent() {
      items_ = emptyProtobufList();
      historical_ = emptyProtobufList();
    }
    public interface PointerCoordsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:brahma.TouchEvent.PointerCoords)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required int32 id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       */
      int getId();

      /**
       * <code>required float x = 2;</code>
       */
      boolean hasX();
      /**
       * <code>required float x = 2;</code>
       */
      float getX();

      /**
       * <code>required float y = 3;</code>
       */
      boolean hasY();
      /**
       * <code>required float y = 3;</code>
       */
      float getY();
    }
    /**
     * Protobuf type {@code brahma.TouchEvent.PointerCoords}
     */
    public  static final class PointerCoords extends
        com.google.protobuf.GeneratedMessageLite<
            PointerCoords, PointerCoords.Builder> implements
        // @@protoc_insertion_point(message_implements:brahma.TouchEvent.PointerCoords)
        PointerCoordsOrBuilder {
      private PointerCoords() {
      }
      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      private void setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      private void clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
      }

      public static final int X_FIELD_NUMBER = 2;
      private float x_;
      /**
       * <code>required float x = 2;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>required float x = 2;</code>
       */
      private void setX(float value) {
        bitField0_ |= 0x00000002;
        x_ = value;
      }
      /**
       * <code>required float x = 2;</code>
       */
      private void clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0F;
      }

      public static final int Y_FIELD_NUMBER = 3;
      private float y_;
      /**
       * <code>required float y = 3;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float y = 3;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>required float y = 3;</code>
       */
      private void setY(float value) {
        bitField0_ |= 0x00000004;
        y_ = value;
      }
      /**
       * <code>required float y = 3;</code>
       */
      private void clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0F;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, y_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, y_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code brahma.TouchEvent.PointerCoords}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords, Builder> implements
          // @@protoc_insertion_point(builder_implements:brahma.TouchEvent.PointerCoords)
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoordsOrBuilder {
        // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required int32 id = 1;</code>
         */
        public boolean hasId() {
          return instance.hasId();
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public int getId() {
          return instance.getId();
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public Builder setId(int value) {
          copyOnWrite();
          instance.setId(value);
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         */
        public Builder clearId() {
          copyOnWrite();
          instance.clearId();
          return this;
        }

        /**
         * <code>required float x = 2;</code>
         */
        public boolean hasX() {
          return instance.hasX();
        }
        /**
         * <code>required float x = 2;</code>
         */
        public float getX() {
          return instance.getX();
        }
        /**
         * <code>required float x = 2;</code>
         */
        public Builder setX(float value) {
          copyOnWrite();
          instance.setX(value);
          return this;
        }
        /**
         * <code>required float x = 2;</code>
         */
        public Builder clearX() {
          copyOnWrite();
          instance.clearX();
          return this;
        }

        /**
         * <code>required float y = 3;</code>
         */
        public boolean hasY() {
          return instance.hasY();
        }
        /**
         * <code>required float y = 3;</code>
         */
        public float getY() {
          return instance.getY();
        }
        /**
         * <code>required float y = 3;</code>
         */
        public Builder setY(float value) {
          copyOnWrite();
          instance.setY(value);
          return this;
        }
        /**
         * <code>required float y = 3;</code>
         */
        public Builder clearY() {
          copyOnWrite();
          instance.clearY();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:brahma.TouchEvent.PointerCoords)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasId()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasX()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasY()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords) arg1;
            id_ = visitor.visitInt(
                hasId(), id_,
                other.hasId(), other.id_);
            x_ = visitor.visitFloat(
                hasX(), x_,
                other.hasX(), other.x_);
            y_ = visitor.visitFloat(
                hasY(), y_,
                other.hasY(), other.y_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    id_ = input.readInt32();
                    break;
                  }
                  case 21: {
                    bitField0_ |= 0x00000002;
                    x_ = input.readFloat();
                    break;
                  }
                  case 29: {
                    bitField0_ |= 0x00000004;
                    y_ = input.readFloat();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:brahma.TouchEvent.PointerCoords)
      private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PointerCoords();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PointerCoords> PARSER;

      public static com.google.protobuf.Parser<PointerCoords> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface HistoricalEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:brahma.TouchEvent.HistoricalEvent)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required int64 eventTime = 1;</code>
       */
      boolean hasEventTime();
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      long getEventTime();

      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords>
          getCoordsList();
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getCoords(int index);
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      int getCoordsCount();
    }
    /**
     * Protobuf type {@code brahma.TouchEvent.HistoricalEvent}
     */
    public  static final class HistoricalEvent extends
        com.google.protobuf.GeneratedMessageLite<
            HistoricalEvent, HistoricalEvent.Builder> implements
        // @@protoc_insertion_point(message_implements:brahma.TouchEvent.HistoricalEvent)
        HistoricalEventOrBuilder {
      private HistoricalEvent() {
        coords_ = emptyProtobufList();
      }
      private int bitField0_;
      public static final int EVENTTIME_FIELD_NUMBER = 1;
      private long eventTime_;
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public boolean hasEventTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public long getEventTime() {
        return eventTime_;
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      private void setEventTime(long value) {
        bitField0_ |= 0x00000001;
        eventTime_ = value;
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      private void clearEventTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventTime_ = 0L;
      }

      public static final int COORDS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> coords_;
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> getCoordsList() {
        return coords_;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoordsOrBuilder>
          getCoordsOrBuilderList() {
        return coords_;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      public int getCoordsCount() {
        return coords_.size();
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getCoords(int index) {
        return coords_.get(index);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoordsOrBuilder getCoordsOrBuilder(
          int index) {
        return coords_.get(index);
      }
      private void ensureCoordsIsMutable() {
        if (!coords_.isModifiable()) {
          coords_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(coords_);
         }
      }

      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void setCoords(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoordsIsMutable();
        coords_.set(index, value);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void setCoords(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureCoordsIsMutable();
        coords_.set(index, builderForValue.build());
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void addCoords(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoordsIsMutable();
        coords_.add(value);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void addCoords(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoordsIsMutable();
        coords_.add(index, value);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void addCoords(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureCoordsIsMutable();
        coords_.add(builderForValue.build());
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void addCoords(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureCoordsIsMutable();
        coords_.add(index, builderForValue.build());
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void addAllCoords(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> values) {
        ensureCoordsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, coords_);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void clearCoords() {
        coords_ = emptyProtobufList();
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
       */
      private void removeCoords(int index) {
        ensureCoordsIsMutable();
        coords_.remove(index);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, eventTime_);
        }
        for (int i = 0; i < coords_.size(); i++) {
          output.writeMessage(2, coords_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, eventTime_);
        }
        for (int i = 0; i < coords_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, coords_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code brahma.TouchEvent.HistoricalEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent, Builder> implements
          // @@protoc_insertion_point(builder_implements:brahma.TouchEvent.HistoricalEvent)
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEventOrBuilder {
        // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required int64 eventTime = 1;</code>
         */
        public boolean hasEventTime() {
          return instance.hasEventTime();
        }
        /**
         * <code>required int64 eventTime = 1;</code>
         */
        public long getEventTime() {
          return instance.getEventTime();
        }
        /**
         * <code>required int64 eventTime = 1;</code>
         */
        public Builder setEventTime(long value) {
          copyOnWrite();
          instance.setEventTime(value);
          return this;
        }
        /**
         * <code>required int64 eventTime = 1;</code>
         */
        public Builder clearEventTime() {
          copyOnWrite();
          instance.clearEventTime();
          return this;
        }

        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> getCoordsList() {
          return java.util.Collections.unmodifiableList(
              instance.getCoordsList());
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public int getCoordsCount() {
          return instance.getCoordsCount();
        }/**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getCoords(int index) {
          return instance.getCoords(index);
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder setCoords(
            int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
          copyOnWrite();
          instance.setCoords(index, value);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder setCoords(
            int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          copyOnWrite();
          instance.setCoords(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder addCoords(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
          copyOnWrite();
          instance.addCoords(value);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder addCoords(
            int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
          copyOnWrite();
          instance.addCoords(index, value);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder addCoords(
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          copyOnWrite();
          instance.addCoords(builderForValue);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder addCoords(
            int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          copyOnWrite();
          instance.addCoords(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder addAllCoords(
            java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> values) {
          copyOnWrite();
          instance.addAllCoords(values);
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder clearCoords() {
          copyOnWrite();
          instance.clearCoords();
          return this;
        }
        /**
         * <code>repeated .brahma.TouchEvent.PointerCoords coords = 2;</code>
         */
        public Builder removeCoords(int index) {
          copyOnWrite();
          instance.removeCoords(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:brahma.TouchEvent.HistoricalEvent)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasEventTime()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            for (int i = 0; i < getCoordsCount(); i++) {
              if (!getCoords(i).isInitialized()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            coords_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent) arg1;
            eventTime_ = visitor.visitLong(
                hasEventTime(), eventTime_,
                other.hasEventTime(), other.eventTime_);
            coords_= visitor.visitList(coords_, other.coords_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    eventTime_ = input.readInt64();
                    break;
                  }
                  case 18: {
                    if (!coords_.isModifiable()) {
                      coords_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(coords_);
                    }
                    coords_.add(
                        input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.parser(), extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:brahma.TouchEvent.HistoricalEvent)
      private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new HistoricalEvent();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<HistoricalEvent> PARSER;

      public static com.google.protobuf.Parser<HistoricalEvent> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required int32 action = 1;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 action = 1;</code>
     */
    public int getAction() {
      return action_;
    }
    /**
     * <code>required int32 action = 1;</code>
     */
    private void setAction(int value) {
      bitField0_ |= 0x00000001;
      action_ = value;
    }
    /**
     * <code>required int32 action = 1;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 0;
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> items_;
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoordsOrBuilder>
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoordsOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }
    private void ensureItemsIsMutable() {
      if (!items_.isModifiable()) {
        items_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(items_);
       }
    }

    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void setItems(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemsIsMutable();
      items_.set(index, value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void setItems(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
      ensureItemsIsMutable();
      items_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void addItems(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemsIsMutable();
      items_.add(value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void addItems(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemsIsMutable();
      items_.add(index, value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void addItems(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
      ensureItemsIsMutable();
      items_.add(builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void addItems(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
      ensureItemsIsMutable();
      items_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void addAllItems(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> values) {
      ensureItemsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, items_);
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void clearItems() {
      items_ = emptyProtobufList();
    }
    /**
     * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
     */
    private void removeItems(int index) {
      ensureItemsIsMutable();
      items_.remove(index);
    }

    public static final int DOWNTIME_FIELD_NUMBER = 3;
    private long downTime_;
    /**
     * <code>optional int64 downTime = 3;</code>
     */
    public boolean hasDownTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 downTime = 3;</code>
     */
    public long getDownTime() {
      return downTime_;
    }
    /**
     * <code>optional int64 downTime = 3;</code>
     */
    private void setDownTime(long value) {
      bitField0_ |= 0x00000002;
      downTime_ = value;
    }
    /**
     * <code>optional int64 downTime = 3;</code>
     */
    private void clearDownTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      downTime_ = 0L;
    }

    public static final int EVENTTIME_FIELD_NUMBER = 4;
    private long eventTime_;
    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    public boolean hasEventTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    public long getEventTime() {
      return eventTime_;
    }
    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    private void setEventTime(long value) {
      bitField0_ |= 0x00000004;
      eventTime_ = value;
    }
    /**
     * <code>optional int64 eventTime = 4;</code>
     */
    private void clearEventTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      eventTime_ = 0L;
    }

    public static final int HISTORICAL_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent> historical_;
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent> getHistoricalList() {
      return historical_;
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEventOrBuilder>
        getHistoricalOrBuilderList() {
      return historical_;
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    public int getHistoricalCount() {
      return historical_.size();
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent getHistorical(int index) {
      return historical_.get(index);
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEventOrBuilder getHistoricalOrBuilder(
        int index) {
      return historical_.get(index);
    }
    private void ensureHistoricalIsMutable() {
      if (!historical_.isModifiable()) {
        historical_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(historical_);
       }
    }

    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void setHistorical(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHistoricalIsMutable();
      historical_.set(index, value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void setHistorical(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
      ensureHistoricalIsMutable();
      historical_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void addHistorical(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHistoricalIsMutable();
      historical_.add(value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void addHistorical(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHistoricalIsMutable();
      historical_.add(index, value);
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void addHistorical(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
      ensureHistoricalIsMutable();
      historical_.add(builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void addHistorical(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
      ensureHistoricalIsMutable();
      historical_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void addAllHistorical(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent> values) {
      ensureHistoricalIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, historical_);
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void clearHistorical() {
      historical_ = emptyProtobufList();
    }
    /**
     * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
     */
    private void removeHistorical(int index) {
      ensureHistoricalIsMutable();
      historical_.remove(index);
    }

    public static final int EDGEFLAGS_FIELD_NUMBER = 6;
    private int edgeFlags_;
    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    public boolean hasEdgeFlags() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    public int getEdgeFlags() {
      return edgeFlags_;
    }
    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    private void setEdgeFlags(int value) {
      bitField0_ |= 0x00000008;
      edgeFlags_ = value;
    }
    /**
     * <code>optional int32 edgeFlags = 6;</code>
     */
    private void clearEdgeFlags() {
      bitField0_ = (bitField0_ & ~0x00000008);
      edgeFlags_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, downTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, eventTime_);
      }
      for (int i = 0; i < historical_.size(); i++) {
        output.writeMessage(5, historical_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, edgeFlags_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, downTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, eventTime_);
      }
      for (int i = 0; i < historical_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, historical_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, edgeFlags_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.TouchEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.TouchEvent)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEventOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.TouchEvent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 action = 1;</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>required int32 action = 1;</code>
       */
      public int getAction() {
        return instance.getAction();
      }
      /**
       * <code>required int32 action = 1;</code>
       */
      public Builder setAction(int value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>required int32 action = 1;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> getItemsList() {
        return java.util.Collections.unmodifiableList(
            instance.getItemsList());
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public int getItemsCount() {
        return instance.getItemsCount();
      }/**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords getItems(int index) {
        return instance.getItems(index);
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder setItems(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        copyOnWrite();
        instance.setItems(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder setItems(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        copyOnWrite();
        instance.setItems(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder addItems(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        copyOnWrite();
        instance.addItems(value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder addItems(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords value) {
        copyOnWrite();
        instance.addItems(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder addItems(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        copyOnWrite();
        instance.addItems(builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder addItems(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        copyOnWrite();
        instance.addItems(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords> values) {
        copyOnWrite();
        instance.addAllItems(values);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder clearItems() {
        copyOnWrite();
        instance.clearItems();
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.PointerCoords items = 2;</code>
       */
      public Builder removeItems(int index) {
        copyOnWrite();
        instance.removeItems(index);
        return this;
      }

      /**
       * <code>optional int64 downTime = 3;</code>
       */
      public boolean hasDownTime() {
        return instance.hasDownTime();
      }
      /**
       * <code>optional int64 downTime = 3;</code>
       */
      public long getDownTime() {
        return instance.getDownTime();
      }
      /**
       * <code>optional int64 downTime = 3;</code>
       */
      public Builder setDownTime(long value) {
        copyOnWrite();
        instance.setDownTime(value);
        return this;
      }
      /**
       * <code>optional int64 downTime = 3;</code>
       */
      public Builder clearDownTime() {
        copyOnWrite();
        instance.clearDownTime();
        return this;
      }

      /**
       * <code>optional int64 eventTime = 4;</code>
       */
      public boolean hasEventTime() {
        return instance.hasEventTime();
      }
      /**
       * <code>optional int64 eventTime = 4;</code>
       */
      public long getEventTime() {
        return instance.getEventTime();
      }
      /**
       * <code>optional int64 eventTime = 4;</code>
       */
      public Builder setEventTime(long value) {
        copyOnWrite();
        instance.setEventTime(value);
        return this;
      }
      /**
       * <code>optional int64 eventTime = 4;</code>
       */
      public Builder clearEventTime() {
        copyOnWrite();
        instance.clearEventTime();
        return this;
      }

      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent> getHistoricalList() {
        return java.util.Collections.unmodifiableList(
            instance.getHistoricalList());
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public int getHistoricalCount() {
        return instance.getHistoricalCount();
      }/**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent getHistorical(int index) {
        return instance.getHistorical(index);
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder setHistorical(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
        copyOnWrite();
        instance.setHistorical(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder setHistorical(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setHistorical(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder addHistorical(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
        copyOnWrite();
        instance.addHistorical(value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder addHistorical(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent value) {
        copyOnWrite();
        instance.addHistorical(index, value);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder addHistorical(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addHistorical(builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder addHistorical(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addHistorical(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder addAllHistorical(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent> values) {
        copyOnWrite();
        instance.addAllHistorical(values);
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder clearHistorical() {
        copyOnWrite();
        instance.clearHistorical();
        return this;
      }
      /**
       * <code>repeated .brahma.TouchEvent.HistoricalEvent historical = 5;</code>
       */
      public Builder removeHistorical(int index) {
        copyOnWrite();
        instance.removeHistorical(index);
        return this;
      }

      /**
       * <code>optional int32 edgeFlags = 6;</code>
       */
      public boolean hasEdgeFlags() {
        return instance.hasEdgeFlags();
      }
      /**
       * <code>optional int32 edgeFlags = 6;</code>
       */
      public int getEdgeFlags() {
        return instance.getEdgeFlags();
      }
      /**
       * <code>optional int32 edgeFlags = 6;</code>
       */
      public Builder setEdgeFlags(int value) {
        copyOnWrite();
        instance.setEdgeFlags(value);
        return this;
      }
      /**
       * <code>optional int32 edgeFlags = 6;</code>
       */
      public Builder clearEdgeFlags() {
        copyOnWrite();
        instance.clearEdgeFlags();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.TouchEvent)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getItemsCount(); i++) {
            if (!getItems(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getHistoricalCount(); i++) {
            if (!getHistorical(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          items_.makeImmutable();
          historical_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent) arg1;
          action_ = visitor.visitInt(
              hasAction(), action_,
              other.hasAction(), other.action_);
          items_= visitor.visitList(items_, other.items_);
          downTime_ = visitor.visitLong(
              hasDownTime(), downTime_,
              other.hasDownTime(), other.downTime_);
          eventTime_ = visitor.visitLong(
              hasEventTime(), eventTime_,
              other.hasEventTime(), other.eventTime_);
          historical_= visitor.visitList(historical_, other.historical_);
          edgeFlags_ = visitor.visitInt(
              hasEdgeFlags(), edgeFlags_,
              other.hasEdgeFlags(), other.edgeFlags_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  action_ = input.readInt32();
                  break;
                }
                case 18: {
                  if (!items_.isModifiable()) {
                    items_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(items_);
                  }
                  items_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.PointerCoords.parser(), extensionRegistry));
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  downTime_ = input.readInt64();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  eventTime_ = input.readInt64();
                  break;
                }
                case 42: {
                  if (!historical_.isModifiable()) {
                    historical_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(historical_);
                  }
                  historical_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.HistoricalEvent.parser(), extensionRegistry));
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000008;
                  edgeFlags_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.TouchEvent)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TouchEvent();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.TouchEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TouchEvent> PARSER;

    public static com.google.protobuf.Parser<TouchEvent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ScreenInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.ScreenInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 1;</code>
     */
    int getX();

    /**
     * <code>required int32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 y = 2;</code>
     */
    int getY();
  }
  /**
   * <pre>
   * S-&gt;C
   * </pre>
   *
   * Protobuf type {@code brahma.ScreenInfo}
   */
  public  static final class ScreenInfo extends
      com.google.protobuf.GeneratedMessageLite<
          ScreenInfo, ScreenInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.ScreenInfo)
      ScreenInfoOrBuilder {
    private ScreenInfo() {
    }
    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    private void setX(int value) {
      bitField0_ |= 0x00000001;
      x_ = value;
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    private void clearX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      x_ = 0;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>required int32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    private void setY(int value) {
      bitField0_ |= 0x00000002;
      y_ = value;
    }
    /**
     * <code>required int32 y = 2;</code>
     */
    private void clearY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      y_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C
     * </pre>
     *
     * Protobuf type {@code brahma.ScreenInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.ScreenInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.ScreenInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return instance.hasX();
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return instance.getX();
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder setX(int value) {
        copyOnWrite();
        instance.setX(value);
        return this;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder clearX() {
        copyOnWrite();
        instance.clearX();
        return this;
      }

      /**
       * <code>required int32 y = 2;</code>
       */
      public boolean hasY() {
        return instance.hasY();
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public int getY() {
        return instance.getY();
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder setY(int value) {
        copyOnWrite();
        instance.setY(value);
        return this;
      }
      /**
       * <code>required int32 y = 2;</code>
       */
      public Builder clearY() {
        copyOnWrite();
        instance.clearY();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.ScreenInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasX()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasY()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo) arg1;
          x_ = visitor.visitInt(
              hasX(), x_,
              other.hasX(), other.x_);
          y_ = visitor.visitInt(
              hasY(), y_,
              other.hasY(), other.y_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.ScreenInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ScreenInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ScreenInfo> PARSER;

    public static com.google.protobuf.Parser<ScreenInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SensorEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.SensorEvent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType getType();

    /**
     * <code>required int32 accuracy = 2;</code>
     */
    boolean hasAccuracy();
    /**
     * <code>required int32 accuracy = 2;</code>
     */
    int getAccuracy();

    /**
     * <code>required int64 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 3;</code>
     */
    long getTimestamp();

    /**
     * <code>repeated float values = 4;</code>
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <code>repeated float values = 4;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 4;</code>
     */
    float getValues(int index);
  }
  /**
   * <pre>
   * C-&gt;S: Sensor update event
   * </pre>
   *
   * Protobuf type {@code brahma.SensorEvent}
   */
  public  static final class SensorEvent extends
      com.google.protobuf.GeneratedMessageLite<
          SensorEvent, SensorEvent.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.SensorEvent)
      SensorEventOrBuilder {
    private SensorEvent() {
      type_ = 1;
      values_ = emptyFloatList();
    }
    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType.ACCELEROMETER : result;
    }
    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.SensorType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int ACCURACY_FIELD_NUMBER = 2;
    private int accuracy_;
    /**
     * <code>required int32 accuracy = 2;</code>
     */
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 accuracy = 2;</code>
     */
    public int getAccuracy() {
      return accuracy_;
    }
    /**
     * <code>required int32 accuracy = 2;</code>
     */
    private void setAccuracy(int value) {
      bitField0_ |= 0x00000002;
      accuracy_ = value;
    }
    /**
     * <code>required int32 accuracy = 2;</code>
     */
    private void clearAccuracy() {
      bitField0_ = (bitField0_ & ~0x00000002);
      accuracy_ = 0;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 timestamp = 3;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>required int64 timestamp = 3;</code>
     */
    private void setTimestamp(long value) {
      bitField0_ |= 0x00000004;
      timestamp_ = value;
    }
    /**
     * <code>required int64 timestamp = 3;</code>
     */
    private void clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timestamp_ = 0L;
    }

    public static final int VALUES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <code>repeated float values = 4;</code>
     */
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private void ensureValuesIsMutable() {
      if (!values_.isModifiable()) {
        values_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(values_);
       }
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    private void setValues(
        int index, float value) {
      ensureValuesIsMutable();
      values_.setFloat(index, value);
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    private void addValues(float value) {
      ensureValuesIsMutable();
      values_.addFloat(value);
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    private void addAllValues(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, values_);
    }
    /**
     * <code>repeated float values = 4;</code>
     */
    private void clearValues() {
      values_ = emptyFloatList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, accuracy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestamp_);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloat(4, values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, accuracy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestamp_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Sensor update event
     * </pre>
     *
     * Protobuf type {@code brahma.SensorEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.SensorEvent)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEventOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.SensorEvent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.SensorType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.SensorType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.SensorType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.SensorType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>required int32 accuracy = 2;</code>
       */
      public boolean hasAccuracy() {
        return instance.hasAccuracy();
      }
      /**
       * <code>required int32 accuracy = 2;</code>
       */
      public int getAccuracy() {
        return instance.getAccuracy();
      }
      /**
       * <code>required int32 accuracy = 2;</code>
       */
      public Builder setAccuracy(int value) {
        copyOnWrite();
        instance.setAccuracy(value);
        return this;
      }
      /**
       * <code>required int32 accuracy = 2;</code>
       */
      public Builder clearAccuracy() {
        copyOnWrite();
        instance.clearAccuracy();
        return this;
      }

      /**
       * <code>required int64 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <code>required int64 timestamp = 3;</code>
       */
      public long getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <code>required int64 timestamp = 3;</code>
       */
      public Builder setTimestamp(long value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <code>required int64 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <code>repeated float values = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getValuesList());
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public int getValuesCount() {
        return instance.getValuesCount();
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public float getValues(int index) {
        return instance.getValues(index);
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public Builder setValues(
          int index, float value) {
        copyOnWrite();
        instance.setValues(index, value);
        return this;
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public Builder addValues(float value) {
        copyOnWrite();
        instance.addValues(value);
        return this;
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        copyOnWrite();
        instance.addAllValues(values);
        return this;
      }
      /**
       * <code>repeated float values = 4;</code>
       */
      public Builder clearValues() {
        copyOnWrite();
        instance.clearValues();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.SensorEvent)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAccuracy()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTimestamp()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          values_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          accuracy_ = visitor.visitInt(
              hasAccuracy(), accuracy_,
              other.hasAccuracy(), other.accuracy_);
          timestamp_ = visitor.visitLong(
              hasTimestamp(), timestamp_,
              other.hasTimestamp(), other.timestamp_);
          values_= visitor.visitFloatList(values_, other.values_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  accuracy_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  timestamp_ = input.readInt64();
                  break;
                }
                case 37: {
                  if (!values_.isModifiable()) {
                    values_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(values_);
                  }
                  values_.addFloat(input.readFloat());
                  break;
                }
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!values_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    final int currentSize = values_.size();
                    values_ = values_.mutableCopyWithCapacity(
                        currentSize + (length/4));
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    values_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.SensorEvent)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SensorEvent();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.SensorEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SensorEvent> PARSER;

    public static com.google.protobuf.Parser<SensorEvent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationProviderInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationProviderInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string provider = 1;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    boolean hasRequiresNetwork();
    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    boolean getRequiresNetwork();

    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    boolean hasRequiresSatellite();
    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    boolean getRequiresSatellite();

    /**
     * <code>required bool requiresCell = 4;</code>
     */
    boolean hasRequiresCell();
    /**
     * <code>required bool requiresCell = 4;</code>
     */
    boolean getRequiresCell();

    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    boolean hasHasMonetaryCost();
    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    boolean getHasMonetaryCost();

    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    boolean hasSupportsAltitude();
    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    boolean getSupportsAltitude();

    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    boolean hasSupportsSpeed();
    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    boolean getSupportsSpeed();

    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    boolean hasSupportsBearing();
    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    boolean getSupportsBearing();

    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    boolean hasPowerRequirement();
    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    int getPowerRequirement();

    /**
     * <code>required int32 accuracy = 10;</code>
     */
    boolean hasAccuracy();
    /**
     * <code>required int32 accuracy = 10;</code>
     */
    int getAccuracy();
  }
  /**
   * <pre>
   * C-&gt;S: Location provider information
   * </pre>
   *
   * Protobuf type {@code brahma.LocationProviderInfo}
   */
  public  static final class LocationProviderInfo extends
      com.google.protobuf.GeneratedMessageLite<
          LocationProviderInfo, LocationProviderInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationProviderInfo)
      LocationProviderInfoOrBuilder {
    private LocationProviderInfo() {
      provider_ = "";
    }
    private int bitField0_;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.String provider_;
    /**
     * <code>required string provider = 1;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000001);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value.toStringUtf8();
    }

    public static final int REQUIRESNETWORK_FIELD_NUMBER = 2;
    private boolean requiresNetwork_;
    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    public boolean hasRequiresNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    public boolean getRequiresNetwork() {
      return requiresNetwork_;
    }
    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    private void setRequiresNetwork(boolean value) {
      bitField0_ |= 0x00000002;
      requiresNetwork_ = value;
    }
    /**
     * <code>required bool requiresNetwork = 2;</code>
     */
    private void clearRequiresNetwork() {
      bitField0_ = (bitField0_ & ~0x00000002);
      requiresNetwork_ = false;
    }

    public static final int REQUIRESSATELLITE_FIELD_NUMBER = 3;
    private boolean requiresSatellite_;
    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    public boolean hasRequiresSatellite() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    public boolean getRequiresSatellite() {
      return requiresSatellite_;
    }
    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    private void setRequiresSatellite(boolean value) {
      bitField0_ |= 0x00000004;
      requiresSatellite_ = value;
    }
    /**
     * <code>required bool requiresSatellite = 3;</code>
     */
    private void clearRequiresSatellite() {
      bitField0_ = (bitField0_ & ~0x00000004);
      requiresSatellite_ = false;
    }

    public static final int REQUIRESCELL_FIELD_NUMBER = 4;
    private boolean requiresCell_;
    /**
     * <code>required bool requiresCell = 4;</code>
     */
    public boolean hasRequiresCell() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool requiresCell = 4;</code>
     */
    public boolean getRequiresCell() {
      return requiresCell_;
    }
    /**
     * <code>required bool requiresCell = 4;</code>
     */
    private void setRequiresCell(boolean value) {
      bitField0_ |= 0x00000008;
      requiresCell_ = value;
    }
    /**
     * <code>required bool requiresCell = 4;</code>
     */
    private void clearRequiresCell() {
      bitField0_ = (bitField0_ & ~0x00000008);
      requiresCell_ = false;
    }

    public static final int HASMONETARYCOST_FIELD_NUMBER = 5;
    private boolean hasMonetaryCost_;
    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    public boolean hasHasMonetaryCost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    public boolean getHasMonetaryCost() {
      return hasMonetaryCost_;
    }
    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    private void setHasMonetaryCost(boolean value) {
      bitField0_ |= 0x00000010;
      hasMonetaryCost_ = value;
    }
    /**
     * <code>required bool hasMonetaryCost = 5;</code>
     */
    private void clearHasMonetaryCost() {
      bitField0_ = (bitField0_ & ~0x00000010);
      hasMonetaryCost_ = false;
    }

    public static final int SUPPORTSALTITUDE_FIELD_NUMBER = 6;
    private boolean supportsAltitude_;
    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    public boolean hasSupportsAltitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    public boolean getSupportsAltitude() {
      return supportsAltitude_;
    }
    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    private void setSupportsAltitude(boolean value) {
      bitField0_ |= 0x00000020;
      supportsAltitude_ = value;
    }
    /**
     * <code>required bool supportsAltitude = 6;</code>
     */
    private void clearSupportsAltitude() {
      bitField0_ = (bitField0_ & ~0x00000020);
      supportsAltitude_ = false;
    }

    public static final int SUPPORTSSPEED_FIELD_NUMBER = 7;
    private boolean supportsSpeed_;
    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    public boolean hasSupportsSpeed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    public boolean getSupportsSpeed() {
      return supportsSpeed_;
    }
    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    private void setSupportsSpeed(boolean value) {
      bitField0_ |= 0x00000040;
      supportsSpeed_ = value;
    }
    /**
     * <code>required bool supportsSpeed = 7;</code>
     */
    private void clearSupportsSpeed() {
      bitField0_ = (bitField0_ & ~0x00000040);
      supportsSpeed_ = false;
    }

    public static final int SUPPORTSBEARING_FIELD_NUMBER = 8;
    private boolean supportsBearing_;
    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    public boolean hasSupportsBearing() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    public boolean getSupportsBearing() {
      return supportsBearing_;
    }
    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    private void setSupportsBearing(boolean value) {
      bitField0_ |= 0x00000080;
      supportsBearing_ = value;
    }
    /**
     * <code>required bool supportsBearing = 8;</code>
     */
    private void clearSupportsBearing() {
      bitField0_ = (bitField0_ & ~0x00000080);
      supportsBearing_ = false;
    }

    public static final int POWERREQUIREMENT_FIELD_NUMBER = 9;
    private int powerRequirement_;
    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    public boolean hasPowerRequirement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    public int getPowerRequirement() {
      return powerRequirement_;
    }
    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    private void setPowerRequirement(int value) {
      bitField0_ |= 0x00000100;
      powerRequirement_ = value;
    }
    /**
     * <code>required int32 powerRequirement = 9;</code>
     */
    private void clearPowerRequirement() {
      bitField0_ = (bitField0_ & ~0x00000100);
      powerRequirement_ = 0;
    }

    public static final int ACCURACY_FIELD_NUMBER = 10;
    private int accuracy_;
    /**
     * <code>required int32 accuracy = 10;</code>
     */
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 accuracy = 10;</code>
     */
    public int getAccuracy() {
      return accuracy_;
    }
    /**
     * <code>required int32 accuracy = 10;</code>
     */
    private void setAccuracy(int value) {
      bitField0_ |= 0x00000200;
      accuracy_ = value;
    }
    /**
     * <code>required int32 accuracy = 10;</code>
     */
    private void clearAccuracy() {
      bitField0_ = (bitField0_ & ~0x00000200);
      accuracy_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, requiresNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, requiresSatellite_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, requiresCell_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hasMonetaryCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, supportsAltitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, supportsSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, supportsBearing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, powerRequirement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, accuracy_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, requiresNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, requiresSatellite_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, requiresCell_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hasMonetaryCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, supportsAltitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, supportsSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, supportsBearing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, powerRequirement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, accuracy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Location provider information
     * </pre>
     *
     * Protobuf type {@code brahma.LocationProviderInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationProviderInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationProviderInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string provider = 1;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <code>required bool requiresNetwork = 2;</code>
       */
      public boolean hasRequiresNetwork() {
        return instance.hasRequiresNetwork();
      }
      /**
       * <code>required bool requiresNetwork = 2;</code>
       */
      public boolean getRequiresNetwork() {
        return instance.getRequiresNetwork();
      }
      /**
       * <code>required bool requiresNetwork = 2;</code>
       */
      public Builder setRequiresNetwork(boolean value) {
        copyOnWrite();
        instance.setRequiresNetwork(value);
        return this;
      }
      /**
       * <code>required bool requiresNetwork = 2;</code>
       */
      public Builder clearRequiresNetwork() {
        copyOnWrite();
        instance.clearRequiresNetwork();
        return this;
      }

      /**
       * <code>required bool requiresSatellite = 3;</code>
       */
      public boolean hasRequiresSatellite() {
        return instance.hasRequiresSatellite();
      }
      /**
       * <code>required bool requiresSatellite = 3;</code>
       */
      public boolean getRequiresSatellite() {
        return instance.getRequiresSatellite();
      }
      /**
       * <code>required bool requiresSatellite = 3;</code>
       */
      public Builder setRequiresSatellite(boolean value) {
        copyOnWrite();
        instance.setRequiresSatellite(value);
        return this;
      }
      /**
       * <code>required bool requiresSatellite = 3;</code>
       */
      public Builder clearRequiresSatellite() {
        copyOnWrite();
        instance.clearRequiresSatellite();
        return this;
      }

      /**
       * <code>required bool requiresCell = 4;</code>
       */
      public boolean hasRequiresCell() {
        return instance.hasRequiresCell();
      }
      /**
       * <code>required bool requiresCell = 4;</code>
       */
      public boolean getRequiresCell() {
        return instance.getRequiresCell();
      }
      /**
       * <code>required bool requiresCell = 4;</code>
       */
      public Builder setRequiresCell(boolean value) {
        copyOnWrite();
        instance.setRequiresCell(value);
        return this;
      }
      /**
       * <code>required bool requiresCell = 4;</code>
       */
      public Builder clearRequiresCell() {
        copyOnWrite();
        instance.clearRequiresCell();
        return this;
      }

      /**
       * <code>required bool hasMonetaryCost = 5;</code>
       */
      public boolean hasHasMonetaryCost() {
        return instance.hasHasMonetaryCost();
      }
      /**
       * <code>required bool hasMonetaryCost = 5;</code>
       */
      public boolean getHasMonetaryCost() {
        return instance.getHasMonetaryCost();
      }
      /**
       * <code>required bool hasMonetaryCost = 5;</code>
       */
      public Builder setHasMonetaryCost(boolean value) {
        copyOnWrite();
        instance.setHasMonetaryCost(value);
        return this;
      }
      /**
       * <code>required bool hasMonetaryCost = 5;</code>
       */
      public Builder clearHasMonetaryCost() {
        copyOnWrite();
        instance.clearHasMonetaryCost();
        return this;
      }

      /**
       * <code>required bool supportsAltitude = 6;</code>
       */
      public boolean hasSupportsAltitude() {
        return instance.hasSupportsAltitude();
      }
      /**
       * <code>required bool supportsAltitude = 6;</code>
       */
      public boolean getSupportsAltitude() {
        return instance.getSupportsAltitude();
      }
      /**
       * <code>required bool supportsAltitude = 6;</code>
       */
      public Builder setSupportsAltitude(boolean value) {
        copyOnWrite();
        instance.setSupportsAltitude(value);
        return this;
      }
      /**
       * <code>required bool supportsAltitude = 6;</code>
       */
      public Builder clearSupportsAltitude() {
        copyOnWrite();
        instance.clearSupportsAltitude();
        return this;
      }

      /**
       * <code>required bool supportsSpeed = 7;</code>
       */
      public boolean hasSupportsSpeed() {
        return instance.hasSupportsSpeed();
      }
      /**
       * <code>required bool supportsSpeed = 7;</code>
       */
      public boolean getSupportsSpeed() {
        return instance.getSupportsSpeed();
      }
      /**
       * <code>required bool supportsSpeed = 7;</code>
       */
      public Builder setSupportsSpeed(boolean value) {
        copyOnWrite();
        instance.setSupportsSpeed(value);
        return this;
      }
      /**
       * <code>required bool supportsSpeed = 7;</code>
       */
      public Builder clearSupportsSpeed() {
        copyOnWrite();
        instance.clearSupportsSpeed();
        return this;
      }

      /**
       * <code>required bool supportsBearing = 8;</code>
       */
      public boolean hasSupportsBearing() {
        return instance.hasSupportsBearing();
      }
      /**
       * <code>required bool supportsBearing = 8;</code>
       */
      public boolean getSupportsBearing() {
        return instance.getSupportsBearing();
      }
      /**
       * <code>required bool supportsBearing = 8;</code>
       */
      public Builder setSupportsBearing(boolean value) {
        copyOnWrite();
        instance.setSupportsBearing(value);
        return this;
      }
      /**
       * <code>required bool supportsBearing = 8;</code>
       */
      public Builder clearSupportsBearing() {
        copyOnWrite();
        instance.clearSupportsBearing();
        return this;
      }

      /**
       * <code>required int32 powerRequirement = 9;</code>
       */
      public boolean hasPowerRequirement() {
        return instance.hasPowerRequirement();
      }
      /**
       * <code>required int32 powerRequirement = 9;</code>
       */
      public int getPowerRequirement() {
        return instance.getPowerRequirement();
      }
      /**
       * <code>required int32 powerRequirement = 9;</code>
       */
      public Builder setPowerRequirement(int value) {
        copyOnWrite();
        instance.setPowerRequirement(value);
        return this;
      }
      /**
       * <code>required int32 powerRequirement = 9;</code>
       */
      public Builder clearPowerRequirement() {
        copyOnWrite();
        instance.clearPowerRequirement();
        return this;
      }

      /**
       * <code>required int32 accuracy = 10;</code>
       */
      public boolean hasAccuracy() {
        return instance.hasAccuracy();
      }
      /**
       * <code>required int32 accuracy = 10;</code>
       */
      public int getAccuracy() {
        return instance.getAccuracy();
      }
      /**
       * <code>required int32 accuracy = 10;</code>
       */
      public Builder setAccuracy(int value) {
        copyOnWrite();
        instance.setAccuracy(value);
        return this;
      }
      /**
       * <code>required int32 accuracy = 10;</code>
       */
      public Builder clearAccuracy() {
        copyOnWrite();
        instance.clearAccuracy();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationProviderInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProvider()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRequiresNetwork()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRequiresSatellite()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasRequiresCell()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasHasMonetaryCost()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSupportsAltitude()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSupportsSpeed()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSupportsBearing()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPowerRequirement()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAccuracy()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo) arg1;
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          requiresNetwork_ = visitor.visitBoolean(
              hasRequiresNetwork(), requiresNetwork_,
              other.hasRequiresNetwork(), other.requiresNetwork_);
          requiresSatellite_ = visitor.visitBoolean(
              hasRequiresSatellite(), requiresSatellite_,
              other.hasRequiresSatellite(), other.requiresSatellite_);
          requiresCell_ = visitor.visitBoolean(
              hasRequiresCell(), requiresCell_,
              other.hasRequiresCell(), other.requiresCell_);
          hasMonetaryCost_ = visitor.visitBoolean(
              hasHasMonetaryCost(), hasMonetaryCost_,
              other.hasHasMonetaryCost(), other.hasMonetaryCost_);
          supportsAltitude_ = visitor.visitBoolean(
              hasSupportsAltitude(), supportsAltitude_,
              other.hasSupportsAltitude(), other.supportsAltitude_);
          supportsSpeed_ = visitor.visitBoolean(
              hasSupportsSpeed(), supportsSpeed_,
              other.hasSupportsSpeed(), other.supportsSpeed_);
          supportsBearing_ = visitor.visitBoolean(
              hasSupportsBearing(), supportsBearing_,
              other.hasSupportsBearing(), other.supportsBearing_);
          powerRequirement_ = visitor.visitInt(
              hasPowerRequirement(), powerRequirement_,
              other.hasPowerRequirement(), other.powerRequirement_);
          accuracy_ = visitor.visitInt(
              hasAccuracy(), accuracy_,
              other.hasAccuracy(), other.accuracy_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  provider_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  requiresNetwork_ = input.readBool();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  requiresSatellite_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  requiresCell_ = input.readBool();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  hasMonetaryCost_ = input.readBool();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  supportsAltitude_ = input.readBool();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  supportsSpeed_ = input.readBool();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  supportsBearing_ = input.readBool();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  powerRequirement_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  accuracy_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationProviderInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationProviderInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationProviderInfo> PARSER;

    public static com.google.protobuf.Parser<LocationProviderInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationProviderStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationProviderStatus)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string provider = 1;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>required int32 status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 2;</code>
     */
    int getStatus();

    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple>
        getExtrasList();
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple getExtras(int index);
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    int getExtrasCount();
  }
  /**
   * <pre>
   * C-&gt;S: Location provider status update
   * </pre>
   *
   * Protobuf type {@code brahma.LocationProviderStatus}
   */
  public  static final class LocationProviderStatus extends
      com.google.protobuf.GeneratedMessageLite<
          LocationProviderStatus, LocationProviderStatus.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationProviderStatus)
      LocationProviderStatusOrBuilder {
    private LocationProviderStatus() {
      provider_ = "";
      extras_ = emptyProtobufList();
    }
    public interface TupleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:brahma.LocationProviderStatus.Tuple)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>required string value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * <pre>
     *For approximating a Java Map structure (Map&lt;String,String&gt;)
     * </pre>
     *
     * Protobuf type {@code brahma.LocationProviderStatus.Tuple}
     */
    public  static final class Tuple extends
        com.google.protobuf.GeneratedMessageLite<
            Tuple, Tuple.Builder> implements
        // @@protoc_insertion_point(message_implements:brahma.LocationProviderStatus.Tuple)
        TupleOrBuilder {
      private Tuple() {
        key_ = "";
        value_ = "";
      }
      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.String key_;
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        return key_;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(key_);
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
      }
      /**
       * <code>required string key = 1;</code>
       */
      private void setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value.toStringUtf8();
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.String value_;
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        return value_;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(value_);
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
      }
      /**
       * <code>required string value = 2;</code>
       */
      private void setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value.toStringUtf8();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getKey());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(2, getValue());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getKey());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getValue());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       *For approximating a Java Map structure (Map&lt;String,String&gt;)
       * </pre>
       *
       * Protobuf type {@code brahma.LocationProviderStatus.Tuple}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple, Builder> implements
          // @@protoc_insertion_point(builder_implements:brahma.LocationProviderStatus.Tuple)
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.TupleOrBuilder {
        // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required string key = 1;</code>
         */
        public boolean hasKey() {
          return instance.hasKey();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public java.lang.String getKey() {
          return instance.getKey();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          return instance.getKeyBytes();
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKey(
            java.lang.String value) {
          copyOnWrite();
          instance.setKey(value);
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder clearKey() {
          copyOnWrite();
          instance.clearKey();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setKeyBytes(value);
          return this;
        }

        /**
         * <code>required string value = 2;</code>
         */
        public boolean hasValue() {
          return instance.hasValue();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public java.lang.String getValue() {
          return instance.getValue();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          return instance.getValueBytes();
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          copyOnWrite();
          instance.setValue(value);
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder clearValue() {
          copyOnWrite();
          instance.clearValue();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setValueBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:brahma.LocationProviderStatus.Tuple)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasKey()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasValue()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple) arg1;
            key_ = visitor.visitString(
                hasKey(), key_,
                other.hasKey(), other.key_);
            value_ = visitor.visitString(
                hasValue(), value_,
                other.hasValue(), other.value_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    key_ = s;
                    break;
                  }
                  case 18: {
                    String s = input.readString();
                    bitField0_ |= 0x00000002;
                    value_ = s;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:brahma.LocationProviderStatus.Tuple)
      private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Tuple();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Tuple> PARSER;

      public static com.google.protobuf.Parser<Tuple> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.String provider_;
    /**
     * <code>required string provider = 1;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000001);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value.toStringUtf8();
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>required int32 status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }
    /**
     * <code>required int32 status = 2;</code>
     */
    private void setStatus(int value) {
      bitField0_ |= 0x00000002;
      status_ = value;
    }
    /**
     * <code>required int32 status = 2;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      status_ = 0;
    }

    public static final int EXTRAS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple> extras_;
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple> getExtrasList() {
      return extras_;
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.TupleOrBuilder>
        getExtrasOrBuilderList() {
      return extras_;
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    public int getExtrasCount() {
      return extras_.size();
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple getExtras(int index) {
      return extras_.get(index);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.TupleOrBuilder getExtrasOrBuilder(
        int index) {
      return extras_.get(index);
    }
    private void ensureExtrasIsMutable() {
      if (!extras_.isModifiable()) {
        extras_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(extras_);
       }
    }

    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void setExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.set(index, value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void setExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void addExtras(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.add(value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void addExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtrasIsMutable();
      extras_.add(index, value);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void addExtras(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.add(builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void addExtras(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
      ensureExtrasIsMutable();
      extras_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void addAllExtras(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple> values) {
      ensureExtrasIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extras_);
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void clearExtras() {
      extras_ = emptyProtobufList();
    }
    /**
     * <pre>
     *Encode all bundle extras as strings, and decode them later into specific data types
     * </pre>
     *
     * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
     */
    private void removeExtras(int index) {
      ensureExtrasIsMutable();
      extras_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        output.writeMessage(3, extras_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, extras_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Location provider status update
     * </pre>
     *
     * Protobuf type {@code brahma.LocationProviderStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationProviderStatus)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatusOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationProviderStatus.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string provider = 1;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <code>required int32 status = 2;</code>
       */
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>required int32 status = 2;</code>
       */
      public int getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>required int32 status = 2;</code>
       */
      public Builder setStatus(int value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>required int32 status = 2;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple> getExtrasList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtrasList());
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public int getExtrasCount() {
        return instance.getExtrasCount();
      }/**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple getExtras(int index) {
        return instance.getExtras(index);
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder setExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
        copyOnWrite();
        instance.setExtras(index, value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder setExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.setExtras(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder addExtras(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
        copyOnWrite();
        instance.addExtras(value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder addExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple value) {
        copyOnWrite();
        instance.addExtras(index, value);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder addExtras(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder addExtras(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        copyOnWrite();
        instance.addExtras(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder addAllExtras(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple> values) {
        copyOnWrite();
        instance.addAllExtras(values);
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder clearExtras() {
        copyOnWrite();
        instance.clearExtras();
        return this;
      }
      /**
       * <pre>
       *Encode all bundle extras as strings, and decode them later into specific data types
       * </pre>
       *
       * <code>repeated .brahma.LocationProviderStatus.Tuple extras = 3;</code>
       */
      public Builder removeExtras(int index) {
        copyOnWrite();
        instance.removeExtras(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationProviderStatus)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProvider()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getExtrasCount(); i++) {
            if (!getExtras(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          extras_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus) arg1;
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          status_ = visitor.visitInt(
              hasStatus(), status_,
              other.hasStatus(), other.status_);
          extras_= visitor.visitList(extras_, other.extras_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  provider_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  status_ = input.readInt32();
                  break;
                }
                case 26: {
                  if (!extras_.isModifiable()) {
                    extras_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(extras_);
                  }
                  extras_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Tuple.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationProviderStatus)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationProviderStatus();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationProviderStatus> PARSER;

    public static com.google.protobuf.Parser<LocationProviderStatus> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationProviderEnabledOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationProviderEnabled)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string provider = 1;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>required bool enabled = 2;</code>
     */
    boolean hasEnabled();
    /**
     * <code>required bool enabled = 2;</code>
     */
    boolean getEnabled();
  }
  /**
   * <pre>
   * C-&gt;S: Location provider enabled update
   * </pre>
   *
   * Protobuf type {@code brahma.LocationProviderEnabled}
   */
  public  static final class LocationProviderEnabled extends
      com.google.protobuf.GeneratedMessageLite<
          LocationProviderEnabled, LocationProviderEnabled.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationProviderEnabled)
      LocationProviderEnabledOrBuilder {
    private LocationProviderEnabled() {
      provider_ = "";
    }
    private int bitField0_;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.String provider_;
    /**
     * <code>required string provider = 1;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000001);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value.toStringUtf8();
    }

    public static final int ENABLED_FIELD_NUMBER = 2;
    private boolean enabled_;
    /**
     * <code>required bool enabled = 2;</code>
     */
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool enabled = 2;</code>
     */
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <code>required bool enabled = 2;</code>
     */
    private void setEnabled(boolean value) {
      bitField0_ |= 0x00000002;
      enabled_ = value;
    }
    /**
     * <code>required bool enabled = 2;</code>
     */
    private void clearEnabled() {
      bitField0_ = (bitField0_ & ~0x00000002);
      enabled_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, enabled_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProvider());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, enabled_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Location provider enabled update
     * </pre>
     *
     * Protobuf type {@code brahma.LocationProviderEnabled}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationProviderEnabled)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabledOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationProviderEnabled.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string provider = 1;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <code>required bool enabled = 2;</code>
       */
      public boolean hasEnabled() {
        return instance.hasEnabled();
      }
      /**
       * <code>required bool enabled = 2;</code>
       */
      public boolean getEnabled() {
        return instance.getEnabled();
      }
      /**
       * <code>required bool enabled = 2;</code>
       */
      public Builder setEnabled(boolean value) {
        copyOnWrite();
        instance.setEnabled(value);
        return this;
      }
      /**
       * <code>required bool enabled = 2;</code>
       */
      public Builder clearEnabled() {
        copyOnWrite();
        instance.clearEnabled();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationProviderEnabled)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProvider()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasEnabled()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled) arg1;
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          enabled_ = visitor.visitBoolean(
              hasEnabled(), enabled_,
              other.hasEnabled(), other.enabled_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  provider_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  enabled_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationProviderEnabled)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationProviderEnabled();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationProviderEnabled> PARSER;

    public static com.google.protobuf.Parser<LocationProviderEnabled> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required double latitude = 1;</code>
     */
    boolean hasLatitude();
    /**
     * <code>required double latitude = 1;</code>
     */
    double getLatitude();

    /**
     * <code>required double longitude = 2;</code>
     */
    boolean hasLongitude();
    /**
     * <code>required double longitude = 2;</code>
     */
    double getLongitude();

    /**
     * <code>required int64 time = 3;</code>
     */
    boolean hasTime();
    /**
     * <code>required int64 time = 3;</code>
     */
    long getTime();

    /**
     * <code>optional string provider = 4;</code>
     */
    boolean hasProvider();
    /**
     * <code>optional string provider = 4;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>optional string provider = 4;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>optional float accuracy = 5;</code>
     */
    boolean hasAccuracy();
    /**
     * <code>optional float accuracy = 5;</code>
     */
    float getAccuracy();

    /**
     * <code>optional double altitude = 6;</code>
     */
    boolean hasAltitude();
    /**
     * <code>optional double altitude = 6;</code>
     */
    double getAltitude();

    /**
     * <code>optional float bearing = 7;</code>
     */
    boolean hasBearing();
    /**
     * <code>optional float bearing = 7;</code>
     */
    float getBearing();

    /**
     * <code>optional float speed = 8;</code>
     */
    boolean hasSpeed();
    /**
     * <code>optional float speed = 8;</code>
     */
    float getSpeed();
  }
  /**
   * <pre>
   * C-&gt;S: Location update event
   * </pre>
   *
   * Protobuf type {@code brahma.LocationUpdate}
   */
  public  static final class LocationUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          LocationUpdate, LocationUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationUpdate)
      LocationUpdateOrBuilder {
    private LocationUpdate() {
      provider_ = "";
    }
    private int bitField0_;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private double latitude_;
    /**
     * <code>required double latitude = 1;</code>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double latitude = 1;</code>
     */
    public double getLatitude() {
      return latitude_;
    }
    /**
     * <code>required double latitude = 1;</code>
     */
    private void setLatitude(double value) {
      bitField0_ |= 0x00000001;
      latitude_ = value;
    }
    /**
     * <code>required double latitude = 1;</code>
     */
    private void clearLatitude() {
      bitField0_ = (bitField0_ & ~0x00000001);
      latitude_ = 0D;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    /**
     * <code>required double longitude = 2;</code>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double longitude = 2;</code>
     */
    public double getLongitude() {
      return longitude_;
    }
    /**
     * <code>required double longitude = 2;</code>
     */
    private void setLongitude(double value) {
      bitField0_ |= 0x00000002;
      longitude_ = value;
    }
    /**
     * <code>required double longitude = 2;</code>
     */
    private void clearLongitude() {
      bitField0_ = (bitField0_ & ~0x00000002);
      longitude_ = 0D;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    /**
     * <code>required int64 time = 3;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 time = 3;</code>
     */
    public long getTime() {
      return time_;
    }
    /**
     * <code>required int64 time = 3;</code>
     */
    private void setTime(long value) {
      bitField0_ |= 0x00000004;
      time_ = value;
    }
    /**
     * <code>required int64 time = 3;</code>
     */
    private void clearTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      time_ = 0L;
    }

    public static final int PROVIDER_FIELD_NUMBER = 4;
    private java.lang.String provider_;
    /**
     * <code>optional string provider = 4;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string provider = 4;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>optional string provider = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>optional string provider = 4;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      provider_ = value;
    }
    /**
     * <code>optional string provider = 4;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000008);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>optional string provider = 4;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      provider_ = value.toStringUtf8();
    }

    public static final int ACCURACY_FIELD_NUMBER = 5;
    private float accuracy_;
    /**
     * <code>optional float accuracy = 5;</code>
     */
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float accuracy = 5;</code>
     */
    public float getAccuracy() {
      return accuracy_;
    }
    /**
     * <code>optional float accuracy = 5;</code>
     */
    private void setAccuracy(float value) {
      bitField0_ |= 0x00000010;
      accuracy_ = value;
    }
    /**
     * <code>optional float accuracy = 5;</code>
     */
    private void clearAccuracy() {
      bitField0_ = (bitField0_ & ~0x00000010);
      accuracy_ = 0F;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 6;
    private double altitude_;
    /**
     * <code>optional double altitude = 6;</code>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double altitude = 6;</code>
     */
    public double getAltitude() {
      return altitude_;
    }
    /**
     * <code>optional double altitude = 6;</code>
     */
    private void setAltitude(double value) {
      bitField0_ |= 0x00000020;
      altitude_ = value;
    }
    /**
     * <code>optional double altitude = 6;</code>
     */
    private void clearAltitude() {
      bitField0_ = (bitField0_ & ~0x00000020);
      altitude_ = 0D;
    }

    public static final int BEARING_FIELD_NUMBER = 7;
    private float bearing_;
    /**
     * <code>optional float bearing = 7;</code>
     */
    public boolean hasBearing() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float bearing = 7;</code>
     */
    public float getBearing() {
      return bearing_;
    }
    /**
     * <code>optional float bearing = 7;</code>
     */
    private void setBearing(float value) {
      bitField0_ |= 0x00000040;
      bearing_ = value;
    }
    /**
     * <code>optional float bearing = 7;</code>
     */
    private void clearBearing() {
      bitField0_ = (bitField0_ & ~0x00000040);
      bearing_ = 0F;
    }

    public static final int SPEED_FIELD_NUMBER = 8;
    private float speed_;
    /**
     * <code>optional float speed = 8;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float speed = 8;</code>
     */
    public float getSpeed() {
      return speed_;
    }
    /**
     * <code>optional float speed = 8;</code>
     */
    private void setSpeed(float value) {
      bitField0_ |= 0x00000080;
      speed_ = value;
    }
    /**
     * <code>optional float speed = 8;</code>
     */
    private void clearSpeed() {
      bitField0_ = (bitField0_ & ~0x00000080);
      speed_ = 0F;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getProvider());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, accuracy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, bearing_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, speed_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getProvider());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, accuracy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, bearing_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, speed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Location update event
     * </pre>
     *
     * Protobuf type {@code brahma.LocationUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationUpdate)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdateOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required double latitude = 1;</code>
       */
      public boolean hasLatitude() {
        return instance.hasLatitude();
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public double getLatitude() {
        return instance.getLatitude();
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public Builder setLatitude(double value) {
        copyOnWrite();
        instance.setLatitude(value);
        return this;
      }
      /**
       * <code>required double latitude = 1;</code>
       */
      public Builder clearLatitude() {
        copyOnWrite();
        instance.clearLatitude();
        return this;
      }

      /**
       * <code>required double longitude = 2;</code>
       */
      public boolean hasLongitude() {
        return instance.hasLongitude();
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public double getLongitude() {
        return instance.getLongitude();
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public Builder setLongitude(double value) {
        copyOnWrite();
        instance.setLongitude(value);
        return this;
      }
      /**
       * <code>required double longitude = 2;</code>
       */
      public Builder clearLongitude() {
        copyOnWrite();
        instance.clearLongitude();
        return this;
      }

      /**
       * <code>required int64 time = 3;</code>
       */
      public boolean hasTime() {
        return instance.hasTime();
      }
      /**
       * <code>required int64 time = 3;</code>
       */
      public long getTime() {
        return instance.getTime();
      }
      /**
       * <code>required int64 time = 3;</code>
       */
      public Builder setTime(long value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <code>required int64 time = 3;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      /**
       * <code>optional string provider = 4;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>optional string provider = 4;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>optional string provider = 4;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>optional string provider = 4;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>optional string provider = 4;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>optional string provider = 4;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <code>optional float accuracy = 5;</code>
       */
      public boolean hasAccuracy() {
        return instance.hasAccuracy();
      }
      /**
       * <code>optional float accuracy = 5;</code>
       */
      public float getAccuracy() {
        return instance.getAccuracy();
      }
      /**
       * <code>optional float accuracy = 5;</code>
       */
      public Builder setAccuracy(float value) {
        copyOnWrite();
        instance.setAccuracy(value);
        return this;
      }
      /**
       * <code>optional float accuracy = 5;</code>
       */
      public Builder clearAccuracy() {
        copyOnWrite();
        instance.clearAccuracy();
        return this;
      }

      /**
       * <code>optional double altitude = 6;</code>
       */
      public boolean hasAltitude() {
        return instance.hasAltitude();
      }
      /**
       * <code>optional double altitude = 6;</code>
       */
      public double getAltitude() {
        return instance.getAltitude();
      }
      /**
       * <code>optional double altitude = 6;</code>
       */
      public Builder setAltitude(double value) {
        copyOnWrite();
        instance.setAltitude(value);
        return this;
      }
      /**
       * <code>optional double altitude = 6;</code>
       */
      public Builder clearAltitude() {
        copyOnWrite();
        instance.clearAltitude();
        return this;
      }

      /**
       * <code>optional float bearing = 7;</code>
       */
      public boolean hasBearing() {
        return instance.hasBearing();
      }
      /**
       * <code>optional float bearing = 7;</code>
       */
      public float getBearing() {
        return instance.getBearing();
      }
      /**
       * <code>optional float bearing = 7;</code>
       */
      public Builder setBearing(float value) {
        copyOnWrite();
        instance.setBearing(value);
        return this;
      }
      /**
       * <code>optional float bearing = 7;</code>
       */
      public Builder clearBearing() {
        copyOnWrite();
        instance.clearBearing();
        return this;
      }

      /**
       * <code>optional float speed = 8;</code>
       */
      public boolean hasSpeed() {
        return instance.hasSpeed();
      }
      /**
       * <code>optional float speed = 8;</code>
       */
      public float getSpeed() {
        return instance.getSpeed();
      }
      /**
       * <code>optional float speed = 8;</code>
       */
      public Builder setSpeed(float value) {
        copyOnWrite();
        instance.setSpeed(value);
        return this;
      }
      /**
       * <code>optional float speed = 8;</code>
       */
      public Builder clearSpeed() {
        copyOnWrite();
        instance.clearSpeed();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationUpdate)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasLatitude()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLongitude()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTime()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate) arg1;
          latitude_ = visitor.visitDouble(
              hasLatitude(), latitude_,
              other.hasLatitude(), other.latitude_);
          longitude_ = visitor.visitDouble(
              hasLongitude(), longitude_,
              other.hasLongitude(), other.longitude_);
          time_ = visitor.visitLong(
              hasTime(), time_,
              other.hasTime(), other.time_);
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          accuracy_ = visitor.visitFloat(
              hasAccuracy(), accuracy_,
              other.hasAccuracy(), other.accuracy_);
          altitude_ = visitor.visitDouble(
              hasAltitude(), altitude_,
              other.hasAltitude(), other.altitude_);
          bearing_ = visitor.visitFloat(
              hasBearing(), bearing_,
              other.hasBearing(), other.bearing_);
          speed_ = visitor.visitFloat(
              hasSpeed(), speed_,
              other.hasSpeed(), other.speed_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 9: {
                  bitField0_ |= 0x00000001;
                  latitude_ = input.readDouble();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  longitude_ = input.readDouble();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  time_ = input.readInt64();
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  provider_ = s;
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000010;
                  accuracy_ = input.readFloat();
                  break;
                }
                case 49: {
                  bitField0_ |= 0x00000020;
                  altitude_ = input.readDouble();
                  break;
                }
                case 61: {
                  bitField0_ |= 0x00000040;
                  bearing_ = input.readFloat();
                  break;
                }
                case 69: {
                  bitField0_ |= 0x00000080;
                  speed_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationUpdate)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationUpdate();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationUpdate> PARSER;

    public static com.google.protobuf.Parser<LocationUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType getType();

    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    boolean hasProviderInfo();
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo getProviderInfo();

    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    boolean hasProviderStatus();
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus getProviderStatus();

    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    boolean hasProviderEnabled();
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled getProviderEnabled();

    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    boolean hasUpdate();
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate getUpdate();
  }
  /**
   * <pre>
   * C-&gt;S: Wrapper for LocationProviderInfo, LocationProviderStatus,
   * LocationProviderEnabled, and LocationProviderUpdate messages
   * </pre>
   *
   * Protobuf type {@code brahma.LocationRequest}
   */
  public  static final class LocationRequest extends
      com.google.protobuf.GeneratedMessageLite<
          LocationRequest, LocationRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationRequest)
      LocationRequestOrBuilder {
    private LocationRequest() {
      type_ = 1;
    }
    /**
     * Protobuf enum {@code brahma.LocationRequest.LocationRequestType}
     */
    public enum LocationRequestType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>PROVIDERINFO = 1;</code>
       */
      PROVIDERINFO(1),
      /**
       * <code>PROVIDERSTATUS = 2;</code>
       */
      PROVIDERSTATUS(2),
      /**
       * <code>PROVIDERENABLED = 3;</code>
       */
      PROVIDERENABLED(3),
      /**
       * <code>LOCATIONUPDATE = 4;</code>
       */
      LOCATIONUPDATE(4),
      ;

      /**
       * <code>PROVIDERINFO = 1;</code>
       */
      public static final int PROVIDERINFO_VALUE = 1;
      /**
       * <code>PROVIDERSTATUS = 2;</code>
       */
      public static final int PROVIDERSTATUS_VALUE = 2;
      /**
       * <code>PROVIDERENABLED = 3;</code>
       */
      public static final int PROVIDERENABLED_VALUE = 3;
      /**
       * <code>LOCATIONUPDATE = 4;</code>
       */
      public static final int LOCATIONUPDATE_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LocationRequestType valueOf(int value) {
        return forNumber(value);
      }

      public static LocationRequestType forNumber(int value) {
        switch (value) {
          case 1: return PROVIDERINFO;
          case 2: return PROVIDERSTATUS;
          case 3: return PROVIDERENABLED;
          case 4: return LOCATIONUPDATE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LocationRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LocationRequestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationRequestType>() {
              public LocationRequestType findValueByNumber(int number) {
                return LocationRequestType.forNumber(number);
              }
            };

      private final int value;

      private LocationRequestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.LocationRequest.LocationRequestType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType.PROVIDERINFO : result;
    }
    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int PROVIDERINFO_FIELD_NUMBER = 2;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo providerInfo_;
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    public boolean hasProviderInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo getProviderInfo() {
      return providerInfo_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.getDefaultInstance() : providerInfo_;
    }
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    private void setProviderInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      providerInfo_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    private void setProviderInfo(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.Builder builderForValue) {
      providerInfo_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    private void mergeProviderInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo value) {
      if (providerInfo_ != null &&
          providerInfo_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.getDefaultInstance()) {
        providerInfo_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.newBuilder(providerInfo_).mergeFrom(value).buildPartial();
      } else {
        providerInfo_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
     */
    private void clearProviderInfo() {  providerInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int PROVIDERSTATUS_FIELD_NUMBER = 3;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus providerStatus_;
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    public boolean hasProviderStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus getProviderStatus() {
      return providerStatus_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.getDefaultInstance() : providerStatus_;
    }
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    private void setProviderStatus(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      providerStatus_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    private void setProviderStatus(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Builder builderForValue) {
      providerStatus_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    private void mergeProviderStatus(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus value) {
      if (providerStatus_ != null &&
          providerStatus_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.getDefaultInstance()) {
        providerStatus_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.newBuilder(providerStatus_).mergeFrom(value).buildPartial();
      } else {
        providerStatus_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
     */
    private void clearProviderStatus() {  providerStatus_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int PROVIDERENABLED_FIELD_NUMBER = 4;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled providerEnabled_;
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    public boolean hasProviderEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled getProviderEnabled() {
      return providerEnabled_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.getDefaultInstance() : providerEnabled_;
    }
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    private void setProviderEnabled(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled value) {
      if (value == null) {
        throw new NullPointerException();
      }
      providerEnabled_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    private void setProviderEnabled(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.Builder builderForValue) {
      providerEnabled_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    private void mergeProviderEnabled(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled value) {
      if (providerEnabled_ != null &&
          providerEnabled_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.getDefaultInstance()) {
        providerEnabled_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.newBuilder(providerEnabled_).mergeFrom(value).buildPartial();
      } else {
        providerEnabled_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
     */
    private void clearProviderEnabled() {  providerEnabled_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int UPDATE_FIELD_NUMBER = 5;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate update_;
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    public boolean hasUpdate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate getUpdate() {
      return update_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.getDefaultInstance() : update_;
    }
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    private void setUpdate(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      update_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    private void setUpdate(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.Builder builderForValue) {
      update_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    private void mergeUpdate(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate value) {
      if (update_ != null &&
          update_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.getDefaultInstance()) {
        update_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.newBuilder(update_).mergeFrom(value).buildPartial();
      } else {
        update_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .brahma.LocationUpdate update = 5;</code>
     */
    private void clearUpdate() {  update_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getProviderInfo());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getProviderStatus());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getProviderEnabled());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getUpdate());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProviderInfo());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProviderStatus());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProviderEnabled());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUpdate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S: Wrapper for LocationProviderInfo, LocationProviderStatus,
     * LocationProviderEnabled, and LocationProviderUpdate messages
     * </pre>
     *
     * Protobuf type {@code brahma.LocationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationRequest)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequestOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.LocationRequest.LocationRequestType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public boolean hasProviderInfo() {
        return instance.hasProviderInfo();
      }
      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo getProviderInfo() {
        return instance.getProviderInfo();
      }
      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public Builder setProviderInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo value) {
        copyOnWrite();
        instance.setProviderInfo(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public Builder setProviderInfo(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setProviderInfo(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public Builder mergeProviderInfo(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo value) {
        copyOnWrite();
        instance.mergeProviderInfo(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderInfo providerInfo = 2;</code>
       */
      public Builder clearProviderInfo() {  copyOnWrite();
        instance.clearProviderInfo();
        return this;
      }

      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public boolean hasProviderStatus() {
        return instance.hasProviderStatus();
      }
      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus getProviderStatus() {
        return instance.getProviderStatus();
      }
      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public Builder setProviderStatus(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus value) {
        copyOnWrite();
        instance.setProviderStatus(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public Builder setProviderStatus(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Builder builderForValue) {
        copyOnWrite();
        instance.setProviderStatus(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public Builder mergeProviderStatus(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus value) {
        copyOnWrite();
        instance.mergeProviderStatus(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderStatus providerStatus = 3;</code>
       */
      public Builder clearProviderStatus() {  copyOnWrite();
        instance.clearProviderStatus();
        return this;
      }

      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public boolean hasProviderEnabled() {
        return instance.hasProviderEnabled();
      }
      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled getProviderEnabled() {
        return instance.getProviderEnabled();
      }
      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public Builder setProviderEnabled(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled value) {
        copyOnWrite();
        instance.setProviderEnabled(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public Builder setProviderEnabled(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.Builder builderForValue) {
        copyOnWrite();
        instance.setProviderEnabled(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public Builder mergeProviderEnabled(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled value) {
        copyOnWrite();
        instance.mergeProviderEnabled(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationProviderEnabled providerEnabled = 4;</code>
       */
      public Builder clearProviderEnabled() {  copyOnWrite();
        instance.clearProviderEnabled();
        return this;
      }

      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public boolean hasUpdate() {
        return instance.hasUpdate();
      }
      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate getUpdate() {
        return instance.getUpdate();
      }
      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public Builder setUpdate(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate value) {
        copyOnWrite();
        instance.setUpdate(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public Builder setUpdate(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.setUpdate(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public Builder mergeUpdate(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate value) {
        copyOnWrite();
        instance.mergeUpdate(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationUpdate update = 5;</code>
       */
      public Builder clearUpdate() {  copyOnWrite();
        instance.clearUpdate();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationRequest)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasProviderInfo()) {
            if (!getProviderInfo().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasProviderStatus()) {
            if (!getProviderStatus().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasProviderEnabled()) {
            if (!getProviderEnabled().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasUpdate()) {
            if (!getUpdate().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          providerInfo_ = visitor.visitMessage(providerInfo_, other.providerInfo_);
          providerStatus_ = visitor.visitMessage(providerStatus_, other.providerStatus_);
          providerEnabled_ = visitor.visitMessage(providerEnabled_, other.providerEnabled_);
          update_ = visitor.visitMessage(update_, other.update_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.LocationRequestType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = providerInfo_.toBuilder();
                  }
                  providerInfo_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(providerInfo_);
                    providerInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = providerStatus_.toBuilder();
                  }
                  providerStatus_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderStatus.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(providerStatus_);
                    providerStatus_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 34: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = providerEnabled_.toBuilder();
                  }
                  providerEnabled_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationProviderEnabled.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(providerEnabled_);
                    providerEnabled_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 42: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = update_.toBuilder();
                  }
                  update_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUpdate.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(update_);
                    update_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationRequest)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationRequest> PARSER;

    public static com.google.protobuf.Parser<LocationRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationSubscribeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationSubscribe)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType getType();

    /**
     * <code>required string provider = 2;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 2;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>required string provider = 2;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <code>optional int64 minTime = 3;</code>
     */
    boolean hasMinTime();
    /**
     * <code>optional int64 minTime = 3;</code>
     */
    long getMinTime();

    /**
     * <code>optional float minDistance = 4;</code>
     */
    boolean hasMinDistance();
    /**
     * <code>optional float minDistance = 4;</code>
     */
    float getMinDistance();
  }
  /**
   * <pre>
   * S-&gt;C: Location update request (one-time or long-term)
   * </pre>
   *
   * Protobuf type {@code brahma.LocationSubscribe}
   */
  public  static final class LocationSubscribe extends
      com.google.protobuf.GeneratedMessageLite<
          LocationSubscribe, LocationSubscribe.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationSubscribe)
      LocationSubscribeOrBuilder {
    private LocationSubscribe() {
      type_ = 1;
      provider_ = "";
    }
    /**
     * Protobuf enum {@code brahma.LocationSubscribe.LocationSubscribeType}
     */
    public enum LocationSubscribeType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>SINGLE_UPDATE = 1;</code>
       */
      SINGLE_UPDATE(1),
      /**
       * <code>MULTIPLE_UPDATES = 2;</code>
       */
      MULTIPLE_UPDATES(2),
      ;

      /**
       * <code>SINGLE_UPDATE = 1;</code>
       */
      public static final int SINGLE_UPDATE_VALUE = 1;
      /**
       * <code>MULTIPLE_UPDATES = 2;</code>
       */
      public static final int MULTIPLE_UPDATES_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LocationSubscribeType valueOf(int value) {
        return forNumber(value);
      }

      public static LocationSubscribeType forNumber(int value) {
        switch (value) {
          case 1: return SINGLE_UPDATE;
          case 2: return MULTIPLE_UPDATES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LocationSubscribeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LocationSubscribeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationSubscribeType>() {
              public LocationSubscribeType findValueByNumber(int number) {
                return LocationSubscribeType.forNumber(number);
              }
            };

      private final int value;

      private LocationSubscribeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.LocationSubscribe.LocationSubscribeType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType.SINGLE_UPDATE : result;
    }
    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int PROVIDER_FIELD_NUMBER = 2;
    private java.lang.String provider_;
    /**
     * <code>required string provider = 2;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string provider = 2;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>required string provider = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>required string provider = 2;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      provider_ = value;
    }
    /**
     * <code>required string provider = 2;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000002);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>required string provider = 2;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      provider_ = value.toStringUtf8();
    }

    public static final int MINTIME_FIELD_NUMBER = 3;
    private long minTime_;
    /**
     * <code>optional int64 minTime = 3;</code>
     */
    public boolean hasMinTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 minTime = 3;</code>
     */
    public long getMinTime() {
      return minTime_;
    }
    /**
     * <code>optional int64 minTime = 3;</code>
     */
    private void setMinTime(long value) {
      bitField0_ |= 0x00000004;
      minTime_ = value;
    }
    /**
     * <code>optional int64 minTime = 3;</code>
     */
    private void clearMinTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minTime_ = 0L;
    }

    public static final int MINDISTANCE_FIELD_NUMBER = 4;
    private float minDistance_;
    /**
     * <code>optional float minDistance = 4;</code>
     */
    public boolean hasMinDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float minDistance = 4;</code>
     */
    public float getMinDistance() {
      return minDistance_;
    }
    /**
     * <code>optional float minDistance = 4;</code>
     */
    private void setMinDistance(float value) {
      bitField0_ |= 0x00000008;
      minDistance_ = value;
    }
    /**
     * <code>optional float minDistance = 4;</code>
     */
    private void clearMinDistance() {
      bitField0_ = (bitField0_ & ~0x00000008);
      minDistance_ = 0F;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getProvider());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, minTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, minDistance_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getProvider());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, minTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minDistance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C: Location update request (one-time or long-term)
     * </pre>
     *
     * Protobuf type {@code brahma.LocationSubscribe}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationSubscribe)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribeOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationSubscribe.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.LocationSubscribe.LocationSubscribeType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>required string provider = 2;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>required string provider = 2;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <code>optional int64 minTime = 3;</code>
       */
      public boolean hasMinTime() {
        return instance.hasMinTime();
      }
      /**
       * <code>optional int64 minTime = 3;</code>
       */
      public long getMinTime() {
        return instance.getMinTime();
      }
      /**
       * <code>optional int64 minTime = 3;</code>
       */
      public Builder setMinTime(long value) {
        copyOnWrite();
        instance.setMinTime(value);
        return this;
      }
      /**
       * <code>optional int64 minTime = 3;</code>
       */
      public Builder clearMinTime() {
        copyOnWrite();
        instance.clearMinTime();
        return this;
      }

      /**
       * <code>optional float minDistance = 4;</code>
       */
      public boolean hasMinDistance() {
        return instance.hasMinDistance();
      }
      /**
       * <code>optional float minDistance = 4;</code>
       */
      public float getMinDistance() {
        return instance.getMinDistance();
      }
      /**
       * <code>optional float minDistance = 4;</code>
       */
      public Builder setMinDistance(float value) {
        copyOnWrite();
        instance.setMinDistance(value);
        return this;
      }
      /**
       * <code>optional float minDistance = 4;</code>
       */
      public Builder clearMinDistance() {
        copyOnWrite();
        instance.clearMinDistance();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationSubscribe)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasProvider()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          minTime_ = visitor.visitLong(
              hasMinTime(), minTime_,
              other.hasMinTime(), other.minTime_);
          minDistance_ = visitor.visitFloat(
              hasMinDistance(), minDistance_,
              other.hasMinDistance(), other.minDistance_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.LocationSubscribeType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  provider_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  minTime_ = input.readInt64();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  minDistance_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationSubscribe)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationSubscribe();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationSubscribe> PARSER;

    public static com.google.protobuf.Parser<LocationSubscribe> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationUnsubscribeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationUnsubscribe)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string provider = 1;</code>
     */
    boolean hasProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    java.lang.String getProvider();
    /**
     * <code>required string provider = 1;</code>
     */
    com.google.protobuf.ByteString
        getProviderBytes();
  }
  /**
   * <pre>
   * S-&gt;C: Unsubscribe from long-term location updates
   * </pre>
   *
   * Protobuf type {@code brahma.LocationUnsubscribe}
   */
  public  static final class LocationUnsubscribe extends
      com.google.protobuf.GeneratedMessageLite<
          LocationUnsubscribe, LocationUnsubscribe.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationUnsubscribe)
      LocationUnsubscribeOrBuilder {
    private LocationUnsubscribe() {
      provider_ = "";
    }
    private int bitField0_;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.String provider_;
    /**
     * <code>required string provider = 1;</code>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProvider(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value;
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void clearProvider() {
      bitField0_ = (bitField0_ & ~0x00000001);
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <code>required string provider = 1;</code>
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      provider_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getProvider());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getProvider());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C: Unsubscribe from long-term location updates
     * </pre>
     *
     * Protobuf type {@code brahma.LocationUnsubscribe}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationUnsubscribe)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribeOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationUnsubscribe.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string provider = 1;</code>
       */
      public boolean hasProvider() {
        return instance.hasProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <code>required string provider = 1;</code>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationUnsubscribe)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasProvider()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe) arg1;
          provider_ = visitor.visitString(
              hasProvider(), provider_,
              other.hasProvider(), other.provider_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  provider_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationUnsubscribe)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationUnsubscribe();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationUnsubscribe> PARSER;

    public static com.google.protobuf.Parser<LocationUnsubscribe> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.LocationResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType getType();

    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    boolean hasSubscribe();
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe getSubscribe();

    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    boolean hasUnsubscribe();
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe getUnsubscribe();
  }
  /**
   * <pre>
   * S-&gt;C: Wrapper for LocationSubscribe and LocationUnsubscribe messages
   * </pre>
   *
   * Protobuf type {@code brahma.LocationResponse}
   */
  public  static final class LocationResponse extends
      com.google.protobuf.GeneratedMessageLite<
          LocationResponse, LocationResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.LocationResponse)
      LocationResponseOrBuilder {
    private LocationResponse() {
      type_ = 1;
    }
    /**
     * Protobuf enum {@code brahma.LocationResponse.LocationResponseType}
     */
    public enum LocationResponseType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>SUBSCRIBE = 1;</code>
       */
      SUBSCRIBE(1),
      /**
       * <code>UNSUBSCRIBE = 2;</code>
       */
      UNSUBSCRIBE(2),
      ;

      /**
       * <code>SUBSCRIBE = 1;</code>
       */
      public static final int SUBSCRIBE_VALUE = 1;
      /**
       * <code>UNSUBSCRIBE = 2;</code>
       */
      public static final int UNSUBSCRIBE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LocationResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static LocationResponseType forNumber(int value) {
        switch (value) {
          case 1: return SUBSCRIBE;
          case 2: return UNSUBSCRIBE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LocationResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LocationResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationResponseType>() {
              public LocationResponseType findValueByNumber(int number) {
                return LocationResponseType.forNumber(number);
              }
            };

      private final int value;

      private LocationResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.LocationResponse.LocationResponseType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType.SUBSCRIBE : result;
    }
    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int SUBSCRIBE_FIELD_NUMBER = 2;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe subscribe_;
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    public boolean hasSubscribe() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe getSubscribe() {
      return subscribe_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.getDefaultInstance() : subscribe_;
    }
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    private void setSubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe value) {
      if (value == null) {
        throw new NullPointerException();
      }
      subscribe_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    private void setSubscribe(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.Builder builderForValue) {
      subscribe_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    private void mergeSubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe value) {
      if (subscribe_ != null &&
          subscribe_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.getDefaultInstance()) {
        subscribe_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.newBuilder(subscribe_).mergeFrom(value).buildPartial();
      } else {
        subscribe_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
     */
    private void clearSubscribe() {  subscribe_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int UNSUBSCRIBE_FIELD_NUMBER = 3;
    private brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe unsubscribe_;
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    public boolean hasUnsubscribe() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe getUnsubscribe() {
      return unsubscribe_ == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.getDefaultInstance() : unsubscribe_;
    }
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    private void setUnsubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe value) {
      if (value == null) {
        throw new NullPointerException();
      }
      unsubscribe_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    private void setUnsubscribe(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.Builder builderForValue) {
      unsubscribe_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    private void mergeUnsubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe value) {
      if (unsubscribe_ != null &&
          unsubscribe_ != brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.getDefaultInstance()) {
        unsubscribe_ =
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.newBuilder(unsubscribe_).mergeFrom(value).buildPartial();
      } else {
        unsubscribe_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
     */
    private void clearUnsubscribe() {  unsubscribe_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getSubscribe());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getUnsubscribe());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSubscribe());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUnsubscribe());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C: Wrapper for LocationSubscribe and LocationUnsubscribe messages
     * </pre>
     *
     * Protobuf type {@code brahma.LocationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.LocationResponse)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponseOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.LocationResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.LocationResponse.LocationResponseType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public boolean hasSubscribe() {
        return instance.hasSubscribe();
      }
      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe getSubscribe() {
        return instance.getSubscribe();
      }
      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public Builder setSubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe value) {
        copyOnWrite();
        instance.setSubscribe(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public Builder setSubscribe(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.Builder builderForValue) {
        copyOnWrite();
        instance.setSubscribe(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public Builder mergeSubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe value) {
        copyOnWrite();
        instance.mergeSubscribe(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationSubscribe subscribe = 2;</code>
       */
      public Builder clearSubscribe() {  copyOnWrite();
        instance.clearSubscribe();
        return this;
      }

      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public boolean hasUnsubscribe() {
        return instance.hasUnsubscribe();
      }
      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe getUnsubscribe() {
        return instance.getUnsubscribe();
      }
      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public Builder setUnsubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe value) {
        copyOnWrite();
        instance.setUnsubscribe(value);
        return this;
        }
      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public Builder setUnsubscribe(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.Builder builderForValue) {
        copyOnWrite();
        instance.setUnsubscribe(builderForValue);
        return this;
      }
      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public Builder mergeUnsubscribe(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe value) {
        copyOnWrite();
        instance.mergeUnsubscribe(value);
        return this;
      }
      /**
       * <code>optional .brahma.LocationUnsubscribe unsubscribe = 3;</code>
       */
      public Builder clearUnsubscribe() {  copyOnWrite();
        instance.clearUnsubscribe();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.LocationResponse)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasSubscribe()) {
            if (!getSubscribe().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasUnsubscribe()) {
            if (!getUnsubscribe().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          subscribe_ = visitor.visitMessage(subscribe_, other.subscribe_);
          unsubscribe_ = visitor.visitMessage(unsubscribe_, other.unsubscribe_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.LocationResponseType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = subscribe_.toBuilder();
                  }
                  subscribe_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationSubscribe.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(subscribe_);
                    subscribe_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = unsubscribe_.toBuilder();
                  }
                  unsubscribe_ = input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationUnsubscribe.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(unsubscribe_);
                    unsubscribe_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.LocationResponse)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.LocationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationResponse> PARSER;

    public static com.google.protobuf.Parser<LocationResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AuthResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.AuthResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType getType();
  }
  /**
   * <pre>
   * S-&gt;C
   * </pre>
   *
   * Protobuf type {@code brahma.AuthResponse}
   */
  public  static final class AuthResponse extends
      com.google.protobuf.GeneratedMessageLite<
          AuthResponse, AuthResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.AuthResponse)
      AuthResponseOrBuilder {
    private AuthResponse() {
    }
    /**
     * Protobuf enum {@code brahma.AuthResponse.AuthResponseType}
     */
    public enum AuthResponseType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * sent in response to an AuthRequest
       * </pre>
       *
       * <code>AUTH_FAIL = 0;</code>
       */
      AUTH_FAIL(0),
      /**
       * <pre>
       * sent when the session times out
       * </pre>
       *
       * <code>SESSION_MAX_TIMEOUT = 1;</code>
       */
      SESSION_MAX_TIMEOUT(1),
      ;

      /**
       * <pre>
       * sent in response to an AuthRequest
       * </pre>
       *
       * <code>AUTH_FAIL = 0;</code>
       */
      public static final int AUTH_FAIL_VALUE = 0;
      /**
       * <pre>
       * sent when the session times out
       * </pre>
       *
       * <code>SESSION_MAX_TIMEOUT = 1;</code>
       */
      public static final int SESSION_MAX_TIMEOUT_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AuthResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static AuthResponseType forNumber(int value) {
        switch (value) {
          case 0: return AUTH_FAIL;
          case 1: return SESSION_MAX_TIMEOUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AuthResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AuthResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AuthResponseType>() {
              public AuthResponseType findValueByNumber(int number) {
                return AuthResponseType.forNumber(number);
              }
            };

      private final int value;

      private AuthResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.AuthResponse.AuthResponseType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType.AUTH_FAIL : result;
    }
    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C
     * </pre>
     *
     * Protobuf type {@code brahma.AuthResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.AuthResponse)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponseOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.AuthResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.AuthResponse.AuthResponseType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.AuthResponse)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.AuthResponseType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.AuthResponse)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AuthResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AuthResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AuthResponse> PARSER;

    public static com.google.protobuf.Parser<AuthResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WebRTCMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.WebRTCMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType getType();

    /**
     * <code>optional string json = 2;</code>
     */
    boolean hasJson();
    /**
     * <code>optional string json = 2;</code>
     */
    java.lang.String getJson();
    /**
     * <code>optional string json = 2;</code>
     */
    com.google.protobuf.ByteString
        getJsonBytes();
  }
  /**
   * Protobuf type {@code brahma.WebRTCMessage}
   */
  public  static final class WebRTCMessage extends
      com.google.protobuf.GeneratedMessageLite<
          WebRTCMessage, WebRTCMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.WebRTCMessage)
      WebRTCMessageOrBuilder {
    private WebRTCMessage() {
      type_ = 1;
      json_ = "";
    }
    /**
     * Protobuf enum {@code brahma.WebRTCMessage.WebRTCType}
     */
    public enum WebRTCType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>OFFER = 1;</code>
       */
      OFFER(1),
      /**
       * <code>ANSWER = 2;</code>
       */
      ANSWER(2),
      /**
       * <code>CANDIDATE = 3;</code>
       */
      CANDIDATE(3),
      /**
       * <code>BYE = 4;</code>
       */
      BYE(4),
      ;

      /**
       * <code>OFFER = 1;</code>
       */
      public static final int OFFER_VALUE = 1;
      /**
       * <code>ANSWER = 2;</code>
       */
      public static final int ANSWER_VALUE = 2;
      /**
       * <code>CANDIDATE = 3;</code>
       */
      public static final int CANDIDATE_VALUE = 3;
      /**
       * <code>BYE = 4;</code>
       */
      public static final int BYE_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static WebRTCType valueOf(int value) {
        return forNumber(value);
      }

      public static WebRTCType forNumber(int value) {
        switch (value) {
          case 1: return OFFER;
          case 2: return ANSWER;
          case 3: return CANDIDATE;
          case 4: return BYE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WebRTCType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          WebRTCType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WebRTCType>() {
              public WebRTCType findValueByNumber(int number) {
                return WebRTCType.forNumber(number);
              }
            };

      private final int value;

      private WebRTCType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.WebRTCMessage.WebRTCType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType.OFFER : result;
    }
    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int JSON_FIELD_NUMBER = 2;
    private java.lang.String json_;
    /**
     * <code>optional string json = 2;</code>
     */
    public boolean hasJson() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string json = 2;</code>
     */
    public java.lang.String getJson() {
      return json_;
    }
    /**
     * <code>optional string json = 2;</code>
     */
    public com.google.protobuf.ByteString
        getJsonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(json_);
    }
    /**
     * <code>optional string json = 2;</code>
     */
    private void setJson(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      json_ = value;
    }
    /**
     * <code>optional string json = 2;</code>
     */
    private void clearJson() {
      bitField0_ = (bitField0_ & ~0x00000002);
      json_ = getDefaultInstance().getJson();
    }
    /**
     * <code>optional string json = 2;</code>
     */
    private void setJsonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      json_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getJson());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getJson());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code brahma.WebRTCMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.WebRTCMessage)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessageOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.WebRTCMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType getType() {
        return instance.getType();
      }
      /**
       * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>optional .brahma.WebRTCMessage.WebRTCType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional string json = 2;</code>
       */
      public boolean hasJson() {
        return instance.hasJson();
      }
      /**
       * <code>optional string json = 2;</code>
       */
      public java.lang.String getJson() {
        return instance.getJson();
      }
      /**
       * <code>optional string json = 2;</code>
       */
      public com.google.protobuf.ByteString
          getJsonBytes() {
        return instance.getJsonBytes();
      }
      /**
       * <code>optional string json = 2;</code>
       */
      public Builder setJson(
          java.lang.String value) {
        copyOnWrite();
        instance.setJson(value);
        return this;
      }
      /**
       * <code>optional string json = 2;</code>
       */
      public Builder clearJson() {
        copyOnWrite();
        instance.clearJson();
        return this;
      }
      /**
       * <code>optional string json = 2;</code>
       */
      public Builder setJsonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setJsonBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.WebRTCMessage)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          json_ = visitor.visitString(
              hasJson(), json_,
              other.hasJson(), other.json_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.WebRTCType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  json_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.WebRTCMessage)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WebRTCMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.WebRTCMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WebRTCMessage> PARSER;

    public static com.google.protobuf.Parser<WebRTCMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VideoStreamInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.VideoStreamInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string iceServers = 1;</code>
     */
    boolean hasIceServers();
    /**
     * <code>optional string iceServers = 1;</code>
     */
    java.lang.String getIceServers();
    /**
     * <code>optional string iceServers = 1;</code>
     */
    com.google.protobuf.ByteString
        getIceServersBytes();

    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    boolean hasPcConstraints();
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    java.lang.String getPcConstraints();
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    com.google.protobuf.ByteString
        getPcConstraintsBytes();

    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    boolean hasVideoConstraints();
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    java.lang.String getVideoConstraints();
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    com.google.protobuf.ByteString
        getVideoConstraintsBytes();
  }
  /**
   * <pre>
   * S-&gt;C
   * </pre>
   *
   * Protobuf type {@code brahma.VideoStreamInfo}
   */
  public  static final class VideoStreamInfo extends
      com.google.protobuf.GeneratedMessageLite<
          VideoStreamInfo, VideoStreamInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.VideoStreamInfo)
      VideoStreamInfoOrBuilder {
    private VideoStreamInfo() {
      iceServers_ = "";
      pcConstraints_ = "";
      videoConstraints_ = "";
    }
    private int bitField0_;
    public static final int ICESERVERS_FIELD_NUMBER = 1;
    private java.lang.String iceServers_;
    /**
     * <code>optional string iceServers = 1;</code>
     */
    public boolean hasIceServers() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string iceServers = 1;</code>
     */
    public java.lang.String getIceServers() {
      return iceServers_;
    }
    /**
     * <code>optional string iceServers = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIceServersBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(iceServers_);
    }
    /**
     * <code>optional string iceServers = 1;</code>
     */
    private void setIceServers(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      iceServers_ = value;
    }
    /**
     * <code>optional string iceServers = 1;</code>
     */
    private void clearIceServers() {
      bitField0_ = (bitField0_ & ~0x00000001);
      iceServers_ = getDefaultInstance().getIceServers();
    }
    /**
     * <code>optional string iceServers = 1;</code>
     */
    private void setIceServersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      iceServers_ = value.toStringUtf8();
    }

    public static final int PCCONSTRAINTS_FIELD_NUMBER = 2;
    private java.lang.String pcConstraints_;
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    public boolean hasPcConstraints() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    public java.lang.String getPcConstraints() {
      return pcConstraints_;
    }
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPcConstraintsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pcConstraints_);
    }
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    private void setPcConstraints(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      pcConstraints_ = value;
    }
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    private void clearPcConstraints() {
      bitField0_ = (bitField0_ & ~0x00000002);
      pcConstraints_ = getDefaultInstance().getPcConstraints();
    }
    /**
     * <code>optional string pcConstraints = 2;</code>
     */
    private void setPcConstraintsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      pcConstraints_ = value.toStringUtf8();
    }

    public static final int VIDEOCONSTRAINTS_FIELD_NUMBER = 3;
    private java.lang.String videoConstraints_;
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    public boolean hasVideoConstraints() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    public java.lang.String getVideoConstraints() {
      return videoConstraints_;
    }
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVideoConstraintsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(videoConstraints_);
    }
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    private void setVideoConstraints(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      videoConstraints_ = value;
    }
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    private void clearVideoConstraints() {
      bitField0_ = (bitField0_ & ~0x00000004);
      videoConstraints_ = getDefaultInstance().getVideoConstraints();
    }
    /**
     * <code>optional string videoConstraints = 3;</code>
     */
    private void setVideoConstraintsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      videoConstraints_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getIceServers());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPcConstraints());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getVideoConstraints());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getIceServers());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPcConstraints());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVideoConstraints());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C
     * </pre>
     *
     * Protobuf type {@code brahma.VideoStreamInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.VideoStreamInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.VideoStreamInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string iceServers = 1;</code>
       */
      public boolean hasIceServers() {
        return instance.hasIceServers();
      }
      /**
       * <code>optional string iceServers = 1;</code>
       */
      public java.lang.String getIceServers() {
        return instance.getIceServers();
      }
      /**
       * <code>optional string iceServers = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIceServersBytes() {
        return instance.getIceServersBytes();
      }
      /**
       * <code>optional string iceServers = 1;</code>
       */
      public Builder setIceServers(
          java.lang.String value) {
        copyOnWrite();
        instance.setIceServers(value);
        return this;
      }
      /**
       * <code>optional string iceServers = 1;</code>
       */
      public Builder clearIceServers() {
        copyOnWrite();
        instance.clearIceServers();
        return this;
      }
      /**
       * <code>optional string iceServers = 1;</code>
       */
      public Builder setIceServersBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIceServersBytes(value);
        return this;
      }

      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public boolean hasPcConstraints() {
        return instance.hasPcConstraints();
      }
      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public java.lang.String getPcConstraints() {
        return instance.getPcConstraints();
      }
      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPcConstraintsBytes() {
        return instance.getPcConstraintsBytes();
      }
      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public Builder setPcConstraints(
          java.lang.String value) {
        copyOnWrite();
        instance.setPcConstraints(value);
        return this;
      }
      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public Builder clearPcConstraints() {
        copyOnWrite();
        instance.clearPcConstraints();
        return this;
      }
      /**
       * <code>optional string pcConstraints = 2;</code>
       */
      public Builder setPcConstraintsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPcConstraintsBytes(value);
        return this;
      }

      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public boolean hasVideoConstraints() {
        return instance.hasVideoConstraints();
      }
      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public java.lang.String getVideoConstraints() {
        return instance.getVideoConstraints();
      }
      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVideoConstraintsBytes() {
        return instance.getVideoConstraintsBytes();
      }
      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public Builder setVideoConstraints(
          java.lang.String value) {
        copyOnWrite();
        instance.setVideoConstraints(value);
        return this;
      }
      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public Builder clearVideoConstraints() {
        copyOnWrite();
        instance.clearVideoConstraints();
        return this;
      }
      /**
       * <code>optional string videoConstraints = 3;</code>
       */
      public Builder setVideoConstraintsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVideoConstraintsBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.VideoStreamInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo) arg1;
          iceServers_ = visitor.visitString(
              hasIceServers(), iceServers_,
              other.hasIceServers(), other.iceServers_);
          pcConstraints_ = visitor.visitString(
              hasPcConstraints(), pcConstraints_,
              other.hasPcConstraints(), other.pcConstraints_);
          videoConstraints_ = visitor.visitString(
              hasVideoConstraints(), videoConstraints_,
              other.hasVideoConstraints(), other.videoConstraints_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  iceServers_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  pcConstraints_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  videoConstraints_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.VideoStreamInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VideoStreamInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.VideoStreamInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VideoStreamInfo> PARSER;

    public static com.google.protobuf.Parser<VideoStreamInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RotationInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.RotationInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 rotation = 1;</code>
     */
    boolean hasRotation();
    /**
     * <code>required int32 rotation = 1;</code>
     */
    int getRotation();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.RotationInfo}
   */
  public  static final class RotationInfo extends
      com.google.protobuf.GeneratedMessageLite<
          RotationInfo, RotationInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.RotationInfo)
      RotationInfoOrBuilder {
    private RotationInfo() {
    }
    private int bitField0_;
    public static final int ROTATION_FIELD_NUMBER = 1;
    private int rotation_;
    /**
     * <code>required int32 rotation = 1;</code>
     */
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 rotation = 1;</code>
     */
    public int getRotation() {
      return rotation_;
    }
    /**
     * <code>required int32 rotation = 1;</code>
     */
    private void setRotation(int value) {
      bitField0_ |= 0x00000001;
      rotation_ = value;
    }
    /**
     * <code>required int32 rotation = 1;</code>
     */
    private void clearRotation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rotation_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rotation_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rotation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.RotationInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.RotationInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.RotationInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 rotation = 1;</code>
       */
      public boolean hasRotation() {
        return instance.hasRotation();
      }
      /**
       * <code>required int32 rotation = 1;</code>
       */
      public int getRotation() {
        return instance.getRotation();
      }
      /**
       * <code>required int32 rotation = 1;</code>
       */
      public Builder setRotation(int value) {
        copyOnWrite();
        instance.setRotation(value);
        return this;
      }
      /**
       * <code>required int32 rotation = 1;</code>
       */
      public Builder clearRotation() {
        copyOnWrite();
        instance.clearRotation();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.RotationInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasRotation()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo) arg1;
          rotation_ = visitor.visitInt(
              hasRotation(), rotation_,
              other.hasRotation(), other.rotation_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  rotation_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.RotationInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RotationInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.RotationInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RotationInfo> PARSER;

    public static com.google.protobuf.Parser<RotationInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ScreenInfoClientOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.ScreenInfoClient)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    boolean hasScreenX();
    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    int getScreenX();

    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    boolean hasScreenY();
    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    int getScreenY();

    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    boolean hasScreenDPI();
    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    int getScreenDPI();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.ScreenInfoClient}
   */
  public  static final class ScreenInfoClient extends
      com.google.protobuf.GeneratedMessageLite<
          ScreenInfoClient, ScreenInfoClient.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.ScreenInfoClient)
      ScreenInfoClientOrBuilder {
    private ScreenInfoClient() {
    }
    private int bitField0_;
    public static final int SCREENX_FIELD_NUMBER = 1;
    private int screenX_;
    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    public boolean hasScreenX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    public int getScreenX() {
      return screenX_;
    }
    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    private void setScreenX(int value) {
      bitField0_ |= 0x00000001;
      screenX_ = value;
    }
    /**
     * <code>required int32 ScreenX = 1;</code>
     */
    private void clearScreenX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      screenX_ = 0;
    }

    public static final int SCREENY_FIELD_NUMBER = 2;
    private int screenY_;
    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    public boolean hasScreenY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    public int getScreenY() {
      return screenY_;
    }
    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    private void setScreenY(int value) {
      bitField0_ |= 0x00000002;
      screenY_ = value;
    }
    /**
     * <code>required int32 ScreenY = 2;</code>
     */
    private void clearScreenY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      screenY_ = 0;
    }

    public static final int SCREENDPI_FIELD_NUMBER = 3;
    private int screenDPI_;
    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    public boolean hasScreenDPI() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    public int getScreenDPI() {
      return screenDPI_;
    }
    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    private void setScreenDPI(int value) {
      bitField0_ |= 0x00000004;
      screenDPI_ = value;
    }
    /**
     * <code>required int32 ScreenDPI = 3;</code>
     */
    private void clearScreenDPI() {
      bitField0_ = (bitField0_ & ~0x00000004);
      screenDPI_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, screenX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, screenY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, screenDPI_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, screenX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, screenY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, screenDPI_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.ScreenInfoClient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.ScreenInfoClient)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClientOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.ScreenInfoClient.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int32 ScreenX = 1;</code>
       */
      public boolean hasScreenX() {
        return instance.hasScreenX();
      }
      /**
       * <code>required int32 ScreenX = 1;</code>
       */
      public int getScreenX() {
        return instance.getScreenX();
      }
      /**
       * <code>required int32 ScreenX = 1;</code>
       */
      public Builder setScreenX(int value) {
        copyOnWrite();
        instance.setScreenX(value);
        return this;
      }
      /**
       * <code>required int32 ScreenX = 1;</code>
       */
      public Builder clearScreenX() {
        copyOnWrite();
        instance.clearScreenX();
        return this;
      }

      /**
       * <code>required int32 ScreenY = 2;</code>
       */
      public boolean hasScreenY() {
        return instance.hasScreenY();
      }
      /**
       * <code>required int32 ScreenY = 2;</code>
       */
      public int getScreenY() {
        return instance.getScreenY();
      }
      /**
       * <code>required int32 ScreenY = 2;</code>
       */
      public Builder setScreenY(int value) {
        copyOnWrite();
        instance.setScreenY(value);
        return this;
      }
      /**
       * <code>required int32 ScreenY = 2;</code>
       */
      public Builder clearScreenY() {
        copyOnWrite();
        instance.clearScreenY();
        return this;
      }

      /**
       * <code>required int32 ScreenDPI = 3;</code>
       */
      public boolean hasScreenDPI() {
        return instance.hasScreenDPI();
      }
      /**
       * <code>required int32 ScreenDPI = 3;</code>
       */
      public int getScreenDPI() {
        return instance.getScreenDPI();
      }
      /**
       * <code>required int32 ScreenDPI = 3;</code>
       */
      public Builder setScreenDPI(int value) {
        copyOnWrite();
        instance.setScreenDPI(value);
        return this;
      }
      /**
       * <code>required int32 ScreenDPI = 3;</code>
       */
      public Builder clearScreenDPI() {
        copyOnWrite();
        instance.clearScreenDPI();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.ScreenInfoClient)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasScreenX()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasScreenY()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasScreenDPI()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient) arg1;
          screenX_ = visitor.visitInt(
              hasScreenX(), screenX_,
              other.hasScreenX(), other.screenX_);
          screenY_ = visitor.visitInt(
              hasScreenY(), screenY_,
              other.hasScreenY(), other.screenY_);
          screenDPI_ = visitor.visitInt(
              hasScreenDPI(), screenDPI_,
              other.hasScreenDPI(), other.screenDPI_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  screenX_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  screenY_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  screenDPI_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.ScreenInfoClient)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ScreenInfoClient();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.ScreenInfoClient getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ScreenInfoClient> PARSER;

    public static com.google.protobuf.Parser<ScreenInfoClient> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Ping)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 startDate = 1;</code>
     */
    boolean hasStartDate();
    /**
     * <code>required int64 startDate = 1;</code>
     */
    long getStartDate();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.Ping}
   */
  public  static final class Ping extends
      com.google.protobuf.GeneratedMessageLite<
          Ping, Ping.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Ping)
      PingOrBuilder {
    private Ping() {
    }
    private int bitField0_;
    public static final int STARTDATE_FIELD_NUMBER = 1;
    private long startDate_;
    /**
     * <code>required int64 startDate = 1;</code>
     */
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 startDate = 1;</code>
     */
    public long getStartDate() {
      return startDate_;
    }
    /**
     * <code>required int64 startDate = 1;</code>
     */
    private void setStartDate(long value) {
      bitField0_ |= 0x00000001;
      startDate_ = value;
    }
    /**
     * <code>required int64 startDate = 1;</code>
     */
    private void clearStartDate() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startDate_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, startDate_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, startDate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.Ping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Ping)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.PingOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Ping.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 startDate = 1;</code>
       */
      public boolean hasStartDate() {
        return instance.hasStartDate();
      }
      /**
       * <code>required int64 startDate = 1;</code>
       */
      public long getStartDate() {
        return instance.getStartDate();
      }
      /**
       * <code>required int64 startDate = 1;</code>
       */
      public Builder setStartDate(long value) {
        copyOnWrite();
        instance.setStartDate(value);
        return this;
      }
      /**
       * <code>required int64 startDate = 1;</code>
       */
      public Builder clearStartDate() {
        copyOnWrite();
        instance.clearStartDate();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Ping)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasStartDate()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping) arg1;
          startDate_ = visitor.visitLong(
              hasStartDate(), startDate_,
              other.hasStartDate(), other.startDate_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  startDate_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Ping)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Ping();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Ping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Ping> PARSER;

    public static com.google.protobuf.Parser<Ping> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnconnectedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Unconnected)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string unconnected = 1;</code>
     */
    boolean hasUnconnected();
    /**
     * <code>required string unconnected = 1;</code>
     */
    java.lang.String getUnconnected();
    /**
     * <code>required string unconnected = 1;</code>
     */
    com.google.protobuf.ByteString
        getUnconnectedBytes();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.Unconnected}
   */
  public  static final class Unconnected extends
      com.google.protobuf.GeneratedMessageLite<
          Unconnected, Unconnected.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Unconnected)
      UnconnectedOrBuilder {
    private Unconnected() {
      unconnected_ = "";
    }
    private int bitField0_;
    public static final int UNCONNECTED_FIELD_NUMBER = 1;
    private java.lang.String unconnected_;
    /**
     * <code>required string unconnected = 1;</code>
     */
    public boolean hasUnconnected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string unconnected = 1;</code>
     */
    public java.lang.String getUnconnected() {
      return unconnected_;
    }
    /**
     * <code>required string unconnected = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUnconnectedBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(unconnected_);
    }
    /**
     * <code>required string unconnected = 1;</code>
     */
    private void setUnconnected(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      unconnected_ = value;
    }
    /**
     * <code>required string unconnected = 1;</code>
     */
    private void clearUnconnected() {
      bitField0_ = (bitField0_ & ~0x00000001);
      unconnected_ = getDefaultInstance().getUnconnected();
    }
    /**
     * <code>required string unconnected = 1;</code>
     */
    private void setUnconnectedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      unconnected_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getUnconnected());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUnconnected());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.Unconnected}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Unconnected)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.UnconnectedOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Unconnected.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string unconnected = 1;</code>
       */
      public boolean hasUnconnected() {
        return instance.hasUnconnected();
      }
      /**
       * <code>required string unconnected = 1;</code>
       */
      public java.lang.String getUnconnected() {
        return instance.getUnconnected();
      }
      /**
       * <code>required string unconnected = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUnconnectedBytes() {
        return instance.getUnconnectedBytes();
      }
      /**
       * <code>required string unconnected = 1;</code>
       */
      public Builder setUnconnected(
          java.lang.String value) {
        copyOnWrite();
        instance.setUnconnected(value);
        return this;
      }
      /**
       * <code>required string unconnected = 1;</code>
       */
      public Builder clearUnconnected() {
        copyOnWrite();
        instance.clearUnconnected();
        return this;
      }
      /**
       * <code>required string unconnected = 1;</code>
       */
      public Builder setUnconnectedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUnconnectedBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Unconnected)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUnconnected()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected) arg1;
          unconnected_ = visitor.visitString(
              hasUnconnected(), unconnected_,
              other.hasUnconnected(), other.unconnected_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  unconnected_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Unconnected)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Unconnected();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Unconnected getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Unconnected> PARSER;

    public static com.google.protobuf.Parser<Unconnected> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AppsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.AppsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType getType();

    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo>
        getCurrentList();
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getCurrent(int index);
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    int getCurrentCount();

    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    boolean hasScreenDensity();
    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    int getScreenDensity();

    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    boolean hasPkgName();
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    java.lang.String getPkgName();
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    com.google.protobuf.ByteString
        getPkgNameBytes();

    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    boolean hasEmail();
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    java.lang.String getEmail();
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    boolean hasAdToken();
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    java.lang.String getAdToken();
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    com.google.protobuf.ByteString
        getAdTokenBytes();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.AppsRequest}
   */
  public  static final class AppsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          AppsRequest, AppsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.AppsRequest)
      AppsRequestOrBuilder {
    private AppsRequest() {
      type_ = 1;
      current_ = emptyProtobufList();
      pkgName_ = "";
      email_ = "";
      adToken_ = "";
    }
    /**
     * Protobuf enum {@code brahma.AppsRequest.AppsRequestType}
     */
    public enum AppsRequestType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>REFRESH = 1;</code>
       */
      REFRESH(1),
      /**
       * <code>LAUNCH = 2;</code>
       */
      LAUNCH(2),
      /**
       * <code>ADAUTH = 3;</code>
       */
      ADAUTH(3),
      ;

      /**
       * <code>REFRESH = 1;</code>
       */
      public static final int REFRESH_VALUE = 1;
      /**
       * <code>LAUNCH = 2;</code>
       */
      public static final int LAUNCH_VALUE = 2;
      /**
       * <code>ADAUTH = 3;</code>
       */
      public static final int ADAUTH_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AppsRequestType valueOf(int value) {
        return forNumber(value);
      }

      public static AppsRequestType forNumber(int value) {
        switch (value) {
          case 1: return REFRESH;
          case 2: return LAUNCH;
          case 3: return ADAUTH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AppsRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AppsRequestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppsRequestType>() {
              public AppsRequestType findValueByNumber(int number) {
                return AppsRequestType.forNumber(number);
              }
            };

      private final int value;

      private AppsRequestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.AppsRequest.AppsRequestType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType.REFRESH : result;
    }
    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int CURRENT_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> current_;
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getCurrentList() {
      return current_;
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder>
        getCurrentOrBuilderList() {
      return current_;
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    public int getCurrentCount() {
      return current_.size();
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getCurrent(int index) {
      return current_.get(index);
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder getCurrentOrBuilder(
        int index) {
      return current_.get(index);
    }
    private void ensureCurrentIsMutable() {
      if (!current_.isModifiable()) {
        current_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(current_);
       }
    }

    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void setCurrent(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCurrentIsMutable();
      current_.set(index, value);
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void setCurrent(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureCurrentIsMutable();
      current_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void addCurrent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCurrentIsMutable();
      current_.add(value);
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void addCurrent(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCurrentIsMutable();
      current_.add(index, value);
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void addCurrent(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureCurrentIsMutable();
      current_.add(builderForValue.build());
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void addCurrent(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureCurrentIsMutable();
      current_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void addAllCurrent(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
      ensureCurrentIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, current_);
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void clearCurrent() {
      current_ = emptyProtobufList();
    }
    /**
     * <pre>
     * used for type REFRESH
     * </pre>
     *
     * <code>repeated .brahma.AppInfo current = 2;</code>
     */
    private void removeCurrent(int index) {
      ensureCurrentIsMutable();
      current_.remove(index);
    }

    public static final int SCREENDENSITY_FIELD_NUMBER = 3;
    private int screenDensity_;
    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    public boolean hasScreenDensity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    public int getScreenDensity() {
      return screenDensity_;
    }
    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    private void setScreenDensity(int value) {
      bitField0_ |= 0x00000002;
      screenDensity_ = value;
    }
    /**
     * <pre>
     * the screen density of the device
     * </pre>
     *
     * <code>optional int32 screenDensity = 3;</code>
     */
    private void clearScreenDensity() {
      bitField0_ = (bitField0_ & ~0x00000002);
      screenDensity_ = 0;
    }

    public static final int PKGNAME_FIELD_NUMBER = 4;
    private java.lang.String pkgName_;
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    public boolean hasPkgName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    public java.lang.String getPkgName() {
      return pkgName_;
    }
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPkgNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pkgName_);
    }
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    private void setPkgName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      pkgName_ = value;
    }
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    private void clearPkgName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      pkgName_ = getDefaultInstance().getPkgName();
    }
    /**
     * <pre>
     * used for type LAUNCH
     * </pre>
     *
     * <code>optional string pkgName = 4;</code>
     */
    private void setPkgNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      pkgName_ = value.toStringUtf8();
    }

    public static final int EMAIL_FIELD_NUMBER = 5;
    private java.lang.String email_;
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public boolean hasEmail() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public java.lang.String getEmail() {
      return email_;
    }
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(email_);
    }
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    private void setEmail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      email_ = value;
    }
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    private void clearEmail() {
      bitField0_ = (bitField0_ & ~0x00000008);
      email_ = getDefaultInstance().getEmail();
    }
    /**
     * <pre>
     * AD email
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    private void setEmailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      email_ = value.toStringUtf8();
    }

    public static final int ADTOKEN_FIELD_NUMBER = 6;
    private java.lang.String adToken_;
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    public boolean hasAdToken() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    public java.lang.String getAdToken() {
      return adToken_;
    }
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAdTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(adToken_);
    }
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    private void setAdToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      adToken_ = value;
    }
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    private void clearAdToken() {
      bitField0_ = (bitField0_ & ~0x00000010);
      adToken_ = getDefaultInstance().getAdToken();
    }
    /**
     * <pre>
     * AD Token
     * </pre>
     *
     * <code>optional string adToken = 6;</code>
     */
    private void setAdTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      adToken_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < current_.size(); i++) {
        output.writeMessage(2, current_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, screenDensity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(4, getPkgName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(5, getEmail());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(6, getAdToken());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      for (int i = 0; i < current_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, current_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, screenDensity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPkgName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getEmail());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getAdToken());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.AppsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.AppsRequest)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequestOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.AppsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.AppsRequest.AppsRequestType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getCurrentList() {
        return java.util.Collections.unmodifiableList(
            instance.getCurrentList());
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public int getCurrentCount() {
        return instance.getCurrentCount();
      }/**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getCurrent(int index) {
        return instance.getCurrent(index);
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder setCurrent(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.setCurrent(index, value);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder setCurrent(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setCurrent(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder addCurrent(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addCurrent(value);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder addCurrent(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addCurrent(index, value);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder addCurrent(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addCurrent(builderForValue);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder addCurrent(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addCurrent(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder addAllCurrent(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
        copyOnWrite();
        instance.addAllCurrent(values);
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder clearCurrent() {
        copyOnWrite();
        instance.clearCurrent();
        return this;
      }
      /**
       * <pre>
       * used for type REFRESH
       * </pre>
       *
       * <code>repeated .brahma.AppInfo current = 2;</code>
       */
      public Builder removeCurrent(int index) {
        copyOnWrite();
        instance.removeCurrent(index);
        return this;
      }

      /**
       * <pre>
       * the screen density of the device
       * </pre>
       *
       * <code>optional int32 screenDensity = 3;</code>
       */
      public boolean hasScreenDensity() {
        return instance.hasScreenDensity();
      }
      /**
       * <pre>
       * the screen density of the device
       * </pre>
       *
       * <code>optional int32 screenDensity = 3;</code>
       */
      public int getScreenDensity() {
        return instance.getScreenDensity();
      }
      /**
       * <pre>
       * the screen density of the device
       * </pre>
       *
       * <code>optional int32 screenDensity = 3;</code>
       */
      public Builder setScreenDensity(int value) {
        copyOnWrite();
        instance.setScreenDensity(value);
        return this;
      }
      /**
       * <pre>
       * the screen density of the device
       * </pre>
       *
       * <code>optional int32 screenDensity = 3;</code>
       */
      public Builder clearScreenDensity() {
        copyOnWrite();
        instance.clearScreenDensity();
        return this;
      }

      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public boolean hasPkgName() {
        return instance.hasPkgName();
      }
      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public java.lang.String getPkgName() {
        return instance.getPkgName();
      }
      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPkgNameBytes() {
        return instance.getPkgNameBytes();
      }
      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public Builder setPkgName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPkgName(value);
        return this;
      }
      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public Builder clearPkgName() {
        copyOnWrite();
        instance.clearPkgName();
        return this;
      }
      /**
       * <pre>
       * used for type LAUNCH
       * </pre>
       *
       * <code>optional string pkgName = 4;</code>
       */
      public Builder setPkgNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPkgNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public boolean hasEmail() {
        return instance.hasEmail();
      }
      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public java.lang.String getEmail() {
        return instance.getEmail();
      }
      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        return instance.getEmailBytes();
      }
      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public Builder setEmail(
          java.lang.String value) {
        copyOnWrite();
        instance.setEmail(value);
        return this;
      }
      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public Builder clearEmail() {
        copyOnWrite();
        instance.clearEmail();
        return this;
      }
      /**
       * <pre>
       * AD email
       * </pre>
       *
       * <code>optional string email = 5;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEmailBytes(value);
        return this;
      }

      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public boolean hasAdToken() {
        return instance.hasAdToken();
      }
      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public java.lang.String getAdToken() {
        return instance.getAdToken();
      }
      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAdTokenBytes() {
        return instance.getAdTokenBytes();
      }
      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public Builder setAdToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setAdToken(value);
        return this;
      }
      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public Builder clearAdToken() {
        copyOnWrite();
        instance.clearAdToken();
        return this;
      }
      /**
       * <pre>
       * AD Token
       * </pre>
       *
       * <code>optional string adToken = 6;</code>
       */
      public Builder setAdTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAdTokenBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.AppsRequest)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getCurrentCount(); i++) {
            if (!getCurrent(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          current_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          current_= visitor.visitList(current_, other.current_);
          screenDensity_ = visitor.visitInt(
              hasScreenDensity(), screenDensity_,
              other.hasScreenDensity(), other.screenDensity_);
          pkgName_ = visitor.visitString(
              hasPkgName(), pkgName_,
              other.hasPkgName(), other.pkgName_);
          email_ = visitor.visitString(
              hasEmail(), email_,
              other.hasEmail(), other.email_);
          adToken_ = visitor.visitString(
              hasAdToken(), adToken_,
              other.hasAdToken(), other.adToken_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.AppsRequestType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  if (!current_.isModifiable()) {
                    current_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(current_);
                  }
                  current_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.parser(), extensionRegistry));
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  screenDensity_ = input.readInt32();
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  pkgName_ = s;
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  email_ = s;
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  adToken_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.AppsRequest)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AppsRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AppsRequest> PARSER;

    public static com.google.protobuf.Parser<AppsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AppsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.AppsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType getType();

    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo>
        getNewList();
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getNew(int index);
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    int getNewCount();

    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo>
        getUpdatedList();
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getUpdated(int index);
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    int getUpdatedCount();

    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    java.util.List<String>
        getRemovedList();
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    int getRemovedCount();
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    java.lang.String getRemoved(int index);
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    com.google.protobuf.ByteString
        getRemovedBytes(int index);
  }
  /**
   * <pre>
   * S-&gt;C
   * </pre>
   *
   * Protobuf type {@code brahma.AppsResponse}
   */
  public  static final class AppsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          AppsResponse, AppsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.AppsResponse)
      AppsResponseOrBuilder {
    private AppsResponse() {
      type_ = 1;
      new_ = emptyProtobufList();
      updated_ = emptyProtobufList();
      removed_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * Protobuf enum {@code brahma.AppsResponse.AppsResponseType}
     */
    public enum AppsResponseType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * response to a REFRESH request
       * </pre>
       *
       * <code>REFRESH = 1;</code>
       */
      REFRESH(1),
      /**
       * <pre>
       * when the app has exited, this gets sent to the client
       * </pre>
       *
       * <code>EXIT = 2;</code>
       */
      EXIT(2),
      ;

      /**
       * <pre>
       * response to a REFRESH request
       * </pre>
       *
       * <code>REFRESH = 1;</code>
       */
      public static final int REFRESH_VALUE = 1;
      /**
       * <pre>
       * when the app has exited, this gets sent to the client
       * </pre>
       *
       * <code>EXIT = 2;</code>
       */
      public static final int EXIT_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AppsResponseType valueOf(int value) {
        return forNumber(value);
      }

      public static AppsResponseType forNumber(int value) {
        switch (value) {
          case 1: return REFRESH;
          case 2: return EXIT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AppsResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AppsResponseType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppsResponseType>() {
              public AppsResponseType findValueByNumber(int number) {
                return AppsResponseType.forNumber(number);
              }
            };

      private final int value;

      private AppsResponseType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:brahma.AppsResponse.AppsResponseType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType getType() {
      brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType result = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType.forNumber(type_);
      return result == null ? brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType.REFRESH : result;
    }
    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    private void setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 1;
    }

    public static final int NEW_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> new_;
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getNewList() {
      return new_;
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder>
        getNewOrBuilderList() {
      return new_;
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    public int getNewCount() {
      return new_.size();
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getNew(int index) {
      return new_.get(index);
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder getNewOrBuilder(
        int index) {
      return new_.get(index);
    }
    private void ensureNewIsMutable() {
      if (!new_.isModifiable()) {
        new_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(new_);
       }
    }

    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void setNew(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNewIsMutable();
      new_.set(index, value);
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void setNew(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureNewIsMutable();
      new_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void addNew(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNewIsMutable();
      new_.add(value);
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void addNew(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNewIsMutable();
      new_.add(index, value);
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void addNew(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureNewIsMutable();
      new_.add(builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void addNew(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureNewIsMutable();
      new_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void addAllNew(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
      ensureNewIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, new_);
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void clearNew() {
      new_ = emptyProtobufList();
    }
    /**
     * <pre>
     * list of apps to insert
     * </pre>
     *
     * <code>repeated .brahma.AppInfo new = 2;</code>
     */
    private void removeNew(int index) {
      ensureNewIsMutable();
      new_.remove(index);
    }

    public static final int UPDATED_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> updated_;
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getUpdatedList() {
      return updated_;
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    public java.util.List<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder>
        getUpdatedOrBuilderList() {
      return updated_;
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    public int getUpdatedCount() {
      return updated_.size();
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getUpdated(int index) {
      return updated_.get(index);
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder getUpdatedOrBuilder(
        int index) {
      return updated_.get(index);
    }
    private void ensureUpdatedIsMutable() {
      if (!updated_.isModifiable()) {
        updated_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(updated_);
       }
    }

    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void setUpdated(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUpdatedIsMutable();
      updated_.set(index, value);
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void setUpdated(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureUpdatedIsMutable();
      updated_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void addUpdated(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUpdatedIsMutable();
      updated_.add(value);
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void addUpdated(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUpdatedIsMutable();
      updated_.add(index, value);
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void addUpdated(
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureUpdatedIsMutable();
      updated_.add(builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void addUpdated(
        int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
      ensureUpdatedIsMutable();
      updated_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void addAllUpdated(
        java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
      ensureUpdatedIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, updated_);
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void clearUpdated() {
      updated_ = emptyProtobufList();
    }
    /**
     * <pre>
     * list of apps to update (changed name/icon?)
     * </pre>
     *
     * <code>repeated .brahma.AppInfo updated = 3;</code>
     */
    private void removeUpdated(int index) {
      ensureUpdatedIsMutable();
      updated_.remove(index);
    }

    public static final int REMOVED_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<String> removed_;
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    public java.util.List<String> getRemovedList() {
      return removed_;
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    public int getRemovedCount() {
      return removed_.size();
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    public java.lang.String getRemoved(int index) {
      return removed_.get(index);
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRemovedBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          removed_.get(index));
    }
    private void ensureRemovedIsMutable() {
      if (!removed_.isModifiable()) {
        removed_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(removed_);
       }
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    private void setRemoved(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedIsMutable();
      removed_.set(index, value);
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    private void addRemoved(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedIsMutable();
      removed_.add(value);
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    private void addAllRemoved(
        java.lang.Iterable<java.lang.String> values) {
      ensureRemovedIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, removed_);
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    private void clearRemoved() {
      removed_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * list of apps to remove (only pkgName needed)
     * </pre>
     *
     * <code>repeated string removed = 4;</code>
     */
    private void addRemovedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedIsMutable();
      removed_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < new_.size(); i++) {
        output.writeMessage(2, new_.get(i));
      }
      for (int i = 0; i < updated_.size(); i++) {
        output.writeMessage(3, updated_.get(i));
      }
      for (int i = 0; i < removed_.size(); i++) {
        output.writeString(4, removed_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      for (int i = 0; i < new_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, new_.get(i));
      }
      for (int i = 0; i < updated_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, updated_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(removed_.get(i));
        }
        size += dataSize;
        size += 1 * getRemovedList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * S-&gt;C
     * </pre>
     *
     * Protobuf type {@code brahma.AppsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.AppsResponse)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponseOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.AppsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType getType() {
        return instance.getType();
      }
      /**
       * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
       */
      public Builder setType(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .brahma.AppsResponse.AppsResponseType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getNewList() {
        return java.util.Collections.unmodifiableList(
            instance.getNewList());
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public int getNewCount() {
        return instance.getNewCount();
      }/**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getNew(int index) {
        return instance.getNew(index);
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder setNew(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.setNew(index, value);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder setNew(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setNew(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder addNew(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addNew(value);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder addNew(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addNew(index, value);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder addNew(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addNew(builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder addNew(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addNew(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder addAllNew(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
        copyOnWrite();
        instance.addAllNew(values);
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder clearNew() {
        copyOnWrite();
        instance.clearNew();
        return this;
      }
      /**
       * <pre>
       * list of apps to insert
       * </pre>
       *
       * <code>repeated .brahma.AppInfo new = 2;</code>
       */
      public Builder removeNew(int index) {
        copyOnWrite();
        instance.removeNew(index);
        return this;
      }

      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public java.util.List<brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> getUpdatedList() {
        return java.util.Collections.unmodifiableList(
            instance.getUpdatedList());
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public int getUpdatedCount() {
        return instance.getUpdatedCount();
      }/**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getUpdated(int index) {
        return instance.getUpdated(index);
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder setUpdated(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.setUpdated(index, value);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder setUpdated(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setUpdated(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder addUpdated(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addUpdated(value);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder addUpdated(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo value) {
        copyOnWrite();
        instance.addUpdated(index, value);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder addUpdated(
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdated(builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder addUpdated(
          int index, brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdated(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder addAllUpdated(
          java.lang.Iterable<? extends brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo> values) {
        copyOnWrite();
        instance.addAllUpdated(values);
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder clearUpdated() {
        copyOnWrite();
        instance.clearUpdated();
        return this;
      }
      /**
       * <pre>
       * list of apps to update (changed name/icon?)
       * </pre>
       *
       * <code>repeated .brahma.AppInfo updated = 3;</code>
       */
      public Builder removeUpdated(int index) {
        copyOnWrite();
        instance.removeUpdated(index);
        return this;
      }

      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public java.util.List<String>
          getRemovedList() {
        return java.util.Collections.unmodifiableList(
            instance.getRemovedList());
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public int getRemovedCount() {
        return instance.getRemovedCount();
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public java.lang.String getRemoved(int index) {
        return instance.getRemoved(index);
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRemovedBytes(int index) {
        return instance.getRemovedBytes(index);
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public Builder setRemoved(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setRemoved(index, value);
        return this;
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public Builder addRemoved(
          java.lang.String value) {
        copyOnWrite();
        instance.addRemoved(value);
        return this;
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public Builder addAllRemoved(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllRemoved(values);
        return this;
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public Builder clearRemoved() {
        copyOnWrite();
        instance.clearRemoved();
        return this;
      }
      /**
       * <pre>
       * list of apps to remove (only pkgName needed)
       * </pre>
       *
       * <code>repeated string removed = 4;</code>
       */
      public Builder addRemovedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addRemovedBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.AppsResponse)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getNewCount(); i++) {
            if (!getNew(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getUpdatedCount(); i++) {
            if (!getUpdated(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          new_.makeImmutable();
          updated_.makeImmutable();
          removed_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          new_= visitor.visitList(new_, other.new_);
          updated_= visitor.visitList(updated_, other.updated_);
          removed_= visitor.visitList(removed_, other.removed_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType value = brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.AppsResponseType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  if (!new_.isModifiable()) {
                    new_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(new_);
                  }
                  new_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!updated_.isModifiable()) {
                    updated_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(updated_);
                  }
                  updated_.add(
                      input.readMessage(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.parser(), extensionRegistry));
                  break;
                }
                case 34: {
                  String s = input.readString();
                  if (!removed_.isModifiable()) {
                    removed_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(removed_);
                  }
                  removed_.add(s);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.AppsResponse)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AppsResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AppsResponse> PARSER;

    public static com.google.protobuf.Parser<AppsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AppInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.AppInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    boolean hasPkgName();
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    java.lang.String getPkgName();
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    com.google.protobuf.ByteString
        getPkgNameBytes();

    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    boolean hasAppName();
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    java.lang.String getAppName();
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    com.google.protobuf.ByteString
        getAppNameBytes();

    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    boolean hasIcon();
    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    com.google.protobuf.ByteString getIcon();

    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    boolean hasIconHash();
    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    com.google.protobuf.ByteString getIconHash();
  }
  /**
   * <pre>
   * C&lt;-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.AppInfo}
   */
  public  static final class AppInfo extends
      com.google.protobuf.GeneratedMessageLite<
          AppInfo, AppInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.AppInfo)
      AppInfoOrBuilder {
    private AppInfo() {
      pkgName_ = "";
      appName_ = "";
      icon_ = com.google.protobuf.ByteString.EMPTY;
      iconHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int PKGNAME_FIELD_NUMBER = 1;
    private java.lang.String pkgName_;
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    public boolean hasPkgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    public java.lang.String getPkgName() {
      return pkgName_;
    }
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPkgNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pkgName_);
    }
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    private void setPkgName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      pkgName_ = value;
    }
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    private void clearPkgName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pkgName_ = getDefaultInstance().getPkgName();
    }
    /**
     * <pre>
     * primary key, ex: org.mitre.brahma.client
     * </pre>
     *
     * <code>required string pkgName = 1;</code>
     */
    private void setPkgNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      pkgName_ = value.toStringUtf8();
    }

    public static final int APPNAME_FIELD_NUMBER = 2;
    private java.lang.String appName_;
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    public boolean hasAppName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    public java.lang.String getAppName() {
      return appName_;
    }
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAppNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(appName_);
    }
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    private void setAppName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      appName_ = value;
    }
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    private void clearAppName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      appName_ = getDefaultInstance().getAppName();
    }
    /**
     * <pre>
     * user-friendly name, ex: brahma Client
     * </pre>
     *
     * <code>required string appName = 2;</code>
     */
    private void setAppNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      appName_ = value.toStringUtf8();
    }

    public static final int ICON_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString icon_;
    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    public com.google.protobuf.ByteString getIcon() {
      return icon_;
    }
    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    private void setIcon(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      icon_ = value;
    }
    /**
     * <pre>
     * null in Request
     * </pre>
     *
     * <code>optional bytes icon = 3;</code>
     */
    private void clearIcon() {
      bitField0_ = (bitField0_ & ~0x00000004);
      icon_ = getDefaultInstance().getIcon();
    }

    public static final int ICONHASH_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString iconHash_;
    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    public boolean hasIconHash() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    public com.google.protobuf.ByteString getIconHash() {
      return iconHash_;
    }
    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    private void setIconHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      iconHash_ = value;
    }
    /**
     * <pre>
     * null in Response
     * </pre>
     *
     * <code>optional bytes iconHash = 4;</code>
     */
    private void clearIconHash() {
      bitField0_ = (bitField0_ & ~0x00000008);
      iconHash_ = getDefaultInstance().getIconHash();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPkgName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getAppName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, icon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, iconHash_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPkgName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, icon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, iconHash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C&lt;-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.AppInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.AppInfo)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfoOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.AppInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public boolean hasPkgName() {
        return instance.hasPkgName();
      }
      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public java.lang.String getPkgName() {
        return instance.getPkgName();
      }
      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPkgNameBytes() {
        return instance.getPkgNameBytes();
      }
      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public Builder setPkgName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPkgName(value);
        return this;
      }
      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public Builder clearPkgName() {
        copyOnWrite();
        instance.clearPkgName();
        return this;
      }
      /**
       * <pre>
       * primary key, ex: org.mitre.brahma.client
       * </pre>
       *
       * <code>required string pkgName = 1;</code>
       */
      public Builder setPkgNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPkgNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public boolean hasAppName() {
        return instance.hasAppName();
      }
      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public java.lang.String getAppName() {
        return instance.getAppName();
      }
      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAppNameBytes() {
        return instance.getAppNameBytes();
      }
      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public Builder setAppName(
          java.lang.String value) {
        copyOnWrite();
        instance.setAppName(value);
        return this;
      }
      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public Builder clearAppName() {
        copyOnWrite();
        instance.clearAppName();
        return this;
      }
      /**
       * <pre>
       * user-friendly name, ex: brahma Client
       * </pre>
       *
       * <code>required string appName = 2;</code>
       */
      public Builder setAppNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAppNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * null in Request
       * </pre>
       *
       * <code>optional bytes icon = 3;</code>
       */
      public boolean hasIcon() {
        return instance.hasIcon();
      }
      /**
       * <pre>
       * null in Request
       * </pre>
       *
       * <code>optional bytes icon = 3;</code>
       */
      public com.google.protobuf.ByteString getIcon() {
        return instance.getIcon();
      }
      /**
       * <pre>
       * null in Request
       * </pre>
       *
       * <code>optional bytes icon = 3;</code>
       */
      public Builder setIcon(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIcon(value);
        return this;
      }
      /**
       * <pre>
       * null in Request
       * </pre>
       *
       * <code>optional bytes icon = 3;</code>
       */
      public Builder clearIcon() {
        copyOnWrite();
        instance.clearIcon();
        return this;
      }

      /**
       * <pre>
       * null in Response
       * </pre>
       *
       * <code>optional bytes iconHash = 4;</code>
       */
      public boolean hasIconHash() {
        return instance.hasIconHash();
      }
      /**
       * <pre>
       * null in Response
       * </pre>
       *
       * <code>optional bytes iconHash = 4;</code>
       */
      public com.google.protobuf.ByteString getIconHash() {
        return instance.getIconHash();
      }
      /**
       * <pre>
       * null in Response
       * </pre>
       *
       * <code>optional bytes iconHash = 4;</code>
       */
      public Builder setIconHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIconHash(value);
        return this;
      }
      /**
       * <pre>
       * null in Response
       * </pre>
       *
       * <code>optional bytes iconHash = 4;</code>
       */
      public Builder clearIconHash() {
        copyOnWrite();
        instance.clearIconHash();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.AppInfo)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasPkgName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAppName()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo) arg1;
          pkgName_ = visitor.visitString(
              hasPkgName(), pkgName_,
              other.hasPkgName(), other.pkgName_);
          appName_ = visitor.visitString(
              hasAppName(), appName_,
              other.hasAppName(), other.appName_);
          icon_ = visitor.visitByteString(
              hasIcon(), icon_,
              other.hasIcon(), other.icon_);
          iconHash_ = visitor.visitByteString(
              hasIconHash(), iconHash_,
              other.hasIconHash(), other.iconHash_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  pkgName_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  appName_ = s;
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  icon_ = input.readBytes();
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000008;
                  iconHash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.AppInfo)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AppInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.AppInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AppInfo> PARSER;

    public static com.google.protobuf.Parser<AppInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface KeyEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.KeyEvent)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 eventTime = 1;</code>
     */
    boolean hasEventTime();
    /**
     * <code>required int64 eventTime = 1;</code>
     */
    long getEventTime();

    /**
     * <code>required int32 deviceId = 2;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required int32 deviceId = 2;</code>
     */
    int getDeviceId();

    /**
     * <code>required int32 flags = 3;</code>
     */
    boolean hasFlags();
    /**
     * <code>required int32 flags = 3;</code>
     */
    int getFlags();

    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    boolean hasDownTime();
    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    long getDownTime();

    /**
     * <code>optional int32 action = 5;</code>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 5;</code>
     */
    int getAction();

    /**
     * <code>optional int32 code = 6;</code>
     */
    boolean hasCode();
    /**
     * <code>optional int32 code = 6;</code>
     */
    int getCode();

    /**
     * <code>optional int32 repeat = 7;</code>
     */
    boolean hasRepeat();
    /**
     * <code>optional int32 repeat = 7;</code>
     */
    int getRepeat();

    /**
     * <code>optional int32 metaState = 8;</code>
     */
    boolean hasMetaState();
    /**
     * <code>optional int32 metaState = 8;</code>
     */
    int getMetaState();

    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    boolean hasScanCode();
    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    int getScanCode();

    /**
     * <code>optional int32 source = 10;</code>
     */
    boolean hasSource();
    /**
     * <code>optional int32 source = 10;</code>
     */
    int getSource();

    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    boolean hasCharacters();
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    java.lang.String getCharacters();
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    com.google.protobuf.ByteString
        getCharactersBytes();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.KeyEvent}
   */
  public  static final class KeyEvent extends
      com.google.protobuf.GeneratedMessageLite<
          KeyEvent, KeyEvent.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.KeyEvent)
      KeyEventOrBuilder {
    private KeyEvent() {
      characters_ = "";
    }
    private int bitField0_;
    public static final int EVENTTIME_FIELD_NUMBER = 1;
    private long eventTime_;
    /**
     * <code>required int64 eventTime = 1;</code>
     */
    public boolean hasEventTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 eventTime = 1;</code>
     */
    public long getEventTime() {
      return eventTime_;
    }
    /**
     * <code>required int64 eventTime = 1;</code>
     */
    private void setEventTime(long value) {
      bitField0_ |= 0x00000001;
      eventTime_ = value;
    }
    /**
     * <code>required int64 eventTime = 1;</code>
     */
    private void clearEventTime() {
      bitField0_ = (bitField0_ & ~0x00000001);
      eventTime_ = 0L;
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private int deviceId_;
    /**
     * <code>required int32 deviceId = 2;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 deviceId = 2;</code>
     */
    public int getDeviceId() {
      return deviceId_;
    }
    /**
     * <code>required int32 deviceId = 2;</code>
     */
    private void setDeviceId(int value) {
      bitField0_ |= 0x00000002;
      deviceId_ = value;
    }
    /**
     * <code>required int32 deviceId = 2;</code>
     */
    private void clearDeviceId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      deviceId_ = 0;
    }

    public static final int FLAGS_FIELD_NUMBER = 3;
    private int flags_;
    /**
     * <code>required int32 flags = 3;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 flags = 3;</code>
     */
    public int getFlags() {
      return flags_;
    }
    /**
     * <code>required int32 flags = 3;</code>
     */
    private void setFlags(int value) {
      bitField0_ |= 0x00000004;
      flags_ = value;
    }
    /**
     * <code>required int32 flags = 3;</code>
     */
    private void clearFlags() {
      bitField0_ = (bitField0_ & ~0x00000004);
      flags_ = 0;
    }

    public static final int DOWNTIME_FIELD_NUMBER = 4;
    private long downTime_;
    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    public boolean hasDownTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    public long getDownTime() {
      return downTime_;
    }
    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    private void setDownTime(long value) {
      bitField0_ |= 0x00000008;
      downTime_ = value;
    }
    /**
     * <pre>
     * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional int64 downTime = 4;</code>
     */
    private void clearDownTime() {
      bitField0_ = (bitField0_ & ~0x00000008);
      downTime_ = 0L;
    }

    public static final int ACTION_FIELD_NUMBER = 5;
    private int action_;
    /**
     * <code>optional int32 action = 5;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 action = 5;</code>
     */
    public int getAction() {
      return action_;
    }
    /**
     * <code>optional int32 action = 5;</code>
     */
    private void setAction(int value) {
      bitField0_ |= 0x00000010;
      action_ = value;
    }
    /**
     * <code>optional int32 action = 5;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000010);
      action_ = 0;
    }

    public static final int CODE_FIELD_NUMBER = 6;
    private int code_;
    /**
     * <code>optional int32 code = 6;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 code = 6;</code>
     */
    public int getCode() {
      return code_;
    }
    /**
     * <code>optional int32 code = 6;</code>
     */
    private void setCode(int value) {
      bitField0_ |= 0x00000020;
      code_ = value;
    }
    /**
     * <code>optional int32 code = 6;</code>
     */
    private void clearCode() {
      bitField0_ = (bitField0_ & ~0x00000020);
      code_ = 0;
    }

    public static final int REPEAT_FIELD_NUMBER = 7;
    private int repeat_;
    /**
     * <code>optional int32 repeat = 7;</code>
     */
    public boolean hasRepeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 repeat = 7;</code>
     */
    public int getRepeat() {
      return repeat_;
    }
    /**
     * <code>optional int32 repeat = 7;</code>
     */
    private void setRepeat(int value) {
      bitField0_ |= 0x00000040;
      repeat_ = value;
    }
    /**
     * <code>optional int32 repeat = 7;</code>
     */
    private void clearRepeat() {
      bitField0_ = (bitField0_ & ~0x00000040);
      repeat_ = 0;
    }

    public static final int METASTATE_FIELD_NUMBER = 8;
    private int metaState_;
    /**
     * <code>optional int32 metaState = 8;</code>
     */
    public boolean hasMetaState() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 metaState = 8;</code>
     */
    public int getMetaState() {
      return metaState_;
    }
    /**
     * <code>optional int32 metaState = 8;</code>
     */
    private void setMetaState(int value) {
      bitField0_ |= 0x00000080;
      metaState_ = value;
    }
    /**
     * <code>optional int32 metaState = 8;</code>
     */
    private void clearMetaState() {
      bitField0_ = (bitField0_ & ~0x00000080);
      metaState_ = 0;
    }

    public static final int SCANCODE_FIELD_NUMBER = 9;
    private int scanCode_;
    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    public boolean hasScanCode() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    public int getScanCode() {
      return scanCode_;
    }
    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    private void setScanCode(int value) {
      bitField0_ |= 0x00000100;
      scanCode_ = value;
    }
    /**
     * <code>optional int32 scanCode = 9;</code>
     */
    private void clearScanCode() {
      bitField0_ = (bitField0_ & ~0x00000100);
      scanCode_ = 0;
    }

    public static final int SOURCE_FIELD_NUMBER = 10;
    private int source_;
    /**
     * <code>optional int32 source = 10;</code>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 source = 10;</code>
     */
    public int getSource() {
      return source_;
    }
    /**
     * <code>optional int32 source = 10;</code>
     */
    private void setSource(int value) {
      bitField0_ |= 0x00000200;
      source_ = value;
    }
    /**
     * <code>optional int32 source = 10;</code>
     */
    private void clearSource() {
      bitField0_ = (bitField0_ & ~0x00000200);
      source_ = 0;
    }

    public static final int CHARACTERS_FIELD_NUMBER = 11;
    private java.lang.String characters_;
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    public boolean hasCharacters() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    public java.lang.String getCharacters() {
      return characters_;
    }
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    public com.google.protobuf.ByteString
        getCharactersBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(characters_);
    }
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    private void setCharacters(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      characters_ = value;
    }
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    private void clearCharacters() {
      bitField0_ = (bitField0_ & ~0x00000400);
      characters_ = getDefaultInstance().getCharacters();
    }
    /**
     * <pre>
     * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
     * </pre>
     *
     * <code>optional string characters = 11;</code>
     */
    private void setCharactersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      characters_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, eventTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, flags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, downTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, action_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, repeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, metaState_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, scanCode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, source_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeString(11, getCharacters());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, eventTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, flags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, downTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, action_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, repeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, metaState_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, scanCode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, source_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getCharacters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.KeyEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.KeyEvent)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEventOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.KeyEvent.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public boolean hasEventTime() {
        return instance.hasEventTime();
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public long getEventTime() {
        return instance.getEventTime();
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public Builder setEventTime(long value) {
        copyOnWrite();
        instance.setEventTime(value);
        return this;
      }
      /**
       * <code>required int64 eventTime = 1;</code>
       */
      public Builder clearEventTime() {
        copyOnWrite();
        instance.clearEventTime();
        return this;
      }

      /**
       * <code>required int32 deviceId = 2;</code>
       */
      public boolean hasDeviceId() {
        return instance.hasDeviceId();
      }
      /**
       * <code>required int32 deviceId = 2;</code>
       */
      public int getDeviceId() {
        return instance.getDeviceId();
      }
      /**
       * <code>required int32 deviceId = 2;</code>
       */
      public Builder setDeviceId(int value) {
        copyOnWrite();
        instance.setDeviceId(value);
        return this;
      }
      /**
       * <code>required int32 deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        copyOnWrite();
        instance.clearDeviceId();
        return this;
      }

      /**
       * <code>required int32 flags = 3;</code>
       */
      public boolean hasFlags() {
        return instance.hasFlags();
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public int getFlags() {
        return instance.getFlags();
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public Builder setFlags(int value) {
        copyOnWrite();
        instance.setFlags(value);
        return this;
      }
      /**
       * <code>required int32 flags = 3;</code>
       */
      public Builder clearFlags() {
        copyOnWrite();
        instance.clearFlags();
        return this;
      }

      /**
       * <pre>
       * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional int64 downTime = 4;</code>
       */
      public boolean hasDownTime() {
        return instance.hasDownTime();
      }
      /**
       * <pre>
       * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional int64 downTime = 4;</code>
       */
      public long getDownTime() {
        return instance.getDownTime();
      }
      /**
       * <pre>
       * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional int64 downTime = 4;</code>
       */
      public Builder setDownTime(long value) {
        copyOnWrite();
        instance.setDownTime(value);
        return this;
      }
      /**
       * <pre>
       * the following attributes are used whenever action is not ACTION_MULTIPLE, OR key code is not KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional int64 downTime = 4;</code>
       */
      public Builder clearDownTime() {
        copyOnWrite();
        instance.clearDownTime();
        return this;
      }

      /**
       * <code>optional int32 action = 5;</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>optional int32 action = 5;</code>
       */
      public int getAction() {
        return instance.getAction();
      }
      /**
       * <code>optional int32 action = 5;</code>
       */
      public Builder setAction(int value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>optional int32 action = 5;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>optional int32 code = 6;</code>
       */
      public boolean hasCode() {
        return instance.hasCode();
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <code>optional int32 repeat = 7;</code>
       */
      public boolean hasRepeat() {
        return instance.hasRepeat();
      }
      /**
       * <code>optional int32 repeat = 7;</code>
       */
      public int getRepeat() {
        return instance.getRepeat();
      }
      /**
       * <code>optional int32 repeat = 7;</code>
       */
      public Builder setRepeat(int value) {
        copyOnWrite();
        instance.setRepeat(value);
        return this;
      }
      /**
       * <code>optional int32 repeat = 7;</code>
       */
      public Builder clearRepeat() {
        copyOnWrite();
        instance.clearRepeat();
        return this;
      }

      /**
       * <code>optional int32 metaState = 8;</code>
       */
      public boolean hasMetaState() {
        return instance.hasMetaState();
      }
      /**
       * <code>optional int32 metaState = 8;</code>
       */
      public int getMetaState() {
        return instance.getMetaState();
      }
      /**
       * <code>optional int32 metaState = 8;</code>
       */
      public Builder setMetaState(int value) {
        copyOnWrite();
        instance.setMetaState(value);
        return this;
      }
      /**
       * <code>optional int32 metaState = 8;</code>
       */
      public Builder clearMetaState() {
        copyOnWrite();
        instance.clearMetaState();
        return this;
      }

      /**
       * <code>optional int32 scanCode = 9;</code>
       */
      public boolean hasScanCode() {
        return instance.hasScanCode();
      }
      /**
       * <code>optional int32 scanCode = 9;</code>
       */
      public int getScanCode() {
        return instance.getScanCode();
      }
      /**
       * <code>optional int32 scanCode = 9;</code>
       */
      public Builder setScanCode(int value) {
        copyOnWrite();
        instance.setScanCode(value);
        return this;
      }
      /**
       * <code>optional int32 scanCode = 9;</code>
       */
      public Builder clearScanCode() {
        copyOnWrite();
        instance.clearScanCode();
        return this;
      }

      /**
       * <code>optional int32 source = 10;</code>
       */
      public boolean hasSource() {
        return instance.hasSource();
      }
      /**
       * <code>optional int32 source = 10;</code>
       */
      public int getSource() {
        return instance.getSource();
      }
      /**
       * <code>optional int32 source = 10;</code>
       */
      public Builder setSource(int value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <code>optional int32 source = 10;</code>
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public boolean hasCharacters() {
        return instance.hasCharacters();
      }
      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public java.lang.String getCharacters() {
        return instance.getCharacters();
      }
      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public com.google.protobuf.ByteString
          getCharactersBytes() {
        return instance.getCharactersBytes();
      }
      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public Builder setCharacters(
          java.lang.String value) {
        copyOnWrite();
        instance.setCharacters(value);
        return this;
      }
      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public Builder clearCharacters() {
        copyOnWrite();
        instance.clearCharacters();
        return this;
      }
      /**
       * <pre>
       * this attribute is used for the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN
       * </pre>
       *
       * <code>optional string characters = 11;</code>
       */
      public Builder setCharactersBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCharactersBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.KeyEvent)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasEventTime()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasDeviceId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFlags()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent) arg1;
          eventTime_ = visitor.visitLong(
              hasEventTime(), eventTime_,
              other.hasEventTime(), other.eventTime_);
          deviceId_ = visitor.visitInt(
              hasDeviceId(), deviceId_,
              other.hasDeviceId(), other.deviceId_);
          flags_ = visitor.visitInt(
              hasFlags(), flags_,
              other.hasFlags(), other.flags_);
          downTime_ = visitor.visitLong(
              hasDownTime(), downTime_,
              other.hasDownTime(), other.downTime_);
          action_ = visitor.visitInt(
              hasAction(), action_,
              other.hasAction(), other.action_);
          code_ = visitor.visitInt(
              hasCode(), code_,
              other.hasCode(), other.code_);
          repeat_ = visitor.visitInt(
              hasRepeat(), repeat_,
              other.hasRepeat(), other.repeat_);
          metaState_ = visitor.visitInt(
              hasMetaState(), metaState_,
              other.hasMetaState(), other.metaState_);
          scanCode_ = visitor.visitInt(
              hasScanCode(), scanCode_,
              other.hasScanCode(), other.scanCode_);
          source_ = visitor.visitInt(
              hasSource(), source_,
              other.hasSource(), other.source_);
          characters_ = visitor.visitString(
              hasCharacters(), characters_,
              other.hasCharacters(), other.characters_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  eventTime_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  deviceId_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  flags_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  downTime_ = input.readInt64();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  action_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  code_ = input.readInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  repeat_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  metaState_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  scanCode_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  source_ = input.readInt32();
                  break;
                }
                case 90: {
                  String s = input.readString();
                  bitField0_ |= 0x00000400;
                  characters_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.KeyEvent)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KeyEvent();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.KeyEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KeyEvent> PARSER;

    public static com.google.protobuf.Parser<KeyEvent> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:brahma.Config)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    boolean hasHardKeyboard();
    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    boolean getHardKeyboard();
  }
  /**
   * <pre>
   * C-&gt;S
   * </pre>
   *
   * Protobuf type {@code brahma.Config}
   */
  public  static final class Config extends
      com.google.protobuf.GeneratedMessageLite<
          Config, Config.Builder> implements
      // @@protoc_insertion_point(message_implements:brahma.Config)
      ConfigOrBuilder {
    private Config() {
    }
    private int bitField0_;
    public static final int HARDKEYBOARD_FIELD_NUMBER = 1;
    private boolean hardKeyboard_;
    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    public boolean hasHardKeyboard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    public boolean getHardKeyboard() {
      return hardKeyboard_;
    }
    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    private void setHardKeyboard(boolean value) {
      bitField0_ |= 0x00000001;
      hardKeyboard_ = value;
    }
    /**
     * <pre>
     * whether or not we have a hard keyboard attached
     * </pre>
     *
     * <code>optional bool hardKeyboard = 1;</code>
     */
    private void clearHardKeyboard() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hardKeyboard_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hardKeyboard_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hardKeyboard_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * C-&gt;S
     * </pre>
     *
     * Protobuf type {@code brahma.Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config, Builder> implements
        // @@protoc_insertion_point(builder_implements:brahma.Config)
        brahma.vmi.covid2019.protocol.BRAHMAProtocol.ConfigOrBuilder {
      // Construct using brahma.vmi.brahmalibrary.protocol.BRAHMAProtocol.Config.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * whether or not we have a hard keyboard attached
       * </pre>
       *
       * <code>optional bool hardKeyboard = 1;</code>
       */
      public boolean hasHardKeyboard() {
        return instance.hasHardKeyboard();
      }
      /**
       * <pre>
       * whether or not we have a hard keyboard attached
       * </pre>
       *
       * <code>optional bool hardKeyboard = 1;</code>
       */
      public boolean getHardKeyboard() {
        return instance.getHardKeyboard();
      }
      /**
       * <pre>
       * whether or not we have a hard keyboard attached
       * </pre>
       *
       * <code>optional bool hardKeyboard = 1;</code>
       */
      public Builder setHardKeyboard(boolean value) {
        copyOnWrite();
        instance.setHardKeyboard(value);
        return this;
      }
      /**
       * <pre>
       * whether or not we have a hard keyboard attached
       * </pre>
       *
       * <code>optional bool hardKeyboard = 1;</code>
       */
      public Builder clearHardKeyboard() {
        copyOnWrite();
        instance.clearHardKeyboard();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:brahma.Config)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config other = (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config) arg1;
          hardKeyboard_ = visitor.visitBoolean(
              hasHardKeyboard(), hardKeyboard_,
              other.hasHardKeyboard(), other.hardKeyboard_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  hardKeyboard_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:brahma.Config)
    private static final brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Config();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static brahma.vmi.covid2019.protocol.BRAHMAProtocol.Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Config> PARSER;

    public static com.google.protobuf.Parser<Config> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

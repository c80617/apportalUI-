apply plugin: 'com.android.application'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.1'
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "brahma.vmi.fet"
        minSdkVersion 24
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 1
        versionName "fet 1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_STL=c++_shared", "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"
                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"
                // Sets optional flags for the C++ compiler.
                cppFlags "-frtti -fexceptions -std=c++14"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            storeFile file("key.jks")
            storePassword "a50454"
            keyAlias "tung"
            keyPassword "a50454"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    useLibrary 'org.apache.http.legacy'

    lintOptions {
        disable "ResourceType"
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
        resolutionStrategy.force "android.arch.lifecycle:runtime:1.1.1"
    }
    lintOptions {
        abortOnError false
    }
}
repositories {
    jcenter {
        url 'http://jcenter.bintray.com'
    }
    maven { url '/home/a50077/Android/Sdk/extras/android/m2repository' }
    google()
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    implementation files('libs/protobuf-java-3.2.0.jar')
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.2.0@aar'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'org.webrtc:google-webrtc:1.0.20492'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation('com.microsoft.aad:adal:1.16.3') {
        exclude group: 'com.android.support'
    }
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.0'
    implementation 'com.google.firebase:firebase-core:17.4.2'
    implementation 'com.google.android.gms:play-services-vision:20.0.0'

    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    //Arch
    implementation 'androidx.arch.core:core-runtime:2.1.0'
    implementation 'androidx.arch.core:core-common:2.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'jp.wasabeef:takt:1.0.5'
    debugApi "com.github.brianPlummer:tinydancer:0.1.2"
    releaseApi "com.github.brianPlummer:tinydancer-noop:0.1.2"
    testImplementation "com.github.brianPlummer:tinydancer-noop:0.1.2"
    implementation 'moe.feng.support.biometricprompt:library:1.0.0'
    compileOnly files(getLayoutLibPath())
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.2'
    implementation 'com.google.firebase:firebase-crashlytics-ndk:17.0.0'
    def camerax_version = '1.0.0-beta03'
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation 'androidx.camera:camera-view:1.0.0-alpha10'
    implementation "androidx.camera:camera-extensions:1.0.0-alpha10"
    implementation 'com.google.android.material:material:1.1.0'
    def preference_version = "1.1.1"
    implementation "androidx.preference:preference:$preference_version"
    implementation 'androidx.biometric:biometric:1.0.1'
    implementation "com.leinardi.android:speed-dial:3.1.1"
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def getLayoutLibPath() {
    return "${android.getSdkDirectory().getAbsolutePath()}" + "/platforms/" + android.compileSdkVersion + "/data/layoutlib.jar"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'